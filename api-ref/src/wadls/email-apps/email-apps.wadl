<?xml version="1.0" encoding="UTF-8"?>
<application xmlns="http://wadl.dev.java.net/2009/02"
   xmlns:wadl="http://wadl.dev.java.net/2009/02"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns:xs="http://www.w3.org/2001/XMLSchema"
   xmlns:raxapi="http://docs.rackspace.com/volume/api/v1">
   <resources base="http://api.emailsrvr.com/" xml:id="email">
      <resource path="/v0/customers" id="d1e259a1310">
         <method id="d1e7" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Index (Reseller Only)">
               <para role="shortdesc">Lists customers that the
                  authenticated user has access to.</para>
               <para>Filter/Search</para>
               <para>Search parameter 'startswith' and 'contains' will
                  try to find the result in customer name, account
                  number and reference number. We also provide a
                  separate query method ?referenceNumber=123456 that
                  will return a Show on the exact customer whose
                  reference number is as specified.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET '/customers?size=100\u0026offset=10,'
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;customerList
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:customerList"&gt;
                        &lt;offset&gt;0&lt;/offset&gt;
                        &lt;size&gt;50&lt;/size&gt;
                        &lt;total&gt;3&lt;/total&gt; &lt;customers&gt;
                        &lt;customer&gt; &lt;name&gt;API Customer
                        17&lt;/name&gt;
                        &lt;accountNumber&gt;460182&lt;/accountNumber&gt;
                        &lt;referenceNumber&gt;49&lt;/referenceNumber&gt;
                        &lt;/customer&gt; &lt;customer&gt;
                        &lt;name&gt;API Customer 39&lt;/name&gt;
                        &lt;accountNumber&gt;460181&lt;/accountNumber&gt;
                        &lt;referenceNumber&gt;23&lt;/referenceNumber&gt;
                        &lt;/customer&gt; &lt;customer&gt;
                        &lt;name&gt;API Customer 50&lt;/name&gt;
                        &lt;accountNumber&gt;460183&lt;/accountNumber&gt;
                        &lt;referenceNumber&gt;10&lt;/referenceNumber&gt;
                        &lt;/customer&gt; &lt;/customers&gt;
                        &lt;/customerList&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"offset":0,"size":50,"total":3,"customers":
                        [{"name":"API Customer
                        17","accountNumber":"460182","referenceNumber":"49"},
                        {"name":"API Customer
                        39","accountNumber":"460181","referenceNumber":"23"},
                        {"name":"API Customer
                        50","accountNumber":"460183","referenceNumber":"10"}]}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource path="/v0/customers/{customeraccountnumber}"
         id="d1e464a1310">
         <param name="customeraccountnumber" style="template"
            required="true"/>
         <method id="d1e60" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Show (Reseller Only)">
               <para role="shortdesc">Shows account details.</para>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>To do the show operation on the account
                        that is logged in instead of a customer's
                        account, use "me" in the place of the customer
                        account number i.e.
                        'https://api.emailsrvr.com/v0/customers/me'.</para>
                  </listitem>
                  <listitem>
                     <para>The show operation only supports the GET
                        HTTP verb. For text/xml format, refer to the
                        following schema document: <link
                           xlink:href="http://api.emailsrvr.com/Schemas/Customer.xsd"
                           >Customer.xsd</link>
                     </para>
                  </listitem>
               </itemizedlist>
               <para>Example: Querying with Reference Number</para>
               <para>The query string "referenceNumber=xx" searches
                  for a customer with an exact reference
                  number.</para>
               <itemizedlist>
                  <listitem>
                     <para>GET '/customers?referenceNumber=49',
                        'text/xml'</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET /customers/me, text/xml" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;customer
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:customer"&gt; &lt;name&gt;API
                        Customer 17&lt;/name&gt;
                        &lt;accountNumber&gt;460182&lt;/accountNumber&gt;
                        &lt;referenceNumber&gt;49&lt;/referenceNumber&gt;
                        &lt;/customer&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"name":"API Customer
                        17","accountNumber":"460182","referenceNumber":"49"}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource path="/customers" id="d1e690a1310">
         <method id="d1e142" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Add (Reseller Only)">
               <para role="shortdesc">Adds a sub-account. Note that
                  customer number is not known until the customer is
                  added.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>name</td>
                        <td>string</td>
                        <td>The customer's display name (Required for
                           Add)</td>
                     </tr>
                     <tr>
                        <td>referenceNumber</td>
                        <td>string</td>
                        <td>The reference number of this account</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST '/customers', 'text/xml', { 'name'
                        =\u003E 'Name' }" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>The name field was not specified. Sample
                     Message: Missing required field: name</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>The name field cannot be blank. Sample
                     Message: Required field name cannot be
                     empty</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Names cannot start with a space. Sample
                     Message: Improper Customer Name</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource path="/customers/{customer_account_number}"
         id="d1e972a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <method id="d1e255" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Edit (Reseller Only)">
               <para role="shortdesc">Edit a new sub-account.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>name</td>
                        <td>string</td>
                        <td>The customer's display name (Required for
                           Add)</td>
                     </tr>
                     <tr>
                        <td>referenceNumber</td>
                        <td>string</td>
                        <td>The reference number of this account</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT '/customers/999999', 'text/xml', { 'name'
                        =\u003E 'NewName', 'referenceNumber' =\u003E
                        '12345' }" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>The name field was not specified. Sample
                     Message: Missing required field: name</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>The name field cannot be blank. Sample
                     Message: Required field name cannot be
                     empty</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Names cannot start with a space. Sample
                     Message: Improper Customer Name</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource path="/customers/{customer_account_number}"
         id="d1e1255a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <method id="d1e368" name="DELETE">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Delete Account (Reseller Only)">
               <para role="shortdesc">Deletes the account</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >DELETE '/customers/999999', 'text/xml'"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource path="/customers/{customer_account_number}/loginToken"
         id="d1e1434a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <method id="d1e397" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Create Login Tokens">
               <para role="shortdesc">Generates a login token using
                  which a customer can use to SSO into the Control
                  Panel.</para>
               <para>Login tokens can be generated for two kinds of
                  users: virtual and non-virtual.</para>
               <itemizedlist>
                  <listitem>
                     <para>Virtual user gets the administrator's
                        privileges when SSOed into the Control
                        Panel.</para>
                  </listitem>
                  <listitem>
                     <para>Non-virtual user gets only as much
                        privileges as are given to him/her when
                        his/her account was created.</para>
                  </listitem>
               </itemizedlist>
               <para>A Login token is valid for ten minutes after its
                  creation. The "dateCreated" field indicates the time
                  when the login token is created.</para>
               <itemizedlist>
                  <listitem>
                     <para>Using the generated login token shown in
                        the example below, the customer with account
                        number 460896 can SSO into the Control Panel
                        using the following URL:
                        http://ControlPanelURL/TokenLogin.aspx?loginToken=EEB0012D8DBC2CAC26E28365D44B537FFF0D79350</para>
                  </listitem>
                  <listitem>
                     <para>A customer can also use the login token to
                        log into their private label control panel
                        (E.g.:
                        cp.mydomain.com/logintokens.aspx).</para>
                  </listitem>
               </itemizedlist>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>userName</td>
                        <td>string</td>
                        <td>The name for which login token needs to be
                           created.</td>
                     </tr>
                     <tr>
                        <td>virtualUser</td>
                        <td>string</td>
                        <td>A flag indicating whether the user for
                           whom the login token needs to be generated
                           is virtual or non-virtual. Valid values:
                           true/false. When set to true, the userName
                           is treated as a virtual user. When set to
                           false, the userName is treated as a
                           non-virtual user. A non-virtual user must
                           be an existing admin user.</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST '/customers/460896/loginToken',
                        'text/xml' { 'userName' =\u003E
                        'dev_cust_limitedadmin', 'virtualUser' =\u003E
                        'true' }" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;loginToken
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:loginToken"&gt;
                        &lt;user&gt;dev_cust_limitedadmin_460896_vu&lt;/user&gt;
                        &lt;token&gt;EEB0012D8DBC2CAC26E28365D44B537FFF0D79350&lt;/token&gt;
                        &lt;dateCreated&gt;6/11/2010 10:53:46
                        AM&lt;/dateCreated&gt;
                        &lt;/loginToken&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
      <resource path="/v0/customers/{customer_account_number}/admins"
         id="d1e1697a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <method id="d1e529" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Index">
               <para role="shortdesc">Lists admins under the account.
                  If a customer account is specified, then a list of
                  admins under that specific account will be
                  returned.</para>
               <itemizedlist>
                  <listitem>
                     <para>This operation returns a list of admins
                        under the account. If a customer account is
                        specified, then a list of admins under that
                        specific account will be returned.</para>
                  </listitem>
                  <listitem>
                     <para>Alternate route: /v0/admins</para>
                  </listitem>
               </itemizedlist>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>To retrieve a list of admins owned by the
                        account that is logged in, use "me" as the
                        customer account number i.e.
                        'https://api.emailsrvr.com/v0/customers/me/domains'.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/999999/admins?size=5\u0026page=1',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;adminList
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:adminList"&gt;
                        &lt;offset&gt;0&lt;/offset&gt;
                        &lt;size&gt;50&lt;/size&gt;
                        &lt;total&gt;3&lt;/total&gt; &lt;admins&gt;
                        &lt;admin&gt;
                        &lt;adminId&gt;apiadmin37&lt;/adminId&gt;
                        &lt;type&gt;super&lt;/type&gt;
                        &lt;enabled&gt;true&lt;/enabled&gt;
                        &lt;locked&gt;false&lt;/locked&gt;
                        &lt;/admin&gt; &lt;admin&gt;
                        &lt;adminId&gt;apiadmin76&lt;/adminId&gt;
                        &lt;type&gt;super&lt;/type&gt;
                        &lt;enabled&gt;true&lt;/enabled&gt;
                        &lt;locked&gt;false&lt;/locked&gt;
                        &lt;/admin&gt; &lt;admin&gt;
                        &lt;adminId&gt;apiadmin94&lt;/adminId&gt;
                        &lt;type&gt;super&lt;/type&gt;
                        &lt;enabled&gt;true&lt;/enabled&gt;
                        &lt;locked&gt;false&lt;/locked&gt;
                        &lt;/admin&gt; &lt;/admins&gt;
                        &lt;/adminList&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"admins":[{"adminId":"apiadmin37","enabled":true,"locked":false,"type":"super"},{"adminId":"apiadmin76","enabled":true,"locked":false,"type":"super"},{"adminId":"apiadmin94","enabled":true,"locked":false,"type":"super"}],"offset":0,"size":50,"total":3}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/admins/{admin_name}"
         id="d1e1911a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="admin_name" style="template" required="true"/>
         <method id="d1e602" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Show">
               <para role="shortdesc">Shows admin details.</para>
               <itemizedlist>
                  <listitem>
                     <para>The show operation will return detailed
                        information about the specified admin.</para>
                  </listitem>
                  <listitem>
                     <para>Alternate route: /v0/admins/{admin
                        name}</para>
                  </listitem>
               </itemizedlist>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>The show operation only supports the GET
                        HTTP verb. For text/xml format, refer to the
                        following schema document: <link
                           xlink:href="http://api.emailsrvr.com/Schemas/Admin.xsd"
                           >Admin.xsd</link>
                     </para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET '/customers/999999/admins/admin1',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;admin
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:admin"&gt;
                        &lt;adminId&gt;apiadmin1&lt;/adminId&gt;
                        &lt;type&gt;super&lt;/type&gt;
                        &lt;enabled&gt;true&lt;/enabled&gt;
                        &lt;locked&gt;false&lt;/locked&gt;
                        &lt;firstName&gt;First&lt;/firstName&gt;
                        &lt;lastName&gt;Last&lt;/lastName&gt;
                        &lt;email&gt;first.last@rackspace.com&lt;/email&gt;
                        &lt;passwordExpiration&gt;10&lt;/passwordExpiration&gt;
                        &lt;allowSimultaneousLogins&gt;false&lt;/allowSimultaneousLogins&gt;
                        &lt;restrictedIps&gt;
                        &lt;restrictedIps&gt;1.1.1.1&lt;/restrictedIps&gt;
                        &lt;restrictedIps&gt;1.1.1.2&lt;/restrictedIps&gt;
                        &lt;restrictedIps&gt;1.1.1.3&lt;/restrictedIps&gt;
                        &lt;/restrictedIps&gt;
                        &lt;/admin&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"adminId":"apiadmin1","allowSimultaneousLogins":false,"email":"first.last@rackspace.com","firstName":"First","enabled":true,"locked":false,"lastName":"Last","passwordExpiration":10,"restrictedIps":["1.1.1.1","1.1.1.2","1.1.1.3"],"type":"super"}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/admins/{admin_name}"
         id="d1e2128a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="admin_name" style="template" required="true"/>
         <method id="d1e678" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Add">
               <para role="shortdesc">Adds an admin under the
                  specified account.</para>
               <itemizedlist>
                  <listitem>
                     <para>Add a new admin under the specified
                        account.</para>
                  </listitem>
                  <listitem>
                     <para>Alternate route: /v0/admins/{admin
                        name}</para>
                  </listitem>
               </itemizedlist>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>type</td>
                        <td>string</td>
                        <td>Admin type (Required for Add). Must be
                           "super", "standard" or "limited". Can't
                           change permissions and domain access for
                           limited admin at this point.</td>
                     </tr>
                     <tr>
                        <td>password</td>
                        <td>string</td>
                        <td>Admin log in password (Required for
                           Add)</td>
                     </tr>
                     <tr>
                        <td>firstName</td>
                        <td>string</td>
                        <td>Admin first name (Required for Add)</td>
                     </tr>
                     <tr>
                        <td>lastName</td>
                        <td>string</td>
                        <td>Admin last name (Required for Add)</td>
                     </tr>
                     <tr>
                        <td>email</td>
                        <td>string</td>
                        <td>Admin contact email (Required for
                           Add)</td>
                     </tr>
                     <tr>
                        <td>securityQuestion</td>
                        <td>string</td>
                        <td>Security question (Required for Add)</td>
                     </tr>
                     <tr>
                        <td>securityAnswer</td>
                        <td>string</td>
                        <td>Security answer (Required for Add)</td>
                     </tr>
                     <tr>
                        <td>passwordExpiration</td>
                        <td>int</td>
                        <td>The number of days in which password
                           expires. 0 means password never
                           expires.</td>
                     </tr>
                     <tr>
                        <td>allowSimultaneousLogins</td>
                        <td>boolean</td>
                        <td>Allow simultaneous logins using this
                           Administrative ID</td>
                     </tr>
                     <tr>
                        <td>restrictedIps</td>
                        <td>string</td>
                        <td>Login restricted to IP address(es). Can be
                           up to 3 valid addresses separated by
                           commas.</td>
                     </tr>
                     <tr>
                        <td>enabled</td>
                        <td>boolean</td>
                        <td>Enable/disable admin account</td>
                     </tr>
                     <tr>
                        <td>locked</td>
                        <td>boolean</td>
                        <td>Lock/unlock admin account</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST '/customers/999999/admins/admin1', {
                        'type' =\u003E 'super', 'password' =\u003E
                        'password', 'firstName' =\u003E 'First',
                        'lastName' =\u003E 'Last', 'email' =\u003E
                        'first.last@rackspace.com', 'securityQuestion'
                        =\u003E 'Q', 'securityAnswer' =\u003E 'A' },
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Password doesn't meet the requirements. Sample
                     Message: Password must be 7 to 30
                     characters.</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Invalid email address. Sample Message: Invalid
                     email address.</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Invalid restricted to IP address(es). Sample
                     Message: IP addresses must be valid addresses
                     separated by commas. A maximum of 3 addresses may
                     be entered.</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/admins/{admin_name}"
         id="d1e2539a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="admin_name" style="template" required="true"/>
         <method id="d1e927" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Edit">
               <para role="shortdesc">Edits an existing admin under
                  the specified account.</para>
               <itemizedlist>
                  <listitem>
                     <para>Edit an existing admin under the specified
                        account.</para>
                  </listitem>
                  <listitem>
                     <para>Alternate route: /v0/admins/{admin
                        name}</para>
                  </listitem>
               </itemizedlist>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>type</td>
                        <td>string</td>
                        <td>Admin type (Required for Add). Must be
                           "super", "standard" or "limited". Can't
                           change permissions and domain access for
                           limited admin at this point.</td>
                     </tr>
                     <tr>
                        <td>password</td>
                        <td>string</td>
                        <td>Admin log in password (Required for
                           Add)</td>
                     </tr>
                     <tr>
                        <td>firstName</td>
                        <td>string</td>
                        <td>Admin first name (Required for Add)</td>
                     </tr>
                     <tr>
                        <td>lastName</td>
                        <td>string</td>
                        <td>Admin last name (Required for Add)</td>
                     </tr>
                     <tr>
                        <td>email</td>
                        <td>string</td>
                        <td>Admin contact email (Required for
                           Add)</td>
                     </tr>
                     <tr>
                        <td>securityQuestion</td>
                        <td>string</td>
                        <td>Security question (Required for Add)</td>
                     </tr>
                     <tr>
                        <td>securityAnswer</td>
                        <td>string</td>
                        <td>Security answer (Required for Add)</td>
                     </tr>
                     <tr>
                        <td>passwordExpiration</td>
                        <td>int</td>
                        <td>The number of days in which password
                           expires. 0 means password never
                           expires.</td>
                     </tr>
                     <tr>
                        <td>allowSimultaneousLogins</td>
                        <td>boolean</td>
                        <td>Allow simultaneous logins using this
                           Administrative ID</td>
                     </tr>
                     <tr>
                        <td>restrictedIps</td>
                        <td>string</td>
                        <td>Login restricted to IP address(es). Can be
                           up to 3 valid addresses separated by
                           commas.</td>
                     </tr>
                     <tr>
                        <td>enabled</td>
                        <td>boolean</td>
                        <td>Enable/disable admin account</td>
                     </tr>
                     <tr>
                        <td>locked</td>
                        <td>boolean</td>
                        <td>Lock/unlock admin account</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT '/customers/999999/admins/admin2', {
                        'enabled' =\u003E 'true', 'locked' =\u003E
                        'false', 'passwordExpiration' =\u003E '0',
                        'allowSimultaneousLogins' =\u003E 'true',
                        'restrictedIps' =\u003E '1.1.1.1' },
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Password doesn't meet the requirements. Sample
                     Message: Password must be 7 to 30
                     characters.</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Invalid email address. Sample Message: Invalid
                     email address.</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Invalid restricted to IP address(es). Sample
                     Message: IP addresses must be valid addresses
                     separated by commas. A maximum of 3 addresses may
                     be entered.</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/admins/{admin_name}"
         id="d1e2951a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="admin_name" style="template" required="true"/>
         <method id="d1e1176" name="DELETE">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Delete Admin">
               <para role="shortdesc">Deletes an admin</para>
               <itemizedlist>
                  <listitem>
                     <para>Deletes an admin</para>
                  </listitem>
                  <listitem>
                     <para>Alternate route: /v0/admins/{admin
                        name}</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >DELETE '/customers/999999/admins/admin1',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource path="/v0/customers/{customer_account_number}/domains"
         id="d1e3149a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <method id="d1e1217" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Index">
               <para role="shortdesc">Lists domains under the account.
                  If a customer account is specified, then a list of
                  domains under that specific account will be
                  returned.</para>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>To retrieve a list of domains owned by the
                        account that is logged in, use "me" as the
                        customer account number i.e.
                        'https://api.emailsrvr.com/v0/customers/me/domains'.
                        To retrieve a list of domains owned by all
                        customer sub-accounts and your own account,
                        use "all" as the customer account
                        number.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/all/domains?size=100\u0026offset=10',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;domainList
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:domainList"&gt;
                        &lt;offset&gt;0&lt;/offset&gt;
                        &lt;size&gt;50&lt;/size&gt;
                        &lt;total&gt;3&lt;/total&gt; &lt;domains&gt;
                        &lt;domain&gt;
                        &lt;name&gt;apidomain53.com&lt;/name&gt;
                        &lt;accountNumber&gt;100000&lt;/accountNumber&gt;
                        &lt;serviceType&gt;both&lt;/serviceType&gt;
                        &lt;/domain&gt; &lt;domain&gt;
                        &lt;name&gt;apidomain66.com&lt;/name&gt;
                        &lt;accountNumber&gt;100001&lt;/accountNumber&gt;
                        &lt;serviceType&gt;both&lt;/serviceType&gt;
                        &lt;/domain&gt; &lt;domain&gt;
                        &lt;name&gt;apidomain68.com&lt;/name&gt;
                        &lt;accountNumber&gt;100002&lt;/accountNumber&gt;
                        &lt;serviceType&gt;both&lt;/serviceType&gt;
                        &lt;/domain&gt; &lt;/domains&gt;
                        &lt;/domainList&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"offset":0,"size":50,"total":3,"domains":
                        [{"name":"apidomain53.com","accountNumber":"100000","serviceType":"both"},
                        {"name":"apidomain66.com","accountNumber":"100001","serviceType":"both"},
                        {"name":"apidomain68.com","accountNumber":"100002","serviceType":"both"}]}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}"
         id="d1e3357a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e1278" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Show">
               <para role="shortdesc">Shows detailed information about
                  the specified domain name.</para>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>The show operation only supports the GET
                        HTTP verb.</para>
                  </listitem>
               </itemizedlist>
               <para xmlns="http://docbook.org/ns/docbook"
                  >Notes</para>
               <itemizedlist>
                  <listitem>
                     <para>These two fields 'exchangeUsedStorage' and
                        'rsEmailUsedStorage' actually return the
                        number of active mailboxes in each service
                        respectively.</para>
                  </listitem>
                  <listitem>
                     <para>Due to a performance issue Domain Public
                        Folder Status is now returned from an
                        individual URL. The field
                        'publicFoldersEnabled' from Show Domain result
                        always returns 'false' at this moment.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET '/customers/999999/domains/example.com',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;domain
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:domain"&gt;
                        &lt;name&gt;apidomain21.com&lt;/name&gt;
                        &lt;accountNumber&gt;100000&lt;/accountNumber&gt;
                        &lt;serviceType&gt;both&lt;/serviceType&gt;
                        &lt;exchangeBaseMailboxSize&gt;2048&lt;/exchangeBaseMailboxSize&gt;
                        &lt;exchangeUsedStorage&gt;0&lt;/exchangeUsedStorage&gt;
                        &lt;exchangeTotalStorage&gt;18432&lt;/exchangeTotalStorage&gt;
                        &lt;exchangeExtraStorage&gt;10240&lt;/exchangeExtraStorage&gt;
                        &lt;exchangeMaxNumMailboxes&gt;4&lt;/exchangeMaxNumMailboxes&gt;
                        &lt;rsEmailBaseMailboxSize&gt;2048&lt;/rsEmailBaseMailboxSize&gt;
                        &lt;rsEmailMaxNumberMailboxes&gt;4&lt;/rsEmailMaxNumberMailboxes&gt;
                        &lt;rsEmailExtraStorage&gt;10240&lt;/rsEmailExtraStorage&gt;
                        &lt;rsEmailUsedStorage&gt;0&lt;/rsEmailUsedStorage&gt;
                        &lt;aliases /&gt;
                        &lt;archivingServiceEnabled&gt;false&lt;/archivingServiceEnabled&gt;
                        &lt;publicFoldersEnabled&gt;false&lt;/publicFoldersEnabled&gt;
                        &lt;blackBerryMobileServiceEnabled&gt;true&lt;/blackBerryMobileServiceEnabled&gt;
                        &lt;blackBerryLicenses&gt;4&lt;/blackBerryLicenses&gt;
                        &lt;activeSyncMobileServiceEnabled&gt;true&lt;/activeSyncMobileServiceEnabled&gt;
                        &lt;activeSyncLicenses&gt;4&lt;/activeSyncLicenses&gt;
                        &lt;/domain&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"name":"apidomain21.com","accountNumber":"100000","serviceType":"both",
                        "exchangeBaseMailboxSize":2048,"exchangeUsedStorage":0,"exchangeTotalStorage":18432,
                        "exchangeExtraStorage":10240,"exchangeMaxNumMailboxes":4,"rsEmailBaseMailboxSize":2048,
                        "rsEmailMaxNumberMailboxes":4,"rsEmailExtraStorage":10240,"rsEmailUsedStorage":0,
                        "aliases":[],"archivingServiceEnabled":false,"publicFoldersEnabled":false,
                        "blackBerryMobileServiceEnabled":true,"blackBerryLicenses":4,"activeSyncMobileServiceEnabled":true,
                        "activeSyncLicenses":4}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}"
         id="d1e3579a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e1357" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Add (Reseller Only)">
               <para role="shortdesc">Adds a new domain to the account
                  with the data specified.</para>
               <itemizedlist>
                  <listitem>
                     <para>Adds a new domain to the account with the
                        data specified.</para>
                  </listitem>
                  <listitem>
                     <para>To add a domain to your own account, use
                        your own account id.</para>
                  </listitem>
               </itemizedlist>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>serviceType</td>
                        <td>string</td>
                        <td>Domain service type. "rsemail" =
                           "Rackspace Email Only". "exchange" =
                           "Exchange Only". "both" = "Rackspace Email
                           and Exchange"</td>
                     </tr>
                     <tr>
                        <td>exchangeExtraStorage</td>
                        <td>int</td>
                        <td>Exchange service extra storage in
                           megabytes</td>
                     </tr>
                     <tr>
                        <td>exchangeMaxNumMailboxes</td>
                        <td>int</td>
                        <td>Maximum number of mailboxes allowed under
                           the domain Exchange service. Required for
                           Adding Exchange service</td>
                     </tr>
                     <tr>
                        <td>rsEmailBaseMailboxSize</td>
                        <td>int</td>
                        <td>Rackspace Email base mailbox size in
                           megabytes</td>
                     </tr>
                     <tr>
                        <td>rsEmailMaxNumberMailboxes</td>
                        <td>int</td>
                        <td>Maximum number of mailboxes allowed under
                           the domain Rackspace Email service.
                           Required for Adding Rackspace Email
                           service</td>
                     </tr>
                     <tr>
                        <td>rsEmailExtraStorage</td>
                        <td>int</td>
                        <td>Rackspace Email service extra storage in
                           megabytes</td>
                     </tr>
                     <tr>
                        <td>blackBerryMobileServiceEnabled</td>
                        <td>boolean</td>
                        <td>Enable or disable domain BlackBerry Mobile
                           service</td>
                     </tr>
                     <tr>
                        <td>blackBerryLicenses</td>
                        <td>int</td>
                        <td>Maximum number of mailboxes allowed to
                           have BlackBerry Mobile service. 0 means
                           unlimited</td>
                     </tr>
                     <tr>
                        <td>activeSyncMobileServiceEnabled</td>
                        <td>boolean</td>
                        <td>Enable or disable domain ActiveSync Mobile
                           service</td>
                     </tr>
                     <tr>
                        <td>activeSyncLicenses</td>
                        <td>int</td>
                        <td>Maximum number of mailboxes allowed to
                           have ActiveSync Mobile service. 0 means
                           unlimited</td>
                     </tr>
                     <tr>
                        <td>goodMobileServiceEnabled (deprecated)</td>
                        <td>boolean</td>
                        <td>Enable or disable domain Good Mobile
                           service</td>
                     </tr>
                     <tr>
                        <td>goodMobileLicenses (deprecated)</td>
                        <td>int</td>
                        <td>Maximum number of mailboxes allowed to
                           have Good Mobile service. 0 means
                           unlimited</td>
                     </tr>
                     <tr>
                        <td>archivingServiceEnabled</td>
                        <td>boolean</td>
                        <td>Enable or disable domain archiving
                           service</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST
                        '/customers/123455/domains/newcompany.com',
                        'text/xml', { 'maxNumMailboxes' =\u003E '5',
                        'extraStorage' =\u003E '1024' }"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>New domain name doesn't meet the naming
                     requirements. Sample Message: Invalid domain
                     name</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>New domain name already exists. Sample
                     Message: abc.com already exists as a domain or
                     alternate domain</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}"
         id="d1e3990a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e1608" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Edit (Reseller Only)">
               <para role="shortdesc">Edits a domain on the account
                  with the data specified.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>serviceType</td>
                        <td>string</td>
                        <td>Domain service type. "rsemail" =
                           "Rackspace Email Only". "exchange" =
                           "Exchange Only". "both" = "Rackspace Email
                           and Exchange"</td>
                     </tr>
                     <tr>
                        <td>exchangeExtraStorage</td>
                        <td>int</td>
                        <td>Exchange service extra storage in
                           megabytes</td>
                     </tr>
                     <tr>
                        <td>exchangeMaxNumMailboxes</td>
                        <td>int</td>
                        <td>Maximum number of mailboxes allowed under
                           the domain Exchange service. Required for
                           Adding Exchange service</td>
                     </tr>
                     <tr>
                        <td>rsEmailBaseMailboxSize</td>
                        <td>int</td>
                        <td>Rackspace Email base mailbox size in
                           megabytes</td>
                     </tr>
                     <tr>
                        <td>rsEmailMaxNumberMailboxes</td>
                        <td>int</td>
                        <td>Maximum number of mailboxes allowed under
                           the domain Rackspace Email service.
                           Required for Adding Rackspace Email
                           service</td>
                     </tr>
                     <tr>
                        <td>rsEmailExtraStorage</td>
                        <td>int</td>
                        <td>Rackspace Email service extra storage in
                           megabytes</td>
                     </tr>
                     <tr>
                        <td>blackBerryMobileServiceEnabled</td>
                        <td>boolean</td>
                        <td>Enable or disable domain BlackBerry Mobile
                           service</td>
                     </tr>
                     <tr>
                        <td>blackBerryLicenses</td>
                        <td>int</td>
                        <td>Maximum number of mailboxes allowed to
                           have BlackBerry Mobile service. 0 means
                           unlimited</td>
                     </tr>
                     <tr>
                        <td>activeSyncMobileServiceEnabled</td>
                        <td>boolean</td>
                        <td>Enable or disable domain ActiveSync Mobile
                           service</td>
                     </tr>
                     <tr>
                        <td>activeSyncLicenses</td>
                        <td>int</td>
                        <td>Maximum number of mailboxes allowed to
                           have ActiveSync Mobile service. 0 means
                           unlimited</td>
                     </tr>
                     <tr>
                        <td>goodMobileServiceEnabled (deprecated)</td>
                        <td>boolean</td>
                        <td>Enable or disable domain Good Mobile
                           service</td>
                     </tr>
                     <tr>
                        <td>goodMobileLicenses (deprecated)</td>
                        <td>int</td>
                        <td>Maximum number of mailboxes allowed to
                           have Good Mobile service. 0 means
                           unlimited</td>
                     </tr>
                     <tr>
                        <td>archivingServiceEnabled</td>
                        <td>boolean</td>
                        <td>Enable or disable domain archiving
                           service</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        '/customers/123455/domains/newcompany.com',
                        'text/xml', { 'maxNumMailboxes' =\u003E '25',
                        'extraStorage' =\u003E '2048' }"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>New domain name doesn't meet the naming
                     requirements. Sample Message: Invalid domain
                     name</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>New domain name already exists. Sample
                     Message: abc.com already exists as a domain or
                     alternate domain</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{new_customer_account_number}/domains/{domain_name}"
         id="d1e4396a1310">
         <param name="new_customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e1847" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Move Domain (Reseller Only)">
               <para role="shortdesc">Moves the domain to another
                  customer account.</para>
               <para>Remarks</para>
               <para>'Move Domain' and 'Edit Domain' share the same
                  URI and HTTP verb. When the domain doesn't belong to
                  the customer and 'moveDomain' is set to 'true', API
                  will take the request as a 'Move Domain'
                  call.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>moveDomain</td>
                        <td>boolean</td>
                        <td>Indicate whether or not moving the
                           domain</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        '/customers/123456/domains/newcompany.com',
                        'text/xml', { 'moveDomain' =\u003E 'true' }"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}"
         id="d1e4616a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e1928" name="DELETE">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Delete Domain (Reseller Only)">
               <para role="shortdesc">Deletes a domain</para>
               <para>Remarks</para>
               <para>The domain and all the mailboxes, mailbox
                  contents, groups, and contacts are deleted
                  permanently.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >DELETE
                        '/customers/12345678/domains/newcompany.com',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/alternatedomains"
         id="d1e4802a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e1965" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Alternate Domains - Index (Reseller Only)">
               <para role="shortdesc">Lists Domain Aliases and
                  Accepted Domains for the domain.</para>
               <itemizedlist>
                  <listitem>
                     <para>This operation returns a list of Domain
                        Aliases and Accepted Domains for the
                        domain.</para>
                  </listitem>
                  <listitem>
                     <para>The type of the alternate domain is
                        indicated by the 'type' data field.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/12345678/domains/test.com/alternatedomains',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;alternateDomainList
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:domainAlternateList"&gt;
                        &lt;alternateDomains&gt;
                        &lt;alternateDomain&gt;
                        &lt;name&gt;domainalias.com&lt;/name&gt;
                        &lt;type&gt;DomainAlias&lt;/type&gt;
                        &lt;/alternateDomain&gt;
                        &lt;alternateDomain&gt;
                        &lt;name&gt;accepteddomain.com&lt;/name&gt;
                        &lt;type&gt;AcceptedDomain&lt;/type&gt;
                        &lt;/alternateDomain&gt;
                        &lt;/alternateDomains&gt;
                        &lt;/alternateDomainList&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"alternateDomains":[{"name":"domainalias.com","type":"DomainAlias"},{"name":"accepteddomain.com","type":"AcceptedDomain"}]}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="v0/customers/{customer_account_number}/domains/{domain_name}/alternatedomains/{alternate_domain_name}"
         id="d1e5008a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="alternate_domain_name" style="template"
            required="true"/>
         <method id="d1e2028" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Alternate Domain - Add (Reseller Only)">
               <para role="shortdesc">Adds either a Domain Alias or
                  Accepted Domain to the domain.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>type</td>
                        <td>string</td>
                        <td>Alternate domain type. Send "DomainAlias"
                           for a domain alias, and "AcceptedDomain"
                           for an accepted domain. (Required)</td>
                     </tr>
                     <tr>
                        <td>createForExistingRecipients</td>
                        <td>boolean</td>
                        <td>Whether the alternate addresses should be
                           created for existing mailboxes when adding
                           an Accepted Domain. Sending this field in
                           the request when the type is Domain Alias
                           will throw an error. This defaults to
                           false.</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST
                        '/customers/123456/domains/example.com/alternatedomains/accepteddomain.com',
                        'text/xml', { 'type' =\u003E 'AcceptedDomain'
                        'createForExistingRecipients' =\u003E 'true'
                        }" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>New domain name doesn't meet the naming
                     requirements. Sample Message: Invalid domain
                     name</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Alternate domain already exists. Sample
                     Message: abc.com already exists as a domain or
                     alternate domain</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>The 'createForExistingRecipients' field was
                     sent with either data, or as a null field. It
                     should not be included in the form data at all..
                     Sample Message: Invalid Alternate Domain Setting:
                     createForExistingRecipients is an invalid setting
                     for Domain Aliases</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>The only valid values for 'type' are
                     'DomainAlias' and 'AcceptedDomain', for a Domain
                     Alias and Accepted Domain respectively.. Sample
                     Message: Invalid Alternate Domain type</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/alternatedomains/{alternate_domain_name}"
         id="d1e5303a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="alternate_domain_name" style="template"
            required="true"/>
         <method id="d1e2154" name="DELETE">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Alternate Domains - Delete (Reseller Only)">
               <para role="shortdesc">Deletes the alternate
                  domain.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >DELETE
                        '/customers/12345678/domains/example.com/alternatedomains/accepteddomain.com'"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain}/splitdomainrouting"
         id="d1e5483a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain" style="template" required="true"/>
         <method id="d1e2184" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Split Domain Routing - Show Settings">
               <para role="shortdesc">Shows the current external email
                  server.</para>
               <itemizedlist>
                  <listitem>
                     <para>Shows the current external email
                        server.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/12345678/domains/company.com/splitdomainrouting',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;splitDomainRouting
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:splitDomainRouting"&gt;
                        &lt;externalServer&gt;email.externalserver.com&lt;/externalServer&gt;
                        &lt;/splitDomainRouting&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"externalServer":"email.externalserver.com"}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/splitdomainrouting"
         id="d1e5687a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e2239" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Split Domain Routing - Edit Settings">
               <para role="shortdesc">Sets the external email
                  server.</para>
               <para>This command will return a success when the
                  verification passes. Since this involves
                  communication to the external server the request may
                  take some time. If the verification fails a 400
                  return code will be sent back with the
                  verification's error message.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>externalServer</td>
                        <td>string</td>
                        <td>The address of the external email server.
                           To turn off split domain routing send
                           'none'. (Required)</td>
                     </tr>
                     <tr>
                        <td>verificationAddress</td>
                        <td>string</td>
                        <td>An email address part of your domain or
                           one of the alternate domains that the
                           external server is already set up to
                           handle. (Required only when turning on
                           split domain routing, Do not send this
                           field if turning off.)</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        '/customers/12345678/domains/company.com/splitdomainrouting',
                        'text/xml', { 'externalServer' =\u003E
                        'email.externalserver.com',
                        'verificationAddress' =\u003E
                        'externalaccount@company.com', }"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>The SMTP host could not be found.. Sample
                     Message: One of the verification error
                     messages.</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain}/archivingSSOLoginURL"
         id="d1e5946a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain" style="template" required="true"/>
         <method id="d1e2335" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Archiving SSO Login URL">
               <para role="shortdesc">Gets the domain archiving
                  service SSO login URL.</para>
               <para>Remarks</para>
               <para>The retrieved URL can be used in browser to
                  access the domain archiving control panel.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/12345678/domains/company.com/archivingSSOLoginURL',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>No archiving service. Sample Message: Domain
                     abc.com has no archiving service enabled.</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/publicfolders"
         id="d1e6166a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e2381" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Domain Public Folders - Show Status">
               <para role="shortdesc">Retrieves the Exchange Public
                  Folders status for the domain.</para>
               <itemizedlist>
                  <listitem>
                     <para>Retrieves the Exchange Public Folders
                        status for the domain.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/12345678/domains/company.com/ex/publicFolders',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;domainPublicFolders
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:domainPublicFolders"&gt;
                        &lt;enabled&gt;true&lt;/enabled&gt;
                        &lt;/domainPublicFolders&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/publicfolders"
         id="d1e6352a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e2427" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Domain Public Folders - Enable">
               <para role="shortdesc">Enables the Exchange Public
                  Folders feature on the domain. Once enabled, it
                  cannot be disabled.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>enabled</td>
                        <td>string</td>
                        <td>Whether to enable public folders. Once
                           enabled, it cannot be disabled.</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        '/customers/12345678/domains/company.com/ex/publicFolders',
                        'text/xml', { 'enabled' =\u003E 'true' }"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Public folders cannot be turned off after it's
                     been turned on.. Sample Message: Public Folders
                     cannot be disabled once enabled</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/emaileveryone"
         id="d1e6599a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e2511" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Domain Email Everyone">
               <para role="shortdesc">Sends an email to all mailboxes
                  for the domain. This request returns a list of
                  recipients.</para>
               <itemizedlist>
                  <listitem>
                     <para>Send an email to all mailboxes for the
                        domain. This request returns a list of
                        recipients.</para>
                  </listitem>
                  <listitem>
                     <para>Alternate route: /v0/domains/{domain
                        name}/emaileveryone</para>
                  </listitem>
               </itemizedlist>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>fromName</td>
                        <td>string</td>
                        <td>Sender's Name</td>
                     </tr>
                     <tr>
                        <td>fromAddress</td>
                        <td>string</td>
                        <td>Sender's Email Address</td>
                     </tr>
                     <tr>
                        <td>subject</td>
                        <td>string</td>
                        <td>Message subject</td>
                     </tr>
                     <tr>
                        <td>body</td>
                        <td>string</td>
                        <td>Message body</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST
                        '/customers/12345678/domains/example.com/emaileveryone',
                        'text/xml', { 'fromName' =\u003E 'John Doe',
                        'fromAddress' =\u003E 'john.doe@test.com',
                        'subject' =\u003E 'Hi All', 'body' =\u003E
                        'Hello World.', }" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;emailAddressList
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:emailAddressList"&gt;
                        &lt;emailAddresses&gt;
                        &lt;address&gt;a@example.com&lt;/address&gt;
                        &lt;address&gt;b@example.com&lt;/address&gt;
                        &lt;/emailAddresses&gt;
                        &lt;/emailAddressList&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"emailAddresses":["a@example.com","b@example.com"]}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/catchalladdress"
         id="d1e6874a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e2653" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Show Domain Catch-All Address">
               <para role="shortdesc">Returns the Catch-All Address
                  for the domain. Returns empty string when no
                  Catch-All Address set for the domain.</para>
               <itemizedlist>
                  <listitem>
                     <para>Return the Catch-All Address for the
                        domain. Returns empty string when no Catch-All
                        Address set for the domain.</para>
                  </listitem>
                  <listitem>
                     <para>Alternate route: /v0/domains/{domain
                        name}/catchalladdress</para>
                  </listitem>
               </itemizedlist>
               <para>Remarks</para>
               <para>When an email is sent to a mailbox that does not
                  exist on your domain, deliver the email to this
                  address.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/999999/domains/example.com/catchalladdress',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;emailAddress
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:emailAddress"&gt;
                        &lt;address&gt;abc@example.com&lt;/address&gt;
                        &lt;/emailAddress&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"address":"abc@example.com"}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/catchalladdress"
         id="d1e7087a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e2720" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Edit Domain Catch-All Address">
               <para role="shortdesc">Edits the Catch-All Address for
                  the domain.</para>
               <itemizedlist>
                  <listitem>
                     <para>Edit the Catch-All Address for the
                        domain.</para>
                  </listitem>
                  <listitem>
                     <para>Alternate route: /v0/domains/{domain
                        name}/catchalladdress</para>
                  </listitem>
               </itemizedlist>
               <para>Remarks</para>
               <para>When an email is sent to a mailbox that does not
                  exist on your domain, deliver the email to this
                  address.</para>
               <para xmlns="http://docbook.org/ns/docbook"
                  >Notes</para>
               <para>This request may take about 1-2 minutes to be
                  applied to the domain.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>address</td>
                        <td>string</td>
                        <td>The Catch-All email address. Set address
                           to empty string to remove Catch-All
                           Address.</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        '/customers/12345678/domains/example.com/emaileveryone',
                        'text/xml', { 'address' =\u003E
                        'abc@example.com' }" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/spam/settings"
         id="d1e7330a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e2820" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Show Spam Setting">
               <para role="shortdesc">Returns the spam settings
                  associated with the domain.</para>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>The Show operation only supports the GET
                        HTTP verb.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/12345678/domains/example.com/spam/settings',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;domainSpamSettings
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:DomainSpamSettings"&gt;
                        &lt;filterLevel&gt;on&lt;/filterLevel&gt;
                        &lt;rsEmailSettings&gt;
                        &lt;spamHandling&gt;toAddress&lt;/spamHandling&gt;
                        &lt;hasFolderCleaner&gt;false&lt;/hasFolderCleaner&gt;
                        &lt;spamFolderAgeLimit&gt;0&lt;/spamFolderAgeLimit&gt;
                        &lt;spamFolderNumLimit&gt;0&lt;/spamFolderNumLimit&gt;
                        &lt;spamForwardingAddress&gt;someone@mail.com&lt;/spamForwardingAddress&gt;
                        &lt;/rsEmailSettings&gt;
                        &lt;exchangeSettings&gt;
                        &lt;forwardToDomainQuarantine&gt;on&lt;/forwardToDomainQuarantine&gt;
                        &lt;quarantineOwner&gt;someone@mail.com&lt;/quarantineOwner&gt;
                        &lt;defaultQuarantineOwner&gt;someone@mail.com&lt;/defaultQuarantineOwner&gt;
                        &lt;/exchangeSettings&gt;
                        &lt;/domainSpamSettings&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"filterLevel":"on","rsEmailSettings":{"spamHandling":"toAddress","hasFolderCleaner":false,"spamFolderAgeLimit":0,"spamFolderNumLimit":0,"spamForwardingAddress":"someone@mail.com"},"exchangeSettings":{"forwardToDomainQuarantine":"on","quarantineOwner":"someone@mail.com","defaultQuarantineOwner":"someone@mail.com"}}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/spam/settings"
         id="d1e7539a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e2882" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Edit Spam">
               <para role="shortdesc">Edits the domain Spam
                  Settings.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>filterLevel</td>
                        <td>string</td>
                        <td>Spam filter status, must be 'on' or 'off'
                           or 'exclusive' (Required)</td>
                     </tr>
                     <tr>
                        <td>overrideUserSettings</td>
                        <td>boolean</td>
                        <td>Set this flag to "true" to override
                           preferences for all users regardless of
                           their own preferences. Otherwise, it sets
                           preferences only for users who have not set
                           their own.</td>
                     </tr>
                     <tr>
                        <td>rsEmail.spamHandling</td>
                        <td>string</td>
                        <td>Change settings for Rackspace Email
                           Handling. For the options, see the table
                           below.</td>
                     </tr>
                     <tr>
                        <td>rsEmail.hasFolderCleaner</td>
                        <td>boolean</td>
                        <td>Turns on/off Spam Folder Cleaner. Requires
                           "rsEmail.spamHandling" to be set to
                           "toFolder".</td>
                     </tr>
                     <tr>
                        <td>rsEmail.spamFolderAgeLimit</td>
                        <td>int</td>
                        <td>The number of days that email stays the
                           "Spam" folder before being deleted.
                           Requires "rsEmail.hasFolderCleaner" to be
                           set to "true".</td>
                     </tr>
                     <tr>
                        <td>rsEmail.spamFolderNumLimit</td>
                        <td>int</td>
                        <td>The max number of emails that will be kept
                           in the "Spam" folder. Requires
                           "rsEmail.hasFolderCleaner" to be set to
                           "true".</td>
                     </tr>
                     <tr>
                        <td>rsEmail.spamForwardingAddress</td>
                        <td>string</td>
                        <td>The address that spams will be forwarded
                           to. Requires "rsEmail.spamHandling" to be
                           set to "toAddress".</td>
                     </tr>
                     <tr>
                        <td>exchange.forwardToDomainQuarantine</td>
                        <td>string</td>
                        <td>Change settings for Exchange Handling. For
                           the options, see the table below.</td>
                     </tr>
                     <tr>
                        <td>exchange.quarantineOwner</td>
                        <td>string</td>
                        <td>The address that domain quarantine
                           notifications will be sent to.</td>
                     </tr>
                     <tr>
                        <td>exchange.removeQuarantineOwner</td>
                        <td>boolean</td>
                        <td>Set this flag to "true" to remove domain
                           quarantine owner.</td>
                     </tr>
                     <tr>
                        <td>exchange.defaultQuarantineOwner</td>
                        <td>string</td>
                        <td>The address that quarantine notifications
                           will be sent to. This applies to new users
                           and users that have not changed their
                           settings to override.</td>
                     </tr>
                     <tr>
                        <td>exchange.removeDefaultQuarantineOwner</td>
                        <td>boolean</td>
                        <td>Set this flag to "true" to remove default
                           domain quarantine owner.</td>
                     </tr>
                  </tbody>
               </table>
               <table rules="all">
                  <caption>Rackspace Email Handling Options</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Value</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>toFolder</td>
                        <td>Deliver to Spam folder</td>
                     </tr>
                     <tr>
                        <td>delete</td>
                        <td>Delete the email immediately</td>
                     </tr>
                     <tr>
                        <td>labelSubject</td>
                        <td>Include "[SPAM]" at the beginning of the
                           subject line</td>
                     </tr>
                     <tr>
                        <td>toAddress</td>
                        <td>Deliver to the email address that is
                           specified by
                           "rsEmail.spamForwardingAddress"</td>
                     </tr>
                  </tbody>
               </table>
               <table rules="all">
                  <caption>Exchange Handling Options</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Value</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>on</td>
                        <td>Send all spam to domain quarantine</td>
                     </tr>
                     <tr>
                        <td>off</td>
                        <td>Send spam to recipient's quarantine</td>
                     </tr>
                     <tr>
                        <td>nonuser</td>
                        <td>Send non-user spam (Contacts, Resources,
                           etc.) to domain quarantine</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        '/customers/me/domains/example.com/spam/settings',
                        'text/xml', { 'filterLevel' =\u003E 'on',
                        'rsEmail.spamHandling' =\u003E 'toFolder',
                        'rsEmail.hasFolderCleaner' =\u003E 'true',
                        'rsEmail.spamFolderAgeLimit' =\u003E '7',
                        'rsEmail.spamFolderNumLimit' =\u003E '100', }"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Invalid input for Filter Level. Sample
                     Message: Invalid FilterLevel: high. Input must
                     be: on/off/exclusive</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Invalid input for RSEmail SpamHandling. Sample
                     Message: Invalid RSEmail SpamHandling: nonuser.
                     Input must be:
                     toFolder/delete/labelSubject/toAddress</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Invalid input for Exchange
                     ForwardToDomainQuarantine. Sample Message:
                     Invalid input for Exchange
                     ForwardToDomainQuarantine: delete. Input must be:
                     on/off/nonuser</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/spam/blacklist"
         id="d1e8041a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e3236" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Blacklist - Index">
               <para role="shortdesc">Returns the email address
                  blacklist associated with the domain.</para>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>The Index operation only supports the GET
                        HTTP verb.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/12345678/domains/example.com/spam/blacklist',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;blacklist
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:blacklist"&gt;
                        &lt;addresses&gt;
                        &lt;address&gt;name1@spam.com&lt;/address&gt;
                        &lt;address&gt;name2@spam.com&lt;/address&gt;
                        &lt;/addresses&gt;
                        &lt;/blacklist&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"addresses":["name1@spam.com","name2@spam.com"]}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/spam/blacklist/{email_address}"
         id="d1e8250a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="email_address" style="template" required="true"/>
         <method id="d1e3299" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Blacklist - Add">
               <para role="shortdesc">Adds an email address or domain
                  to the blacklist.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST
                        '/customers/12345678/domains/example.com/spam/blacklist/anyone@spam.com',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entered invalid email or domain. Sample
                     Message: invalid email address: abc</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entered current domain. Sample Message: Adding
                     example.com would blacklist the current
                     domain</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/spam/blacklist"
         id="d1e8476a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e3347" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Blacklist - Edit">
               <para role="shortdesc">Edits email addresses on the
                  blacklist.</para>
               <para>Remarks</para>
               <para>You can use a '%' as a wildcard in domains, but
                  not in the TLD (.com, .net, etc). You cannot use
                  wildcards in email addresses. For example, the
                  following are allowed: @%.example.com,
                  @examp%.com.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>addList</td>
                        <td>string</td>
                        <td>Comma separated list of email addresses to
                           add to the list</td>
                     </tr>
                     <tr>
                        <td>removeList</td>
                        <td>string</td>
                        <td>Comma separated list of email addresses to
                           remove from the list</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        '/customers/12345678/domains/example.com/spam/blacklist',
                        { 'addList' =\u003E
                        '@%.example.com,abc@example.com', 'removeList'
                        =\u003E '@examp%.com' }, 'text/xml'"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/spam/blacklist/{email_address}"
         id="d1e8708a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="email_address" style="template" required="true"/>
         <method id="d1e3442" name="DELETE">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Blacklist - Delete">
               <para role="shortdesc">Removes an email address or
                  domain from the blacklist.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >DELETE
                        '/customers/12345678/domains/example.com/spam/blacklist/anyone@yahoo.com',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entered invalid email or domain. Sample
                     Message: invalid email address: abc</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entered email or domain is not on the current
                     blacklist. Sample Message: abc@junkmail.com is
                     not found on the list</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/spam/ipblacklist"
         id="d1e8933a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e3490" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="IP Blacklist - Index">
               <para role="shortdesc">Returns IP blacklist associated
                  with the domain.</para>
               <para>Remarks:</para>
               <itemizedlist>
                  <listitem>
                     <para>The Index operation only supports the GET
                        HTTP verb.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/12345678/domains/example.com/spam/ipblacklist',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;ipBlacklist
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:ipBlacklist"&gt;
                        &lt;addresses&gt;
                        &lt;ip&gt;216.12.34.1&lt;/ip&gt;
                        &lt;ip&gt;216.12.34.2&lt;/ip&gt;
                        &lt;/addresses&gt;
                        &lt;/ipBlacklist&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"addresses":["216.12.34.1","216.12.34.2"]}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/spam/ipblacklist/{ip_address}"
         id="d1e9142a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="ip_address" style="template" required="true"/>
         <method id="d1e3554" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="IP Blacklist - Add">
               <para role="shortdesc">Adds an IP to the
                  blacklist.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST
                        '/customers/12345678/domains/example.com/spam/blacklist/216.12.34.1',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entered invalid IP address. Sample Message:
                     invalid ip address: 123</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/spam/ipblacklist"
         id="d1e9355a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e3593" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="IP Blacklist - Edit">
               <para role="shortdesc">Edits IP addresses on the
                  blacklist.</para>
               <para>Remarks</para>
               <para>You can use a '%' as a wildcard in the last
                  octets to specify IP ranges. For example:
                  216.12.34.%, 216.12.%.%, 216.%.%.%.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>addList</td>
                        <td>string</td>
                        <td>Comma separated list of IP addresses to
                           add to the list</td>
                     </tr>
                     <tr>
                        <td>removeList</td>
                        <td>string</td>
                        <td>Comma separated list of IP addresses to
                           remove from the list</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        '/customers/12345678/domains/example.com/spam/ipblacklist',
                        { 'addList' =\u003E '216.12.34.%,216.12.%.%',
                        'removeList' =\u003E '216.%.%.%' },
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/spam/ipblacklist/{ip_address}"
         id="d1e9587a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="ip_address" style="template" required="true"/>
         <method id="d1e3688" name="DELETE">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="IP Blacklist - Delete">
               <para>Removes an IP from the blacklist.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >DELETE
                        '/customers/12345678/domains/example.com/spam/ipblacklist/216.12.34.1',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entered invalid IP address. Sample Message:
                     invalid ip address: 123</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entered IP is not on the current blacklist.
                     Sample Message: 216.12.34.1 is not found on the
                     blacklist</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/spam/safelist"
         id="d1e9813a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e3736" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Safelist - Index">
               <para role="shortdesc">Returns email address safelist
                  associated with the domain.</para>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>The Index operation only supports the GET
                        HTTP verb.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/12345678/domains/example.com/spam/safelist',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;safelist
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:safelist"&gt; &lt;addresses&gt;
                        &lt;address&gt;name1@notspam.com&lt;/address&gt;
                        &lt;address&gt;name2@notspam.com&lt;/address&gt;
                        &lt;/addresses&gt;
                        &lt;/safelist&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"addresses":["name1@notspam.com","name2@notspam.com"]}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/spam/safelist/{email_address}"
         id="d1e10022a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="email_address" style="template" required="true"/>
         <method id="d1e3799" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Safelist - Add">
               <para role="shortdesc">Adds an email address or domain
                  to the safelist.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST
                        '/customers/12345678/domains/example.com/spam/safelist/anyone@yahoo.com',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entered invalid email or domain. Sample
                     Message: invalid email address: abc</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/spam/safelist"
         id="d1e10235a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e3838" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Safelist - Edit">
               <para role="shortdesc">Edits email addresses on the
                  safelist.</para>
               <para>Remarks</para>
               <para>You can use a '%' as a wildcard in domains, but
                  not in the TLD (.com, .net, etc). You cannot use
                  wildcards in email addresses. For example, the
                  following are allowed: @%.example.com,
                  @examp%.com.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>addList</td>
                        <td>string</td>
                        <td>Comma separated list of email addresses to
                           add to the list</td>
                     </tr>
                     <tr>
                        <td>removeList</td>
                        <td>string</td>
                        <td>Comma separated list of email addresses to
                           remove from the list</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        '/customers/12345678/domains/example.com/spam/safelist',
                        { 'addList' =\u003E
                        '@%.example.com,abc@example.com', 'removeList'
                        =\u003E '@examp%.com' }, 'text/xml'"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/spam/safelist/{email_address}"
         id="d1e10467a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="email_address" style="template" required="true"/>
         <method id="d1e3934" name="DELETE">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Safelist - Delete">
               <para>Removes an email address or domain from the
                  safelist.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >DELETE
                        '/customers/12345678/domains/example.com/spam/safelist/anyone@yahoo.com',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entered invalid email or domain. Sample
                     Message: invalid email address: abc</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entered email or domain is not on the current
                     safelist. Sample Message: anyone@yahoo.com is not
                     found on the list</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/spam/ipsafelist"
         id="d1e10692a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e3982" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="IP Safelist - Index">
               <para role="shortdesc">Returns IP safelist associated
                  with the domain.</para>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>The Index operation only supports the GET
                        HTTP verb.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/12345678/domains/example.com/spam/ipsafelist',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;ipSafelist
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:ipSafelist"&gt;
                        &lt;addresses&gt;
                        &lt;ip&gt;192.168.0.1&lt;/ip&gt;
                        &lt;ip&gt;192.168.0.2&lt;/ip&gt;
                        &lt;/addresses&gt;
                        &lt;/ipSafelist&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"addresses":["192.168.0.1","192.168.0.2"]}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/spam/ipsafelist/{ip_address}"
         id="d1e10901a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="ip_address" style="template" required="true"/>
         <method id="d1e4045" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="IP Safelist - Add">
               <para role="shortdesc">Adds an IP to the
                  safelist.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST
                        '/customers/12345678/domains/example.com/spam/safelist/216.12.34.1',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entered invalid IP address. Sample Message:
                     invalid ip address: 123</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/spam/ipsafelist"
         id="d1e11115a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e4084" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="IP Safelist - Edit">
               <para role="shortdesc">Edits IP addresses on the
                  safelist.</para>
               <para>Remarks</para>
               <para>You can use a '%' as a wildcard in the last
                  octets to specify IP ranges. For example:
                  216.12.34.%, 216.12.%.%, 216.%.%.%.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>addList</td>
                        <td>string</td>
                        <td>Comma separated list of IP addresses to
                           add to the list</td>
                     </tr>
                     <tr>
                        <td>removeList</td>
                        <td>string</td>
                        <td>Comma separated list of IP addresses to
                           remove from the list</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        '/customers/12345678/domains/example.com/spam/ipsafelist',
                        { 'addList' =\u003E '216.12.34.%,216.12.%.%',
                        'removeList' =\u003E '216.%.%.%' },
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/spam/ipsafelist/{ip_address}"
         id="d1e11347a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="ip_address" style="template" required="true"/>
         <method id="d1e4179" name="DELETE">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="IP Safelist - Delete">
               <para>Removes an IP from the safelist.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >DELETE
                        '/customers/12345678/domains/example.com/spam/ipsafelist/216.12.34.1',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entered invalid IP address. Sample Message:
                     invalid ip address: 123</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entered IP is not on the current safelist.
                     Sample Message: 216.12.34.1 is not found on the
                     safelist</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes"
         id="d1e11583a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e4227" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Index">
               <para role="shortdesc">Shows a list of mailboxes under
                  the domain</para>
               <para>Filter/Search</para>
               <para>Mailbox searches may be filtered by the 'enabled'
                  flag using query methods ?enabled=true and
                  ?enabled=false.</para>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>The show operation only supports the GET
                        HTTP verb.</para>
                  </listitem>
               </itemizedlist>
               <para>Custom Fields</para>
               <para>The result displays each mailbox's 'name' and
                  'displayName' as default. There is a query string
                  'fields' that allows the result to display more
                  mailbox properties. The additional properties are:
                  'size', 'currentUsage', 'enabled', 'createdDate',
                  and 'lastLogin'</para>
               <itemizedlist>
                  <title>Example</title>
                  <listitem>
                     <para>GET
                        '/customers/12345678/domains/example.com/rs/mailboxes?fields=size,currentUsage',
                        'text/xml'</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/12345678/domains/example.com/rs/mailboxes',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;rsMailboxList
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:rsMailboxList"&gt;
                        &lt;offset&gt;0&lt;/offset&gt;
                        &lt;size&gt;50&lt;/size&gt;
                        &lt;total&gt;2&lt;/total&gt;
                        &lt;rsMailboxes&gt; &lt;rsMailbox&gt;
                        &lt;name&gt;apirsmailbox37&lt;/name&gt;
                        &lt;/rsMailbox&gt; &lt;rsMailbox&gt;
                        &lt;name&gt;apirsmailbox91&lt;/name&gt;
                        &lt;/rsMailbox&gt; &lt;/rsMailboxes&gt;
                        &lt;/rsMailboxList&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"offset":0,"size":50,"total":2,"rsMailboxes":[{"name":"apirsmailbox37"},{"name":"apirsmailbox91"}]}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes/{mailbox_name}"
         id="d1e11814a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <method id="d1e4316" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Show">
               <para>The show operation will return detailed
                  information about the specified mailbox.</para>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>The show operation only supports the GET
                        HTTP verb.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;rsMailbox
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:rsMailbox"&gt;
                        &lt;name&gt;apirsmailbox37&lt;/name&gt;
                        &lt;size&gt;10240&lt;/size&gt;
                        &lt;currentUsage&gt;1024&lt;/currentUsage&gt;
                        &lt;vacationMessage&gt;My Test Vacation
                        Message&lt;/vacationMessage&gt;
                        &lt;enableVacationMessage&gt;true&lt;/enableVacationMessage&gt;
                        &lt;emailForwardingAddressList&gt;
                        &lt;emailAddress&gt;notreal0@apidomain.net&lt;/emailAddress&gt;
                        &lt;emailAddress&gt;notreal1@apidomain.net&lt;/emailAddress&gt;
                        &lt;/emailForwardingAddressList&gt;
                        &lt;saveForwardedEmail&gt;false&lt;/saveForwardedEmail&gt;
                        &lt;lastLogin&gt;2/12/2009 1:00:00
                        AM&lt;/lastLogin&gt;
                        &lt;createdDate&gt;4/10/2006 7:47:34
                        PM&lt;/createdDate&gt;
                        &lt;visibleInRackspaceEmailCompanyDirectory&gt;false&lt;/visibleInRackspaceEmailCompanyDirectory&gt;
                        &lt;visibleInExchangeGAL&gt;false&lt;/visibleInExchangeGAL&gt;
                        &lt;contactInfo&gt;
                        &lt;lastName&gt;Testlast&lt;/lastName&gt;
                        &lt;firstName&gt;Jayfirst&lt;/firstName&gt;
                        &lt;generationQualifier&gt;Jr&lt;/generationQualifier&gt;
                        &lt;initials&gt;A&lt;/initials&gt;
                        &lt;organizationUnit&gt;IT&lt;/organizationUnit&gt;
                        &lt;businessStreet&gt;123 Biz
                        St&lt;/businessStreet&gt;
                        &lt;businessCity&gt;Blacksburg&lt;/businessCity&gt;
                        &lt;businessState&gt;VA&lt;/businessState&gt;
                        &lt;businessPostalCode&gt;24060&lt;/businessPostalCode&gt;
                        &lt;businessCountry&gt;USA&lt;/businessCountry&gt;
                        &lt;homeStreet&gt;456 Home
                        St&lt;/homeStreet&gt;
                        &lt;homeCity&gt;Charlotte&lt;/homeCity&gt;
                        &lt;homeState&gt;NC&lt;/homeState&gt;
                        &lt;homePostalCode&gt;28210&lt;/homePostalCode&gt;
                        &lt;homeCountry&gt;USA&lt;/homeCountry&gt;
                        &lt;businessNumber&gt;555.123.0001&lt;/businessNumber&gt;
                        &lt;homeNumber&gt;555.123.0003&lt;/homeNumber&gt;
                        &lt;mobileNumber&gt;555.123.0004&lt;/mobileNumber&gt;
                        &lt;faxNumber&gt;555.123.0005&lt;/faxNumber&gt;
                        &lt;homeFaxNumber&gt;555.123.0006&lt;/homeFaxNumber&gt;
                        &lt;pagerNumber&gt;555.123.0002&lt;/pagerNumber&gt;
                        &lt;notes&gt;This is my note about my
                        mailbox.&lt;/notes&gt; &lt;title&gt;My
                        Title&lt;/title&gt;
                        &lt;userID&gt;J.Test&lt;/userID&gt;
                        &lt;customID&gt;0123456789&lt;/customID&gt;
                        &lt;organizationalStatus&gt;OrgStatus&lt;/organizationalStatus&gt;
                        &lt;employeeType&gt;Full-Time&lt;/employeeType&gt;
                        &lt;/contactInfo&gt;
                        &lt;enabled&gt;true&lt;/enabled&gt;
                        &lt;/rsMailbox&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"emailForwardingAddressList":["test@resellerallservices.net"],"enableVacationMessage":true,"enabled":true,"contactInfo":{"businessNumber":"555.123.0001"
                        ,"faxNumber":"555.123.0005"
                        ,"firstName":"Jimmy"
                        ,"homeNumber":"555.123.0003"
                        ,"lastName":"TestLaste"
                        ,"mobileNumber":"555.123.0004" ,"notes":"This
                        is my note about my mailbox."
                        ,"pagerNumber":"555.123.0002"
                        ,"businessCity":"" ,"businessCountry":""
                        ,"businessPostalCode":"" ,"businessState":""
                        ,"businessStreet":""
                        ,"employeeType":"DoesNotExist"
                        ,"generationQualifier":"Jr" ,"homeCity":""
                        ,"homeCountry":""
                        ,"homeFaxNumber":"555.123.0006"
                        ,"homePostalCode":"" ,"homeState":""
                        ,"homeStreet":"" ,"initials":"A"
                        ,"organizationUnit":"IT"
                        ,"organizationalStatus":"gainfully employed"
                        ,"title":"My Title" ,"userID":"J.Test",
                        "customID":"0123456789"},"name":"unittestexist"
                        ,"saveForwardedEmail":false,"size":10240,"vacationMessage":"Test
                        Vacation Message", "createdDate":"4\/10\/2006
                        7:47:34 PM", "currentUsage":1024,
                        "visibleInExchangeGAL":false,
                        "visibleInRackspaceEmailCompanyDirectory":false}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes/{mailbox_name}"
         id="d1e12023a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <method id="d1e4379" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Add">
               <para role="shortdesc">Adds a Rackspace Email mailbox
                  using the following form fields.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>password</td>
                        <td>string</td>
                        <td>Password (Required for Add)</td>
                     </tr>
                     <tr>
                        <td>size</td>
                        <td>positive integer</td>
                        <td>Mailbox size in megabytes (Required for
                           Add)</td>
                     </tr>
                     <tr>
                        <td>enableVacationMessage</td>
                        <td>boolean</td>
                        <td>indicates whether vacation message has
                           been enabled</td>
                     </tr>
                     <tr>
                        <td>vacationMessage</td>
                        <td>string</td>
                        <td>A mailbox's vacation message</td>
                     </tr>
                     <tr>
                        <td>emailForwardingAddresses</td>
                        <td>string</td>
                        <td>A comma delimited list, Maximum 15
                           addresses, 4 of which can be outside of
                           this domain</td>
                     </tr>
                     <tr>
                        <td>saveForwardedEmail</td>
                        <td>string</td>
                        <td>Indicates whether to save a copy of any
                           forwarded email</td>
                     </tr>
                     <tr>
                        <td>lastName</td>
                        <td>string</td>
                        <td>A last name</td>
                     </tr>
                     <tr>
                        <td>firstName</td>
                        <td>string</td>
                        <td>A first name</td>
                     </tr>
                     <tr>
                        <td>generationQualifier</td>
                        <td>string</td>
                        <td>A person's generation (ex. Jr., Sr.,
                           III)</td>
                     </tr>
                     <tr>
                        <td>initials</td>
                        <td>string</td>
                        <td>A person's middle initial</td>
                     </tr>
                     <tr>
                        <td>organizationUnit</td>
                        <td>string</td>
                        <td>A person's organization unit (ex.
                           Marketing)</td>
                     </tr>
                     <tr>
                        <td>businessNumber</td>
                        <td>string</td>
                        <td>Business phone number</td>
                     </tr>
                     <tr>
                        <td>pagerNumber</td>
                        <td>string</td>
                        <td>Pager phone number</td>
                     </tr>
                     <tr>
                        <td>homeNumber</td>
                        <td>string</td>
                        <td>Home phone number</td>
                     </tr>
                     <tr>
                        <td>mobileNumber</td>
                        <td>string</td>
                        <td>Mobile phone number</td>
                     </tr>
                     <tr>
                        <td>faxNumber</td>
                        <td>string</td>
                        <td>Fax phone number</td>
                     </tr>
                     <tr>
                        <td>homeFaxNumber</td>
                        <td>string</td>
                        <td>Home Fax phone number</td>
                     </tr>
                     <tr>
                        <td>businessStreet</td>
                        <td>string</td>
                        <td>The business street address for a
                           contact</td>
                     </tr>
                     <tr>
                        <td>businessCity</td>
                        <td>string</td>
                        <td>The business city for a contact</td>
                     </tr>
                     <tr>
                        <td>businessState</td>
                        <td>string</td>
                        <td>The business state for a contact</td>
                     </tr>
                     <tr>
                        <td>businessPostalCode</td>
                        <td>string</td>
                        <td>The business postal code/zip code for a
                           contact</td>
                     </tr>
                     <tr>
                        <td>businessCountry</td>
                        <td>string</td>
                        <td>The business country for a contact</td>
                     </tr>
                     <tr>
                        <td>homeStreet</td>
                        <td>string</td>
                        <td>The home street address for a contact</td>
                     </tr>
                     <tr>
                        <td>homeCity</td>
                        <td>string</td>
                        <td>The home city for a contact</td>
                     </tr>
                     <tr>
                        <td>homeState</td>
                        <td>string</td>
                        <td>The home state for a contact</td>
                     </tr>
                     <tr>
                        <td>homePostalCode</td>
                        <td>string</td>
                        <td>The home postal code/zip code for a
                           contact</td>
                     </tr>
                     <tr>
                        <td>homeCountry</td>
                        <td>string</td>
                        <td>The home country for a contact</td>
                     </tr>
                     <tr>
                        <td>notes</td>
                        <td>string</td>
                        <td>Any notes for the mailbox</td>
                     </tr>
                     <tr>
                        <td>title</td>
                        <td>string</td>
                        <td>A contact's title</td>
                     </tr>
                     <tr>
                        <td>userID</td>
                        <td>string</td>
                        <td>A user ID for a contact</td>
                     </tr>
                     <tr>
                        <td>organizationalStatus</td>
                        <td>string</td>
                        <td>A contact's organization status</td>
                     </tr>
                     <tr>
                        <td>employeeType</td>
                        <td>string</td>
                        <td>A contact's employee type</td>
                     </tr>
                     <tr>
                        <td>customID</td>
                        <td>string</td>
                        <td>A custom field that can be used to tie
                           user mailboxes to external user
                           systems</td>
                     </tr>
                     <tr>
                        <td>enabled</td>
                        <td>boolean</td>
                        <td>Status of the mailbox: true = enabled,
                           false = disabled.</td>
                     </tr>
                     <tr>
                        <td>visibleInRackspaceEmailCompanyDirectory</td>
                        <td>boolean</td>
                        <td>Flag indicating whether the mailbox is
                           visible in the company directory</td>
                     </tr>
                     <tr>
                        <td>visibleInExchangeGAL</td>
                        <td>boolean</td>
                        <td>Flag indicating whether the mailbox is
                           visible in the Exchange Global Address
                           List</td>
                     </tr>
                     <tr>
                        <td>currentUsage <i
                              xmlns="http://www.w3.org/1999/xhtml">
                              <b>(read only)</b>
                           </i>
                        </td>
                        <td>positive integer</td>
                        <td>Current space used in mailbox (in MB)</td>
                     </tr>
                     <tr>
                        <td>createdDate <i
                              xmlns="http://www.w3.org/1999/xhtml">
                              <b>(read only)</b>
                           </i>
                        </td>
                        <td>string</td>
                        <td>Date of mailbox creation, EST Time (in
                           string format)</td>
                     </tr>
                     <tr>
                        <td>lastLogin <i
                              xmlns="http://www.w3.org/1999/xhtml">
                              <b>(read only)</b>
                           </i>
                        </td>
                        <td>string</td>
                        <td>Date of last login, EST Time (in string
                           format)</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST
                        '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith',
                        'text/xml', { 'password' =\u003E
                        'Secret13!@#', 'size' =\u003E '2048',
                        'enableVacationMessage' =\u003E 'true',
                        'vacationMessage' =\u003E 'My Vacation
                        Message', 'emailForwardingAddresses' =\u003E
                        'sampletest@example.com,sampletest2@example.com',
                        'saveForwardedEmail' =\u003E 'false'
                        'lastName' =\u003E 'Testlastname', 'firstName'
                        =\u003E 'Jay', 'generationQualifier' =\u003E
                        'III', 'initials' =\u003E 'A',
                        'organizationUnit' =\u003E 'IT',
                        'businessStreet' =\u003E '123 Biz St.',
                        'businessCity' =\u003E 'Blacksburg',
                        'businessState' =\u003E 'VA',
                        'businessPostalCode' =\u003E '24060',
                        'businessCountry' =\u003E 'USA', 'homeStreet'
                        =\u003E '456 Home St.', 'homeCity' =\u003E
                        'Charlotte', 'homeState' =\u003E 'NC',
                        'homePostalCode' =\u003E '28210',
                        'homeCountry' =\u003E 'USA', 'notes' =\u003E
                        'This is my note about my mailbox.', 'title'
                        =\u003E 'My Title', 'userID' =\u003E 'J.Test',
                        'customID' =\u003E '0123456789',
                        'organizationalStatus' =\u003E 'OrgStatus',
                        'employeeType' =\u003E 'Full-Time'
                        'visibleInExchangeGAL'=\u003E'true',
                        'visibleInRackspaceEmailCompanyDirectory'
                        =\u003E 'false' }" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes/{mailbox_name}"
         id="d1e12707a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <method id="d1e4936" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Edit">
               <para role="shortdesc">Edits a Rackspace Email mailbox
                  using the following form fields.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>password</td>
                        <td>string</td>
                        <td>Password (Required for Add)</td>
                     </tr>
                     <tr>
                        <td>size</td>
                        <td>positive integer</td>
                        <td>Mailbox size in megabytes (Required for
                           Add)</td>
                     </tr>
                     <tr>
                        <td>enableVacationMessage</td>
                        <td>boolean</td>
                        <td>indicates whether vacation message has
                           been enabled</td>
                     </tr>
                     <tr>
                        <td>vacationMessage</td>
                        <td>string</td>
                        <td>A mailbox's vacation message</td>
                     </tr>
                     <tr>
                        <td>emailForwardingAddresses</td>
                        <td>string</td>
                        <td>A comma delimited list, Maximum 15
                           addresses, 4 of which can be outside of
                           this domain</td>
                     </tr>
                     <tr>
                        <td>saveForwardedEmail</td>
                        <td>string</td>
                        <td>Indicates whether to save a copy of any
                           forwarded email</td>
                     </tr>
                     <tr>
                        <td>lastName</td>
                        <td>string</td>
                        <td>A last name</td>
                     </tr>
                     <tr>
                        <td>firstName</td>
                        <td>string</td>
                        <td>A first name</td>
                     </tr>
                     <tr>
                        <td>generationQualifier</td>
                        <td>string</td>
                        <td>A person's generation (ex. Jr., Sr.,
                           III)</td>
                     </tr>
                     <tr>
                        <td>initials</td>
                        <td>string</td>
                        <td>A person's middle initial</td>
                     </tr>
                     <tr>
                        <td>organizationUnit</td>
                        <td>string</td>
                        <td>A person's organization unit (ex.
                           Marketing)</td>
                     </tr>
                     <tr>
                        <td>businessNumber</td>
                        <td>string</td>
                        <td>Business phone number</td>
                     </tr>
                     <tr>
                        <td>pagerNumber</td>
                        <td>string</td>
                        <td>Pager phone number</td>
                     </tr>
                     <tr>
                        <td>homeNumber</td>
                        <td>string</td>
                        <td>Home phone number</td>
                     </tr>
                     <tr>
                        <td>mobileNumber</td>
                        <td>string</td>
                        <td>Mobile phone number</td>
                     </tr>
                     <tr>
                        <td>faxNumber</td>
                        <td>string</td>
                        <td>Fax phone number</td>
                     </tr>
                     <tr>
                        <td>homeFaxNumber</td>
                        <td>string</td>
                        <td>Home Fax phone number</td>
                     </tr>
                     <tr>
                        <td>businessStreet</td>
                        <td>string</td>
                        <td>The business street address for a
                           contact</td>
                     </tr>
                     <tr>
                        <td>businessCity</td>
                        <td>string</td>
                        <td>The business city for a contact</td>
                     </tr>
                     <tr>
                        <td>businessState</td>
                        <td>string</td>
                        <td>The business state for a contact</td>
                     </tr>
                     <tr>
                        <td>businessPostalCode</td>
                        <td>string</td>
                        <td>The business postal code/zip code for a
                           contact</td>
                     </tr>
                     <tr>
                        <td>businessCountry</td>
                        <td>string</td>
                        <td>The business country for a contact</td>
                     </tr>
                     <tr>
                        <td>homeStreet</td>
                        <td>string</td>
                        <td>The home street address for a contact</td>
                     </tr>
                     <tr>
                        <td>homeCity</td>
                        <td>string</td>
                        <td>The home city for a contact</td>
                     </tr>
                     <tr>
                        <td>homeState</td>
                        <td>string</td>
                        <td>The home state for a contact</td>
                     </tr>
                     <tr>
                        <td>homePostalCode</td>
                        <td>string</td>
                        <td>The home postal code/zip code for a
                           contact</td>
                     </tr>
                     <tr>
                        <td>homeCountry</td>
                        <td>string</td>
                        <td>The home country for a contact</td>
                     </tr>
                     <tr>
                        <td>notes</td>
                        <td>string</td>
                        <td>Any notes for the mailbox</td>
                     </tr>
                     <tr>
                        <td>title</td>
                        <td>string</td>
                        <td>A contact's title</td>
                     </tr>
                     <tr>
                        <td>userID</td>
                        <td>string</td>
                        <td>A user ID for a contact</td>
                     </tr>
                     <tr>
                        <td>organizationalStatus</td>
                        <td>string</td>
                        <td>A contact's organization status</td>
                     </tr>
                     <tr>
                        <td>employeeType</td>
                        <td>string</td>
                        <td>A contact's employee type</td>
                     </tr>
                     <tr>
                        <td>customID</td>
                        <td>string</td>
                        <td>A custom field that can be used to tie
                           user mailboxes to external user
                           systems</td>
                     </tr>
                     <tr>
                        <td>enabled</td>
                        <td>boolean</td>
                        <td>Status of the mailbox: true = enabled,
                           false = disabled.</td>
                     </tr>
                     <tr>
                        <td>visibleInRackspaceEmailCompanyDirectory</td>
                        <td>boolean</td>
                        <td>Flag indicating whether the mailbox is
                           visible in the company directory</td>
                     </tr>
                     <tr>
                        <td>visibleInExchangeGAL</td>
                        <td>boolean</td>
                        <td>Flag indicating whether the mailbox is
                           visible in the Exchange Global Address
                           List</td>
                     </tr>
                     <tr>
                        <td>currentUsage <i
                              xmlns="http://www.w3.org/1999/xhtml">
                              <b>(read only)</b>
                           </i>
                        </td>
                        <td>positive integer</td>
                        <td>Current space used in mailbox (in MB)</td>
                     </tr>
                     <tr>
                        <td>createdDate <i
                              xmlns="http://www.w3.org/1999/xhtml">
                              <b>(read only)</b>
                           </i>
                        </td>
                        <td>string</td>
                        <td>Date of mailbox creation, EST Time (in
                           string format)</td>
                     </tr>
                     <tr>
                        <td>lastLogin <i
                              xmlns="http://www.w3.org/1999/xhtml">
                              <b>(read only)</b>
                           </i>
                        </td>
                        <td>string</td>
                        <td>Date of last login, EST Time (in string
                           format)</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith',
                        'text/xml', { 'password' =\u003E
                        'Secret13!@#', 'size' =\u003E '2048',
                        'enableVacationMessage' =\u003E 'true',
                        'vacationMessage' =\u003E 'My Vacation
                        Message', 'emailForwardingAddresses' =\u003E
                        'sampletest@example.com,sampletest2@example.com',
                        'saveForwardedEmail' =\u003E 'false'
                        'lastName' =\u003E 'Testlastname', 'firstName'
                        =\u003E 'Jay', 'generationQualifier' =\u003E
                        'III', 'initials' =\u003E 'A',
                        'organizationUnit' =\u003E 'IT',
                        'businessStreet' =\u003E '123 Biz St.',
                        'businessCity' =\u003E 'Blacksburg',
                        'businessState' =\u003E 'VA',
                        'businessPostalCode' =\u003E '24060',
                        'businessCountry' =\u003E 'USA', 'homeStreet'
                        =\u003E '456 Home St.', 'homeCity' =\u003E
                        'Charlotte', 'homeState' =\u003E 'NC',
                        'homePostalCode' =\u003E '28210',
                        'homeCountry' =\u003E 'USA', 'notes' =\u003E
                        'This is my note about my mailbox.', 'title'
                        =\u003E 'My Title', 'userID' =\u003E 'J.Test',
                        'customID' =\u003E '0123456789',
                        'organizationalStatus' =\u003E 'OrgStatus',
                        'employeeType' =\u003E 'Full-Time'
                        'visibleInExchangeGAL'=\u003E'true',
                        'visibleInRackspaceEmailCompanyDirectory'
                        =\u003E 'false' } " });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes/{mailbox_name}"
         id="d1e13392a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <method id="d1e5493" name="DELETE">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Delete">
               <para role="shortdesc">Deletes the mailbox.</para>
               <para>Remarks</para>
               <para>The mailbox and mailbox contents are deleted
                  permanently.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >DELETE
                        '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource
         path="/customers/{customer_account_number}/domains/{domain}/rs/mailboxes/{mailbox}/loginToken"
         id="d1e13578a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain" style="template" required="true"/>
         <param name="mailbox" style="template" required="true"/>
         <method id="d1e5531" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Create Login Token">
               <para role="shortdesc">Generate a login Token which can
                  be used to log in to a user's mailbox. The POST will
                  return a loginToken, created date, and expiration
                  date.</para>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>The login token is valid until the current
                        time (EST) passes the expiration date, and can
                        be used until that point.</para>
                  </listitem>
                  <listitem>
                     <para>Using the generate login token shown in the
                        example below, a user can SSO into
                        testmailbox@testapidomain.net at the following
                        URL: https://{webmail
                        address}/mail/src/redirect.php?user_name={testmailbox@testapidomain.net}&amp;emailaddress=testmailbox@testapidomain.net&amp;sessionID=5b5e27419a363fc5b65bbb63d1c2d3f8</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST
                        '/customers/460896/domains/testapidomain.net/rs/mailboxes/testmailbox/loginToken',
                        {}, 'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;rsMailboxLoginToken
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:rsMailboxLoginToken"&gt;
                        &lt;token&gt;5b5e27419a363fc5b65bbb63d1c2d3f8&lt;/token&gt;
                        &lt;dateCreated&gt;9/22/2010 9:33:15
                        AM&lt;/dateCreated&gt;
                        &lt;expirationDate&gt;9/22/2010 9:53:14
                        AM&lt;/expirationDate&gt;
                        &lt;/rsMailboxLoginToken&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/mobilesync/users"
         id="d1e13785a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e5589" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Index">
               <para role="shortdesc">Returns a list of Mobile Sync
                  users on the domain. This list contains all
                  potential users of Mobile Sync and their current
                  status (enabled/disabled).</para>
               <para>Filter/Search</para>
               <para>Searches may be filtered by the 'name' property
                  using query methods ?startsWith= or
                  ?contains=.</para>
               <para xmlns="http://docbook.org/ns/docbook"
                  >Ordering</para>
               <para>Searches may be ordered by any of their
                  properties. You can order by multiple properties.
                  Some examples are:</para>
               <itemizedlist>
                  <listitem>
                     <para>?order=Name%20asc (Order by name
                        ascending)</para>
                  </listitem>
                  <listitem>
                     <para>?order=Enabled%20desc (Order by enabled
                        descending)</para>
                  </listitem>
                  <listitem>
                     <para>?order[0]=Name%20desc&amp;order[1]=Enabled%20asc
                        (Order by name descending then enabled
                        ascending)</para>
                  </listitem>
               </itemizedlist>
               <para>Note: It is important to capitalize the first
                  letter of the property.</para>
               <para xmlns="http://docbook.org/ns/docbook"
                  >Paging</para>
               <para>Searches may be paged using ?size= and/or
                  ?offset=. Some examples are:</para>
               <itemizedlist>
                  <listitem>
                     <para>?size=3 (Return a maximum of 3
                        results)</para>
                  </listitem>
                  <listitem>
                     <para>?offset=2 (Return results starting with the
                        3rd entry)</para>
                  </listitem>
                  <listitem>
                     <para>?size=5&amp;offset=5 (Return 5 results
                        starting with the 6th entry)</para>
                  </listitem>
               </itemizedlist>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>The index operation only supports the GET
                        HTTP verb.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/12345678/domains/example.com/mobilesync/users?startsWith=a\u0026size=50\u0026offset=100\u0026order=Enabled%20asc',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;mobileSyncUserList
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:mobileSyncUserList"&gt;
                        &lt;offset&gt;100&lt;/offset&gt;
                        &lt;size&gt;50&lt;/size&gt;
                        &lt;total&gt;1000&lt;/total&gt; &lt;users&gt;
                        &lt;user&gt; &lt;name&gt;alex&lt;/name&gt;
                        &lt;domain&gt;example.com&lt;/domain&gt;
                        &lt;enabled&gt;false&lt;/enabled&gt;
                        &lt;details&gt;&lt;/details&gt; &lt;/user&gt;
                        &lt;user&gt; &lt;name&gt;ann&lt;/name&gt;
                        &lt;domain&gt;example.com&lt;/domain&gt;
                        &lt;enabled&gt;true&lt;/enabled&gt;
                        &lt;details&gt;&lt;/details&gt; &lt;/user&gt;
                        &lt;/users&gt;
                        &lt;/mobileSyncUserList&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"offset":100,"size":50,"total":1000,"users":[{"details":null,"domain":"example.com","enabled":false,"name":"alex"},{"details":null,"domain":"example.com","enabled":true,"name":"ann"}]}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/mobilesync/users/enable"
         id="d1e14041a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e5716" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Enable">
               <para role="shortdesc">Enables Mobile Sync for a list
                  of users.</para>
               <para>Special Considerations</para>
               <itemizedlist>
                  <listitem>
                     <para>Enabling Mobile Sync for a user will
                        increase your monthly bill.</para>
                  </listitem>
                  <listitem>
                     <para>This is a throttled operation. Send as many
                        users as you can at once instead of making the
                        call multiple times, once per user.</para>
                  </listitem>
                  <listitem>
                     <para>The maximum number of users per request is
                        250.</para>
                  </listitem>
               </itemizedlist>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>users</td>
                        <td>String array</td>
                        <td>Comma-separated list of user names to
                           enable/disable</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST
                        '/customers/12345678/domains/example.com/mobilesync/users/enable',
                        'text/xml', { 'users' =\u003E
                        'user1,user2,user3' } " });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/mobilesync/users/disable"
         id="d1e14270a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e5815" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Disable">
               <para role="shortdesc">Disables Mobile Sync for a list
                  of users.</para>
               <para>Special Considerations</para>
               <itemizedlist>
                  <listitem>
                     <para>Enabling Mobile Sync for a user will
                        increase your monthly bill.</para>
                  </listitem>
                  <listitem>
                     <para>This is a throttled operation. Send as many
                        users as you can at once instead of making the
                        call multiple times, once per user.</para>
                  </listitem>
                  <listitem>
                     <para>The maximum number of users per request is
                        250.</para>
                  </listitem>
               </itemizedlist>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>users</td>
                        <td>String array</td>
                        <td>Comma-separated list of user names to
                           enable/disable</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST
                        '/customers/12345678/domains/example.com/mobilesync/users/disable',
                        'text/xml', { 'users' =\u003E
                        'user1,user2,user3' } " });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/mobilesync"
         id="d1e14499a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e5914" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Get Domain Auto-Provisioning Setting">
               <para role="shortdesc">Returns the status of domain
                  auto-provisioning setting.</para>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>The index operation only supports the GET
                        HTTP verb.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/12345678/domains/example.com/mobilesync',
                        'text/xml'\u003C 200" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;mobileSyncDomainInfo
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:mobileSyncDomainInfo"&gt;
                        &lt;autoProvision&gt;false&lt;/autoProvision&gt;
                        &lt;/mobileSyncDomainInfo&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"autoProvision":true}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/mobilesync"
         id="d1e14709a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e5975" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Edit Domain Auto-Provisioning Settings">
               <para role="shortdesc">Enables or disables Mobile Sync
                  auto-provisioning for the whole domain.</para>
               <para>Special Considerations</para>
               <itemizedlist>
                  <listitem>
                     <para>Enabling Mobile Sync auto-provisioning will
                        add Mobile Sync to all existing Rackspace
                        Email mailboxes on the domain. Any new
                        Rackspace Email mailbox will have Mobile Sync
                        as well.</para>
                  </listitem>
                  <listitem>
                     <para>Disabling Mobile Sync auto-provisioning
                        will only prevent new mailboxes having Mobile
                        Sync when they are created. It will not
                        disable Mobile Sync for the existing
                        mailboxes. New mailboxes can still add Mobile
                        Sync later.</para>
                  </listitem>
               </itemizedlist>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>autoProvision</td>
                        <td>Boolean</td>
                        <td>'True' for enable and 'False' for
                           disable</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        '/customers/12345678/domains/example.com/mobilesync',
                        'text/xml', { 'autoProvision' =\u003E 'True' }
                        " });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource
         path="v0/customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes/{mailbox_name}/spam/settings"
         id="d1e14946a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <method id="d1e6070" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Show Spam Settings">
               <para role="shortdesc">Returns the spam settings
                  associated with the mailbox.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        /customers/12345678/domains/example.com/rs/mailboxes/alex.smith/spam/settings',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;rsMailboxSpamSetting
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:RSMailboxSpamSetting"&gt;
                        &lt;filterLevel&gt;on&lt;/filterLevel&gt;
                        &lt;rsEmailSettings&gt;
                        &lt;spamHandling&gt;toFolder&lt;/spamHandling&gt;
                        &lt;hasFolderCleaner&gt;false&lt;/hasFolderCleaner&gt;
                        &lt;spamFolderAgeLimit&gt;0&lt;/spamFolderAgeLimit&gt;
                        &lt;spamFolderNumLimit&gt;0&lt;/spamFolderNumLimit&gt;
                        &lt;spamForwardingAddress /&gt;
                        &lt;/rsEmailSettings&gt;
                        &lt;/rsMailboxSpamSetting&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"filterLevel":"on","rsEmailSettings":"hasFolderCleaner":false,"spamFolderAgeLimit":0,"spamFolderNumLimit":0,"spamForwardingAddress":"","spamHandling":"toFolder"}}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/spam/settings"
         id="d1e15146a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e6119" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Edit Spam Settings">
               <para role="shortdesc">Modifies the mailbox spam
                  settings.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>filterLevel</td>
                        <td>string</td>
                        <td>This is a required field. Spam filter
                           status: 'on', 'off', or 'exclusive'.
                           Exclusive mode allows only email cleared by
                           the Safelist.</td>
                     </tr>
                     <tr>
                        <td>rsEmail.spamHandling</td>
                        <td>string</td>
                        <td>The string 'toFolder' will deliver the
                           email to the user's Spam folder, 'delete'
                           will delete the mail immediately,
                           'labelSubject' will prepend [SPAM] to the
                           email's subject line, and 'toAddress' will
                           send the email to a specified folder
                           instead. <para>Valid Field
                              Combinations:</para>
                           <para>(toFolder =&gt; hasFolderCleaner,
                              spamFolderAgeLimit,
                              spamFolderNumLimit)</para>
                           <para>(toAddress =&gt;
                              spamForwardingAddress)</para>
                        </td>
                     </tr>
                     <tr>
                        <td>rsEmail.hasFolderCleaner</td>
                        <td>string</td>
                        <td>This field is effective when
                           rsEmail.spamHandling option is set to
                           'toFolder'. This field controls how the
                           spam that is delivered o the spam folder is
                           handled. There are currently two options
                           supported for handling spam. First option
                           is to set a limit after which the spam gets
                           deleted. One can set limit on the number of
                           days or on the number of spam emails.
                           Second option is to never automatically
                           delete the spam. For both these options to
                           be enabled the rsEmail.hasFolderCleaner
                           field should be set to 'true'. <para>The
                              folder cleaner fields (hasFolderCleaner,
                              spamFolderAgeLimit, spamFolderNumLimit)
                              are allowed only when the spamHandling
                              field is set to 'toFolder'. In order to
                              never delete the spam set the
                              spamFolderAgeLimit and
                              spamFolderNumLimit fields to 0.</para>
                        </td>
                     </tr>
                     <tr>
                        <td>rsEmail.spamFolderAgeLimit</td>
                        <td>string</td>
                        <td>The number of days a message stays in the
                           Spam folder before its deleted. This field
                           is effective only when rsEmail.spamHandling
                           is set to 'toFolder', and
                           'rs.hasFolderCleaner' is set to 'true'.
                           This field cannot have negative value.</td>
                     </tr>
                     <tr>
                        <td>rsEmail.spamFolderNumLimit</td>
                        <td>string</td>
                        <td>The maximum number of emails the Spam
                           folder holds. This field is effective only
                           when rsEmail.spamHandling is set to
                           'toFolder', and 'rs.hasFolderCleaner' is
                           set to 'true'. This field cannot have
                           negative value.</td>
                     </tr>
                     <tr>
                        <td>rsEmail.spamForwardingAddress</td>
                        <td>string</td>
                        <td>The email address that Spam emails will be
                           redirected to. This field is required when
                           the spamHandling field is set to
                           'toAddress'</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        '/customers/100018/domains/resellerallservices.net/rs/mailboxes/unittestexist/spam/settings',
                        { 'filterLevel' =\u003E 'on',
                        'rsEmail.spamHandling' =\u003E 'toFolder',
                        'rsEmail.hasFolderCleaner' =\u003E 'true',
                        'rsEmail.spamFolderAgeLimit' =\u003E '7',
                        'rsEmail.spamFolderNumLimit' =\u003E '100', },
                        Formats.xml" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Invalid input for form field 'filterLevel'.
                     Sample Message: Invalid FilterLevel: high. Input
                     must be: on/off/exclusive</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Invalid input for form field 'spamHandling'.
                     Sample Message: Invalid RSEmail SpamHandling:
                     Input must be:
                     toFolder/delete/labelSubject/toAddress</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Invalid email address in spam forwarding
                     address. Sample Message: Invalid email
                     address</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Empty forwarding address. Sample Message: Spam
                     Forwarding Address cannot be empty for spam
                     handling policy: toAddress</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Invalid value for field 'spamFolderAgeLimit'.
                     Sample Message: Invalid RSEmail
                     SpamCleanupOption: -1. rsEmail.spamFolderAgeLimit
                     should be non-negative</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Invalid value for field 'spamFolderNumLimit'.
                     Sample Message: Invalid RSEmail
                     SpamCleanupOption: -1. rsEmail.spamNumberLimit
                     should be non-negative.</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Invalid field combination. Sample Message:
                     Invalid field combination: Folder cleaner options
                     cannot be specified with spam handling policy:
                     delete.</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Invalid field combination. Sample Message:
                     Invalid field combination: Folder cleaner options
                     cannot be specified with spam handling policy:
                     labelSubject.</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Invalid field combination. Sample Message:
                     Invalid field combination: Folder cleaner options
                     cannot be specified with spam handling policy:
                     toAddress.</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes/{mailbox_name}/spam/blacklist"
         id="d1e15563a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <method id="d1e6353" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Blacklist - Index">
               <para role="shortdesc">Returns email address blacklist
                  associated with the mailbox.</para>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>The Index operation only supports the GET
                        HTTP verb.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith/spam/blacklist',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;blacklist
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:blacklist"&gt;
                        &lt;addresses&gt;
                        &lt;address&gt;name1@spam.com&lt;/address&gt;
                        &lt;address&gt;name2@spam.com&lt;/address&gt;
                        &lt;/addresses&gt;
                        &lt;/blacklist&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"addresses":["name1@spam.com","name2@spam.com"]}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes/{mailbox_name}/spam/blacklist/{email_address}"
         id="d1e15772a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <param name="email_address" style="template" required="true"/>
         <method id="d1e6418" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Blacklist - Add">
               <para role="shortdesc">Adds an email address or domain
                  to the blacklist.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST
                        '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith/spam/blacklist/anyone@spam.com',
                        {},'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entered invalid email or domain. Sample
                     Message: invalid email address: abc</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entered current domain. Sample Message: Adding
                     example.com would blacklist the current
                     domain</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes/{mailbox_name}/spam/blacklist"
         id="d1e15998a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <method id="d1e6468" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Blacklist - Edit">
               <para role="shortdesc">Edits email addresses on the
                  blacklist.</para>
               <para>Remarks</para>
               <para>You can use a '%' as a wildcard in domains, but
                  not in the TLD (.com, .net, etc). You cannot use
                  wildcards in email addresses. For example, the
                  following are allowed: @%.example.com,
                  @examp%.com.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>addList</td>
                        <td>string</td>
                        <td>Comma separated list of email addresses to
                           add to the list</td>
                     </tr>
                     <tr>
                        <td>removeList</td>
                        <td>string</td>
                        <td>Comma separated list of email addresses to
                           remove from the list</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        '/customers/12345678/domains/example.com/rs/mailboxes/jane.doe/spam/blacklist',
                        { 'addList' =\u003E
                        '@%.example.com,abc@example.com', 'removeList'
                        =\u003E '@examp%.com' }, 'text/xml'"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes/{mailbox_name}/spam/blacklist/{email_address}"
         id="d1e16230a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <param name="email_address" style="template" required="true"/>
         <method id="d1e6565" name="DELETE">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Blacklist - Delete">
               <para role="shortdesc">Removes an email address or
                  domain from the blacklist.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >DELETE
                        '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith/spam/blacklist/anyone@yahoo.com',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entered invalid email or domain. Sample
                     Message: invalid email address: abc</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entered email or domain is not on the current
                     blacklist. Sample Message: abc@junkmail.com is
                     not found on the list</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes/{mailbox_name}/spam/ipblacklist"
         id="d1e16455a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <method id="d1e6615" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="IP Blacklist - Index">
               <para role="shortdesc">Returns IP blacklist associated
                  with the mailbox.</para>
               <para>Remarks:</para>
               <itemizedlist>
                  <listitem>
                     <para>The Index operation only supports the GET
                        HTTP verb.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith/spam/ipblacklist',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;ipBlacklist
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:ipBlacklist"&gt;
                        &lt;addresses&gt;
                        &lt;ip&gt;216.12.34.1&lt;/ip&gt;
                        &lt;ip&gt;216.12.34.2&lt;/ip&gt;
                        &lt;/addresses&gt;
                        &lt;/ipBlacklist&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"addresses":["216.12.34.1","216.12.34.2"]}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes/{mailbox_name}/spam/ipblacklist/{ip_address}"
         id="d1e16664a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <param name="ip_address" style="template" required="true"/>
         <method id="d1e6680" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="IP Blacklist - Add">
               <para role="shortdesc">Adds an IP to the
                  blacklist.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST
                        '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith/spam/blacklist/216.12.34.1',
                        {},'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entered invalid IP address. Sample Message:
                     invalid ip address: 123</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes/{mailbox_name}/spam/ipblacklist"
         id="d1e16877a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <method id="d1e6725" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="IP Blacklist - Edit">
               <para role="shortdesc">Edits IP addresses on the
                  blacklist.</para>
               <para>Remarks</para>
               <para>You can use a '%' as a wildcard in the last
                  octets to specify IP ranges. For example:
                  216.12.34.%, 216.12.%.%, 216.%.%.%.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>addList</td>
                        <td>string</td>
                        <td>Comma separated list of IP addresses to
                           add to the list</td>
                     </tr>
                     <tr>
                        <td>removeList</td>
                        <td>string</td>
                        <td>Comma separated list of IP addresses to
                           remove from the list</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        '/customers/12345678/domains/example.com/rs/mailboxes/jane.doe/spam/ipblacklist',
                        { 'addList' =\u003E '216.12.34.%,216.12.%.%',
                        'removeList' =\u003E '216.%.%.%' },
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes/{mailbox_name}/spam/ipblacklist/{ip_address}"
         id="d1e17109a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <param name="ip_address" style="template" required="true"/>
         <method id="d1e6822" name="DELETE">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="IP Blacklist - Delete">
               <para role="shortdesc">Removes an IP from the
                  blacklist.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >DELETE
                        '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith/spam/ipblacklist/216.12.34.1',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entered IP is not on the current blacklist.
                     Sample Message: 216.12.34.1 is not found on the
                     blacklist</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes/{mailbox_name}/spam/safelist"
         id="d1e17323a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <method id="d1e6863" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Safelist - Index">
               <para role="shortdesc">Returns email address safelist
                  associated with the mailbox.</para>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>The Index operation only supports the GET
                        HTTP verb.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith/spam/safelist',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;safelist
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:safelist"&gt; &lt;addresses&gt;
                        &lt;address&gt;name1@notspam.com&lt;/address&gt;
                        &lt;address&gt;name2@notspam.com&lt;/address&gt;
                        &lt;/addresses&gt;
                        &lt;/safelist&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"addresses":["name1@notspam.com","name2@notspam.com"]}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes/{mailbox_name}/spam/safelist/{email_address}"
         id="d1e17532a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <param name="email_address" style="template" required="true"/>
         <method id="d1e6928" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Safelist - Add">
               <para role="shortdesc">Adds an email address or domain
                  to the safelist.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST
                        '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith/spam/safelist/anyone@yahoo.com',
                        {},'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entered invalid email or domain. Sample
                     Message: invalid email address: abc</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes/{mailbox_name}/spam/safelist"
         id="d1e17745a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <method id="d1e6969" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Safelist - Edit">
               <para role="shortdesc">Edits email addresses on the
                  safelist.</para>
               <para>Remarks</para>
               <para>You can use a '%' as a wildcard in domains, but
                  not in the TLD (.com, .net, etc). You cannot use
                  wildcards in email addresses. For example, the
                  following are allowed: @%.example.com,
                  @examp%.com.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>addList</td>
                        <td>string</td>
                        <td>Comma separated list of email addresses to
                           add to the list</td>
                     </tr>
                     <tr>
                        <td>removeList</td>
                        <td>string</td>
                        <td>Comma separated list of email addresses to
                           remove from the list</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        '/customers/12345678/domains/example.com/rs/mailboxes/jane.doe/spam/safelist',
                        { 'addList' =\u003E
                        '@%.example.com,abc@example.com', 'removeList'
                        =\u003E '@examp%.com' }, 'text/xml'"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes/{mailbox_name}/spam/safelist/{email_address}"
         id="d1e17977a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <param name="email_address" style="template" required="true"/>
         <method id="d1e7066" name="DELETE">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Safelist - Delete">
               <para role="shortdesc">Removes an email address or
                  domain from the safelist.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >DELETE
                        '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith/spam/safelist/anyone@yahoo.com',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entered invalid email or domain. Sample
                     Message: invalid email address: abc</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entered email or domain is not on the current
                     safelist. Sample Message: anyone@yahoo.com is not
                     found on the list</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes/{mailbox_name}/spam/ipsafelist"
         id="d1e18202a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <method id="d1e7117" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="IP Safelist - Index">
               <para role="shortdesc">Returns IP safelist associated
                  with the mailbox.</para>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>The Index operation only supports the GET
                        HTTP verb.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith/spam/ipsafelist',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;ipSafelist
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:ipSafelist"&gt;
                        &lt;addresses&gt;
                        &lt;ip&gt;192.168.0.1&lt;/ip&gt;
                        &lt;ip&gt;192.168.0.2&lt;/ip&gt;
                        &lt;/addresses&gt;
                        &lt;/ipSafelist&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"addresses":["192.168.0.1","192.168.0.2"]}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes/{mailbox_name}/spam/ipsafelist/{ip_address}"
         id="d1e18411a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <param name="ip_address" style="template" required="true"/>
         <method id="d1e7182" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="IP Safelist - Add">
               <para role="shortdesc">Adds an IP to the
                  safelist.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST
                        '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith/spam/ipsafelist/216.12.34.1',
                        {},'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entered invalid IP address. Sample Message:
                     invalid ip address: 123</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes/{mailbox_name}/spam/ipsafelist"
         id="d1e18625a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <method id="d1e7223" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="IP Safelist - Edit">
               <para role="shortdesc">Edits IP addresses on the
                  safelist.</para>
               <para>Remarks</para>
               <para>You can use a '%' as a wildcard in the last
                  octets to specify IP ranges. For example:
                  216.12.34.%, 216.12.%.%, 216.%.%.%.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>addList</td>
                        <td>string</td>
                        <td>Comma separated list of IP addresses to
                           add to the list</td>
                     </tr>
                     <tr>
                        <td>removeList</td>
                        <td>string</td>
                        <td>Comma separated list of IP addresses to
                           remove from the list</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        '/customers/12345678/domains/example.com/rs/mailboxes/jane.doe/spam/ipsafelist',
                        { 'addList' =\u003E '216.12.34.%,216.12.%.%',
                        'removeList' =\u003E '216.%.%.%' },
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes/{mailbox_name}/spam/ipsafelist/{email_address}"
         id="d1e18857a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <param name="email_address" style="template" required="true"/>
         <method id="d1e7320" name="DELETE">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="IP Safelist - Delete">
               <para role="shortdesc">Removes an IP from the
                  safelist.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >DELETE
                        '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith/spam/ipsafelist/216.12.34.1',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entered IP is not on the current safelist.
                     Sample Message: 216.12.34.1 is not found on the
                     safelist</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/rs/storageNotification"
         id="d1e19081a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e7359" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Show">
               <para role="shortdesc">Returns detailed information
                  about a given domain's Rackspace Mailbox storage
                  notification settings that control whether an email
                  notification is sent to users when their mailbox
                  reaches a certain capacity.</para>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>The index operation only supports the GET
                        HTTP verb.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/12345678/domains/example.com/rs/storageNotification',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;rsStorageNotification
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:rsStorageNotification"&gt;
                        &lt;enabled&gt;true&lt;/enabled&gt;
                        &lt;notificationCC&gt;test@email.net&lt;/notificationCC&gt;
                        &lt;notificationMessage&gt;The mailbox is
                        getting full.&lt;/notificationMessage&gt;
                        &lt;notificationPercentage&gt;99&lt;/notificationPercentage&gt;
                        &lt;/rsStorageNotification&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"enabled":true,
                        "notificationCC":"test@email.net",
                        "notificationMessage":"Test",
                        "notificationPercentage":99}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/rs/storageNotification"
         id="d1e19290a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e7420" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Edit">
               <para role="shortdesc">Updates detailed information
                  about a given domain's Rackspace Mailbox storage
                  notification settings.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>enabled</td>
                        <td>boolean</td>
                        <td>Activates domain storage notification.
                           (Required)</td>
                     </tr>
                     <tr>
                        <td>notificationPercentage</td>
                        <td>int</td>
                        <td>The storage percentage that triggers the
                           notification. (Required for Add) (Valid
                           Values: 50, 60, 70, 80, 90, 99)</td>
                     </tr>
                     <tr>
                        <td>notificationMessage</td>
                        <td>string</td>
                        <td>The notification message. (The special tag
                           &lt;*USER*&gt; will substitute in the
                           username. The special tag &lt;*DOMAIN*&gt;
                           will substitute in the domain.)</td>
                     </tr>
                     <tr>
                        <td>notificationCC</td>
                        <td>string</td>
                        <td>An email address the notification message
                           will be carbon copied to.</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith',
                        'text/xml', { 'enabled' =\u003E 'true',
                        'notificationPercentage' =\u003E '90',
                        'notificationMessage' =\u003E 'Your mailbox
                        \"\u003C*USER*\u003E@\u003C*DOMAIN*\u003E\" is
                        almost full.', 'notificationCC' =\u003E
                        'test@testdomain.com' } " });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/rs/aliases/"
         id="d1e19551a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e7532" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Index">
               <para role="shortdesc">Shows a list of aliases for the
                  Rackspace domain.</para>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>The show operation only supports the GET
                        HTTP verb.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/12345678/domains/example.com/rs/aliases',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;aliasList
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:aliasList"&gt; &lt;aliases&gt;
                        &lt;alias&gt; &lt;name&gt;alias1&lt;/name&gt;
                        &lt;numberOfMembers&gt;3&lt;/numberOfMembers&gt;
                        &lt;/alias&gt; &lt;/aliases&gt;
                        &lt;/aliasList&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"aliases":[{"name":"alias1","numberOfMembers":3}]}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/rs/mailboxes/{mailbox_name}/alias/{alias_name}"
         id="d1e19760a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <param name="alias_name" style="template" required="true"/>
         <method id="d1e7597" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Show">
               <para role="shortdesc">Returns detailed information
                  about the specified alias.</para>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>The show operation only supports the GET
                        HTTP verb.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/100018/domains/resellerallservices.net/rs/aliases/alias1',
                        Formats.xml" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;alias
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:alias"&gt;
                        &lt;name&gt;alias1&lt;/name&gt;
                        &lt;emailAddressList&gt;
                        &lt;emailAddress&gt;jane.doe@resellerallservices.net&lt;/emailAddress&gt;
                        &lt;emailAddress&gt;e3@yahoo.com&lt;/emailAddress&gt;
                        &lt;/emailAddressList&gt;
                        &lt;/alias&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"emailAddressList":{"emailAddress":["jane.doe@resellerallservices.net","e3@yahoo.com"]},"name":"alias3"}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Non-existent alias.. Sample Message: Resource
                     not found.</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/rs/aliases/{alias_name}"
         id="d1e20003a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="alias_name" style="template" required="true"/>
         <method id="d1e7669" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Add">
               <para role="shortdesc">Creates an alias.</para>
               <para>Remarks</para>
               <para>Currently there is a limit of 50 domain emails
                  and 4 non-domain emails.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>aliasEmails</td>
                        <td>Comma separated list of domain and
                           non-domain emails.</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST
                        '/customers/100018/domains/resellerallservices.net/rs/aliases/alias1',
                        {'aliasEmails'=\u003E'jane.doe@resellerallservices.net,
                        joe.schmoe@resellerallservices.net,e1@yahoo.com,
                        e2@gmail.com' }, Formats.xml" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Non-existent domain email address.. Sample
                     Message: An alias must point to a valid email
                     address. The following email addresses do not
                     exist: a@resellerallservices.net</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Empty domain email list and non-domain email
                     list.. Sample Message: An alias must point to a
                     valid email address.</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>More than four non-domain email addresses
                     specified.. Sample Message: Max number of
                     non-local email recipients reached.</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/rs/aliases/{alias_name}"
         id="d1e20273a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="alias_name" style="template" required="true"/>
         <method id="d1e7771" name="DELETE">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Delete">
               <para role="shortdesc">Deletes the alias.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >DELETE
                        '/customers/100018/domains/resellerallservices.net/rs/aliases/alias1',
                        Formats.xml" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Non-existent alias.. Sample Message: Resource
                     not found</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/rs/aliases/{alias_name}/{email_address}"
         id="d1e20487a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="alias_name" style="template" required="true"/>
         <param name="email_address" style="template" required="true"/>
         <method id="d1e7814" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Add Email Address To Alias List">
               <para role="shortdesc">Adds an email address to the
                  domain email list or to the non-domain email
                  list.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST
                        '/customers/100018/domains/resellerallservices.net/rs/aliases/alias1/joe.schmoe@resellerallservices.net',
                        {}, Formats.xml" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Non-existent email address in the alias..
                     Sample Message: An alias must point to a valid
                     email address. The following email addresses do
                     not exist: a@resellerallservices.net</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>More than four non-domain email addresses
                     specified.. Sample Message: Max number of
                     non-local email recipients reached.</para>
               </wadl:doc>
            </response>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Non existent alias.. Sample Message: Resource
                     not found.</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/rs/aliases/{alias_name}/{email_address}"
         id="d1e20724a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="alias_name" style="template" required="true"/>
         <param name="email_address" style="template" required="true"/>
         <method id="d1e7876" name="DELETE">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Delete Email Address From Alias List">
               <para role="shortdesc">Deletes an email address from
                  the domain email list or from the non-domain email
                  list.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >DELETE
                        '/customers/100018/domains/resellerallservices.net/rs/aliases/alias1/joe.schmoe@resellerallservices.net',
                        {}, Formats.xml" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Non-existent alias.. Sample Message: Resource
                     not found</para>
               </wadl:doc>
            </response>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Non existent email address in the alias..
                     Sample Message: Email address
                     jane.doe@resellerallservices.net does not exist
                     in alias alias1.</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/rs/aliases/{alias_name}"
         id="d1e20949a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="alias_name" style="template" required="true"/>
         <method id="d1e7927" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Bulk Modify Alias List">
               <para role="shortdesc">Modifies an existing alias by
                  replacing its contents with the new email addresses
                  specified in the field aliasEmails.</para>
               <para>The following list shows the number of email
                  addresses you can specify:</para>
               <itemizedlist>
                  <listitem>
                     <itemizedlist>
                        <listitem>
                           <para>1 - 50 domain email addresses</para>
                        </listitem>
                        <listitem>
                           <para>1 - 4 non-domain addresses</para>
                        </listitem>
                     </itemizedlist>
                  </listitem>
                  <listitem>
                     <para>You must specify at least one email
                        address. By default, the maximum combined
                        total of email addresses you can specify is
                        50.</para>
                  </listitem>
                  <listitem>
                     <para>You cannot delete a specific email address
                        using DELETE. If you use DELETE with this
                        operation, the entire alias is deleted.</para>
                  </listitem>
               </itemizedlist>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>aliasEmail</td>
                        <td>string</td>
                        <td>A comma separated list of email
                           addresses.</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        '/customers/100487/domains/testdomain.com/rs/aliases/alias_name',
                        {
                        aliasEmails=email@outsider.com,abc@yahoo.com,user1@domain.com,
                        user2@domain.com }, 'text/xml'"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Modify Invalid Alias. Sample Message: Entity
                     of type Alias identified by user3@domain.com was
                     not found.</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Modify Valid Alias With No Email Address.
                     Sample Message: An alias must point to a valid
                     email address.</para>
               </wadl:doc>
            </response>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Modify Valid Alias With Non Existing Email
                     Address(es). Sample Message: An alias must point
                     to a valid email address. The following email
                     addresses do not exist: user@domain.com.</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes"
         id="d1e21249a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e8063" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Index">
               <para role="shortdesc">Shows a list of mailboxes under
                  the domain</para>
               <para>Filter/Search</para>
               <para>Mailbox searches may be filtered by the 'enabled'
                  flag using query methods ?enabled=true and
                  ?enabled=false.</para>
               <para>Custom Fields</para>
               <itemizedlist>
                  <listitem>
                     <para>The result displays each mailbox's 'name'
                        and 'displayName' as default.</para>
                  </listitem>
                  <listitem>
                     <para>There is a query string 'fields' that
                        allows the result to display more mailbox
                        properties. The additional properties are:
                        'size', 'currentUsage',
                        'hasBlackBerryMobileService',
                        'hasActiveSyncMobileService'.</para>
                  </listitem>
               </itemizedlist>
               <para>
                  <i xmlns="http://www.w3.org/1999/xhtml">Example</i>
               </para>
               <itemizedlist>
                  <listitem>
                     <para>GET
                        '/customers/12345678/domains/example.com/ex/mailboxes?fields=size,currentUsage',
                        'text/xml'</para>
                  </listitem>
               </itemizedlist>
               <para>Remarks</para>
               <para>The show operation only supports the GET HTTP
                  verb.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/12345678/domains/example.com/ex/mailboxes',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;mailboxList
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:mailboxList"&gt;
                        &lt;offset&gt;0&lt;/offset&gt;
                        &lt;size&gt;50&lt;/size&gt;
                        &lt;total&gt;3&lt;/total&gt; &lt;mailboxes&gt;
                        &lt;mailbox&gt;
                        &lt;name&gt;apiexmailbox55&lt;/name&gt;
                        &lt;displayName&gt;API
                        Test&lt;/displayName&gt; &lt;/mailbox&gt;
                        &lt;mailbox&gt;
                        &lt;name&gt;apiexmailbox6&lt;/name&gt;
                        &lt;displayName&gt;API
                        Test&lt;/displayName&gt; &lt;/mailbox&gt;
                        &lt;mailbox&gt;
                        &lt;name&gt;apiexmailbox90&lt;/name&gt;
                        &lt;displayName&gt;API
                        Test&lt;/displayName&gt; &lt;/mailbox&gt;
                        &lt;/mailboxes&gt;
                        &lt;/mailboxList&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"offset":0,"size":50,"total":3,"mailboxes":[{"name":"apiexmailbox55","displayName":"API
                        Test"},{"name":"apiexmailbox6","displayName":"API
                        Test"},{"name":"apiexmailbox90","displayName":"API
                        Test"}]}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}"
         id="d1e21484a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <method id="d1e8160" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Show">
               <para role="shortdesc">Returns detailed information
                  about the specified mailbox.</para>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>The show operation only supports the GET
                        HTTP verb.</para>
                  </listitem>
                  <listitem>
                     <para>The "samAccountName" is the logon name used
                        to support clients and servers running older
                        versions of the operating system.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/12345678/domains/example.com/ex/mailboxes/alex.smith',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;mailbox
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:mailbox"&gt;
                        &lt;name&gt;apiexmailbox90&lt;/name&gt;
                        &lt;displayName&gt;API
                        Test&lt;/displayName&gt;
                        &lt;size&gt;2048&lt;/size&gt;
                        &lt;currentUsage&gt;0&lt;/currentUsage&gt;
                        &lt;isHidden&gt;false&lt;/isHidden&gt;
                        &lt;visibleInRackspaceEmailCompanyDirectory&gt;false&lt;/visibleInRackspaceEmailCompanyDirectory&gt;
                        &lt;isPublicFolderAdmin&gt;true&lt;/isPublicFolderAdmin&gt;
                        &lt;enabled&gt;true&lt;/enabled&gt;
                        &lt;lastLogin&gt;2/12/2010 1:00:00
                        AM&lt;/lastLogin&gt; &lt;contactInfo&gt;
                        &lt;firstName&gt;API&lt;/firstName&gt;
                        &lt;lastName&gt;Test&lt;/lastName&gt;
                        &lt;jobTitle&gt;Dev&lt;/jobTitle&gt;
                        &lt;company&gt;My Company&lt;/company&gt;
                        &lt;department&gt;R&amp;D&lt;/department&gt;
                        &lt;businessNumber&gt;111-1111&lt;/businessNumber&gt;
                        &lt;homeNumber&gt;222-2222&lt;/homeNumber&gt;
                        &lt;mobileNumber&gt;333-3333&lt;/mobileNumber&gt;
                        &lt;faxNumber&gt;444-4444&lt;/faxNumber&gt;
                        &lt;pagerNumber&gt;1234&lt;/pagerNumber&gt;
                        &lt;addressLine1&gt;123 Main
                        Street&lt;/addressLine1&gt;
                        &lt;city&gt;Blacksburg&lt;/city&gt;
                        &lt;state&gt;VA&lt;/state&gt;
                        &lt;zip&gt;24060&lt;/zip&gt;
                        &lt;country&gt;USA&lt;/country&gt;
                        &lt;notes&gt;My Notes&lt;/notes&gt;
                        &lt;customID&gt;0123456789&lt;/customID&gt;
                        &lt;/contactInfo&gt;
                        &lt;emailForwardingAddress&gt;apiexmailbox8@apidomain24.com&lt;/emailForwardingAddress&gt;
                        &lt;emailAddressList&gt; &lt;emailAddress&gt;
                        &lt;address&gt;apiexmailbox90@apidomain92.com&lt;/address&gt;
                        &lt;replyTo&gt;true&lt;/replyTo&gt;
                        &lt;/emailAddress&gt;
                        &lt;/emailAddressList&gt;
                        &lt;hasBlackBerryMobileService&gt;false&lt;/hasBlackBerryMobileService&gt;
                        &lt;hasActiveSyncMobileService&gt;false&lt;/hasActiveSyncMobileService&gt;
                        &lt;samAccountName&gt;apiexmailbox90_53B5B&lt;/samAccountName&gt;
                        &lt;/mailbox&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"name":"apiexmailbox90", "displayName":"API
                        Test", "size":2048, "currentUsage":0,
                        "isHidden":false, "isPublicFolderAdmin":true,
                        "enabled":true, "lastLogin":"2\/12\/2006
                        1:00:00 AM", "contactInfo":{"firstName":"API",
                        "lastName":"Test", "jobTitle":"Dev",
                        "company":"My Company",
                        "department":"R&amp;D",
                        "businessNumber":"111-1111",
                        "homeNumber":"222-2222",
                        "mobileNumber":"333-3333",
                        "faxNumber":"444-4444", "pagerNumber":"1234",
                        "addressLine1":"123 Main Street",
                        "city":"Blacksburg", "state":"VA",
                        "zip":"24060", "country":"USA", "notes":"My
                        Notes", "customID":"0123456789"},
                        "emailForwardingAddress":"apiexmailbox8@apidomain24.com",
                        "emailAddressList":[{"address":"apiexmailbox90@apidomain92.com",
                        "replyTo":true}],
                        "hasBlackBerryMobileService":false,
                        "hasActiveSyncMobileService":false,
                        "samAccountName":"apiexmailbox90_53B5B",
                        "visibleInRackspaceEmailCompanyDirectory":false}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}"
         id="d1e21696a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <method id="d1e8229" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Add">
               <para role="shortdesc">Adds a mailbox using the
                  specified form fields. All required fields must be
                  supplied when adding. Other fields may be
                  omitted.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>displayName</td>
                        <td>string</td>
                        <td>Display name (Required for Add)</td>
                     </tr>
                     <tr>
                        <td>password</td>
                        <td>string</td>
                        <td>Password (Required for Add)</td>
                     </tr>
                     <tr>
                        <td>size</td>
                        <td>positive integer</td>
                        <td>Mailbox size in megabytes (Required for
                           Add)</td>
                     </tr>
                     <tr>
                        <td>isHidden</td>
                        <td>boolean</td>
                        <td>Indicates whether or not the mailbox is
                           hidden from the Global Address List</td>
                     </tr>
                     <tr>
                        <td>isPublicFolderAdmin</td>
                        <td>boolean</td>
                        <td>Indicates whether or not the account is a
                           public folder administrator</td>
                     </tr>
                     <tr>
                        <td>firstName</td>
                        <td>string</td>
                        <td>First name</td>
                     </tr>
                     <tr>
                        <td>lastName</td>
                        <td>string</td>
                        <td>Last name</td>
                     </tr>
                     <tr>
                        <td>company</td>
                        <td>string</td>
                        <td>Company</td>
                     </tr>
                     <tr>
                        <td>department</td>
                        <td>string</td>
                        <td>Department</td>
                     </tr>
                     <tr>
                        <td>jobTitle</td>
                        <td>string</td>
                        <td>Job title</td>
                     </tr>
                     <tr>
                        <td>addressLine1</td>
                        <td>string</td>
                        <td>Street address</td>
                     </tr>
                     <tr>
                        <td>city</td>
                        <td>string</td>
                        <td>City</td>
                     </tr>
                     <tr>
                        <td>state</td>
                        <td>string</td>
                        <td>State</td>
                     </tr>
                     <tr>
                        <td>zip</td>
                        <td>string</td>
                        <td>Zip or postal code</td>
                     </tr>
                     <tr>
                        <td>country</td>
                        <td>string</td>
                        <td>Country</td>
                     </tr>
                     <tr>
                        <td>businessNumber</td>
                        <td>string</td>
                        <td>Business phone number</td>
                     </tr>
                     <tr>
                        <td>pagerNumber</td>
                        <td>string</td>
                        <td>Pager phone number</td>
                     </tr>
                     <tr>
                        <td>homeNumber</td>
                        <td>string</td>
                        <td>Home phone number</td>
                     </tr>
                     <tr>
                        <td>mobileNumber</td>
                        <td>string</td>
                        <td>Mobile phone number</td>
                     </tr>
                     <tr>
                        <td>faxNumber</td>
                        <td>string</td>
                        <td>Fax phone number</td>
                     </tr>
                     <tr>
                        <td>notes</td>
                        <td>string</td>
                        <td>Notes field</td>
                     </tr>
                     <tr>
                        <td>customID</td>
                        <td>string</td>
                        <td>A custom field that can be used to tie
                           user mailboxes to external user
                           systems</td>
                     </tr>
                     <tr>
                        <td>emailForwardingAddress</td>
                        <td>string</td>
                        <td>Forwarding email address (If this field is
                           assigned an email address, then email
                           forwarding will be turned on. If this field
                           is not assigned or assigned an empty
                           string, then email forwarding will be
                           disabled.)</td>
                     </tr>
                     <tr>
                        <td>visibleInRackspaceEmailCompanyDirectory</td>
                        <td>boolean</td>
                        <td>Flag indicating whether the mailbox is
                           visible in the company directory</td>
                     </tr>
                     <tr>
                        <td>enabled</td>
                        <td>boolean</td>
                        <td>Enable/Disable mailbox, input must be
                           "true" or "false"</td>
                     </tr>
                     <tr>
                        <td>lastLogin <i
                              xmlns="http://www.w3.org/1999/xhtml">
                              <b>(read only)</b>
                           </i>
                        </td>
                        <td>string</td>
                        <td>Date of last login, EST Time (in string
                           format)</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST
                        '/customers/12345678/domains/example.com/ex/mailboxes/alex.smith',
                        'text/xml', { 'displayName' =\u003E 'Alex
                        Smith', 'password' =\u003E 'Secret123!@#',
                        'size' =\u003E '2048' } " });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>New mailbox name (user name) doesn't meet the
                     naming requirements. Sample Message: Invalid user
                     name</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>New mailbox display name doesn't meet the
                     naming requirements. Sample Message: Invalid
                     display name</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>New mailbox password doesn't meet the password
                     pattern requirements. Sample Message: Password
                     must be at least 8 characters long</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>New mailbox name (user name) already exists.
                     Sample Message: The email address
                     john.doe@abc.com is already in use</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}"
         id="d1e22286a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <method id="d1e8653" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Edit">
               <para role="shortdesc">Edits a mailbox using the
                  specified form fields. All required fields must be
                  supplied when adding. Other fields may be
                  omitted.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>displayName</td>
                        <td>string</td>
                        <td>Display name (Required for Add)</td>
                     </tr>
                     <tr>
                        <td>password</td>
                        <td>string</td>
                        <td>Password (Required for Add)</td>
                     </tr>
                     <tr>
                        <td>size</td>
                        <td>positive integer</td>
                        <td>Mailbox size in megabytes (Required for
                           Add)</td>
                     </tr>
                     <tr>
                        <td>isHidden</td>
                        <td>boolean</td>
                        <td>Indicates whether or not the mailbox is
                           hidden from the Global Address List</td>
                     </tr>
                     <tr>
                        <td>isPublicFolderAdmin</td>
                        <td>boolean</td>
                        <td>Indicates whether or not the account is a
                           public folder administrator</td>
                     </tr>
                     <tr>
                        <td>firstName</td>
                        <td>string</td>
                        <td>First name</td>
                     </tr>
                     <tr>
                        <td>lastName</td>
                        <td>string</td>
                        <td>Last name</td>
                     </tr>
                     <tr>
                        <td>company</td>
                        <td>string</td>
                        <td>Company</td>
                     </tr>
                     <tr>
                        <td>department</td>
                        <td>string</td>
                        <td>Department</td>
                     </tr>
                     <tr>
                        <td>jobTitle</td>
                        <td>string</td>
                        <td>Job title</td>
                     </tr>
                     <tr>
                        <td>addressLine1</td>
                        <td>string</td>
                        <td>Street address</td>
                     </tr>
                     <tr>
                        <td>city</td>
                        <td>string</td>
                        <td>City</td>
                     </tr>
                     <tr>
                        <td>state</td>
                        <td>string</td>
                        <td>State</td>
                     </tr>
                     <tr>
                        <td>zip</td>
                        <td>string</td>
                        <td>Zip or postal code</td>
                     </tr>
                     <tr>
                        <td>country</td>
                        <td>string</td>
                        <td>Country</td>
                     </tr>
                     <tr>
                        <td>businessNumber</td>
                        <td>string</td>
                        <td>Business phone number</td>
                     </tr>
                     <tr>
                        <td>pagerNumber</td>
                        <td>string</td>
                        <td>Pager phone number</td>
                     </tr>
                     <tr>
                        <td>homeNumber</td>
                        <td>string</td>
                        <td>Home phone number</td>
                     </tr>
                     <tr>
                        <td>mobileNumber</td>
                        <td>string</td>
                        <td>Mobile phone number</td>
                     </tr>
                     <tr>
                        <td>faxNumber</td>
                        <td>string</td>
                        <td>Fax phone number</td>
                     </tr>
                     <tr>
                        <td>notes</td>
                        <td>string</td>
                        <td>Notes field</td>
                     </tr>
                     <tr>
                        <td>customID</td>
                        <td>string</td>
                        <td>A custom field that can be used to tie
                           user mailboxes to external user
                           systems</td>
                     </tr>
                     <tr>
                        <td>emailForwardingAddress</td>
                        <td>string</td>
                        <td>Forwarding email address (If this field is
                           assigned an email address, then email
                           forwarding will be turned on. If this field
                           is not assigned or assigned an empty
                           string, then email forwarding will be
                           disabled.)</td>
                     </tr>
                     <tr>
                        <td>visibleInRackspaceEmailCompanyDirectory</td>
                        <td>boolean</td>
                        <td>Flag indicating whether the mailbox is
                           visible in the company directory</td>
                     </tr>
                     <tr>
                        <td>enabled</td>
                        <td>boolean</td>
                        <td>Enable/Disable mailbox, input must be
                           "true" or "false"</td>
                     </tr>
                     <tr>
                        <td>lastLogin <i
                              xmlns="http://www.w3.org/1999/xhtml">
                              <b>(read only)</b>
                           </i>
                        </td>
                        <td>string</td>
                        <td>Date of last login, EST Time (in string
                           format)</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        '/customers/12345678/domains/example.com/ex/mailboxes/alex.smith',
                        'text/xml', { 'homeNumber' =\u003E
                        '8005551234' } " });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>New mailbox name (user name) doesn't meet the
                     naming requirements. Sample Message: Invalid user
                     name</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>New mailbox display name doesn't meet the
                     naming requirements. Sample Message: Invalid
                     display name</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>New mailbox password doesn't meet the password
                     pattern requirements. Sample Message: Password
                     must be at least 8 characters long</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>New mailbox name (user name) already exists.
                     Sample Message: The email address
                     john.doe@abc.com is already in use</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}"
         id="d1e22877a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <method id="d1e9077" name="DELETE">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Delete">
               <para role="shortdesc">Deletes the mailbox.</para>
               <para>Remarks</para>
               <para>The mailbox and mailbox contents are deleted
                  permanently.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >DELETE
                        '/customers/12345678/domains/example.com/ex/mailboxes/alex.smith',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}/emailaddresses/{email_address}"
         id="d1e23063a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <param name="email_address" style="template" required="true"/>
         <method id="d1e9118" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Add Email Address">
               <para role="shortdesc">Adds a mailbox's email
                  address.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST
                        '/customers/12345678/domains/example.com/ex/mailboxes/alex.smith/emailaddresses/alex@example.com',
                        {}, 'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}/emailaddresses/{email_address}"
         id="d1e23243a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <param name="email_address" style="template" required="true"/>
         <method id="d1e9152" name="DELETE">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Delete Email Address">
               <para role="shortdesc">Deletes the email
                  address.</para>
               <para>Remarks</para>
               <para>The operation will fail if the email address does
                  not exist.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >DELETE
                        '/customers/12345678/domains/example.com/ex/mailboxes/alex.smith/emailaddresses/alex@example.com',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{user}/permissions"
         id="d1e23429a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="user" style="template" required="true"/>
         <method id="d1e9190" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Mailbox Permissions - Index">
               <para role="shortdesc">Exchange mailboxes can be given
                  permissions. A permission is defined as a tuple
                  (mailbox, permissionType). permissionType:= (SendAs
                  | FullAccess | Both)</para>
               <para>Shows the current set of permissions granted on a
                  user's mailbox.</para>
               <para>Remarks</para>
               <para>The results in the example below show the
                  permission list for user Jane Doe's mailbox. The
                  list contains one entry corresponding to that of
                  user Joe Schmoe with permission type of
                  "FullAccess".</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/100012/domains/enterpriseallservices.net/ex/mailboxes/jane.doe/permissions',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;permissionList
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:permissionList"&gt;
                        &lt;offset&gt;0&lt;/offset&gt;
                        &lt;size&gt;50&lt;/size&gt;
                        &lt;total&gt;0&lt;/total&gt;
                        &lt;permissions&gt; &lt;permission&gt;
                        &lt;emailAddress&gt;joe.schmoe@enterpriseallservices.net&lt;/emailAddress&gt;
                        &lt;permissionType&gt;fullAccess&lt;/permissionType&gt;
                        &lt;/permission&gt; &lt;/permissions&gt;
                        &lt;/permissionList&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"offset":0,"size":50,"total":0,"permissions":[{"emailAddress":"joe.schmoe@enterpriseallservices.net","permissionType":"fullAccess"}]}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{user1}/permissions/{user2}"
         id="d1e23639a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="user1" style="template" required="true"/>
         <param name="user2" style="template" required="true"/>
         <method id="d1e9252" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Mailbox Permission - Add">
               <para role="shortdesc">Exchange mailboxes can be given
                  permissions. A permission is defined as a tuple
                  (mailbox, permissionType). permissionType:= (SendAs
                  | FullAccess | Both)</para>
               <para>Grants user2 the specified permission on mailbox
                  of user1.</para>
               <para>Remarks</para>
               <para>The results in the example below show that on the
                  mailbox of user Jane Doe, the user John Doe has been
                  granted the permission of type "fullAccess".</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>permission</td>
                        <td>string</td>
                        <td>permissionType (Required)</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST
                        '/customers/100012/domains/enterpriseallservices.net/ex/mailboxes/jane.doe/permissions/john.doe',
                        {'permission' =\u003E 'fullAccess'},
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{user1}/permissions/{user2}"
         id="d1e23862a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="user1" style="template" required="true"/>
         <param name="user2" style="template" required="true"/>
         <method id="d1e9340" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Mailbox Permission - Edit">
               <para role="shortdesc">Exchange mailboxes can be given
                  permissions. A permission is defined as a tuple
                  (mailbox, permissionType). permissionType:= (SendAs
                  | FullAccess | Both)</para>
               <para>Modifies permission granted to user2 on the
                  mailbox of user1.</para>
               <para>Remarks</para>
               <para>The permission granted to user John Doe on the
                  mailbox of Jane Doe is modified to "both".</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>permission</td>
                        <td>string</td>
                        <td>permissionType (Required)</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        '/customers/100012/domains/enterpriseallservices.net/ex/mailboxes/jane.doe/permissions/john.doe',
                        {'permission' =\u003E 'both'}, 'text/xml'"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{user1}/permissions/{user2}"
         id="d1e24086a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="user1" style="template" required="true"/>
         <param name="user2" style="template" required="true"/>
         <method id="d1e9428" name="DELETE">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Mailbox Permission - Delete">
               <para role="shortdesc">Deletes permission granted to
                  user2 on the mailbox of user1.</para>
               <para>Remarks</para>
               <para>The permission granted to user John Doe on the
                  mailbox of Jane Doe is deleted.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >DELETE
                        '/customers/100012/domains/enterpriseallservices.net/ex/mailboxes/jane.doe/permissions/john.doe',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/blackberrymobileservices"
         id="d1e24272a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e9465" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="BlackBerry Mobile Service - Index">
               <para>Returns a list of mailboxes that has BlackBerry
                  mobile service enabled.</para>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>The index operation only supports the GET
                        HTTP verb.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/12345678/domains/example.com/ex/blackberrymobileservices',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;blackBerryMobileServiceList
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:blackBerryMobileServiceList"&gt;
                        &lt;offset&gt;0&lt;/offset&gt;
                        &lt;size&gt;50&lt;/size&gt;
                        &lt;total&gt;3&lt;/total&gt; &lt;mailboxes&gt;
                        &lt;mailbox&gt;apiexmailbox36&lt;/mailbox&gt;
                        &lt;mailbox&gt;apiexmailbox66&lt;/mailbox&gt;
                        &lt;mailbox&gt;apiexmailbox85&lt;/mailbox&gt;
                        &lt;/mailboxes&gt;
                        &lt;/blackBerryMobileServiceList&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"offset":0,"size":50,"total":3,"mailboxes":["apiexmailbox36","apiexmailbox66","apiexmailbox85"]}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}/blackberrymobileservice"
         id="d1e24481a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <method id="d1e9528" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="BlackBerry Mobile Service - Add">
               <para>Attaches a BlackBerry mobile service to the
                  mailbox.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>activationPassword</td>
                        <td>string</td>
                        <td>Activation password (Required)</td>
                     </tr>
                  </tbody>
               </table>
               <table rules="all">
                  <caption>Status Code</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Code</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Sample Message</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>Mailbox already has BlackBerry
                           Service</td>
                        <td>400</td>
                        <td>User john.smith@example.com has BlackBerry
                           Mobile Service already</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST
                        '/customers/12345678/domains/example.com/ex/mailboxes/john.smith/blackberrymobileservice',
                        'text/xml', { 'activationPassword' =\u003E
                        '12345' }" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}/blackberrymobileservice"
         id="d1e24728a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <method id="d1e9650" name="DELETE">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="BlackBerry Mobile Service - Delete">
               <para>Detaches a BlackBerry mobile service from a
                  mailbox.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >DELETE
                        '/customers/12345678/domains/example.com/ex/mailboxes/john.smith/blackberrymobileservice',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/activesyncmobileservices"
         id="d1e24908a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e9680" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="ActiveSync Mobile Service - Index">
               <para>Returns a list of mailboxes that have ActiveSync
                  mobile service enabled.</para>
               <para>Remarks</para>
               <para>The index operation only supports the GET HTTP
                  verb.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/12345678/domains/example.com/ex/activesyncmobileservices',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;activeSyncMobileServiceList
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:activeSyncMobileServiceList"&gt;
                        &lt;offset&gt;0&lt;/offset&gt;
                        &lt;size&gt;50&lt;/size&gt;
                        &lt;total&gt;3&lt;/total&gt; &lt;mailboxes&gt;
                        &lt;mailbox&gt;apiexmailbox36&lt;/mailbox&gt;
                        &lt;mailbox&gt;apiexmailbox66&lt;/mailbox&gt;
                        &lt;mailbox&gt;apiexmailbox85&lt;/mailbox&gt;
                        &lt;/mailboxes&gt;
                        &lt;/activeSyncMobileServiceList&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"offset":0,"size":50,"total":3,"mailboxes":["apiexmailbox36","apiexmailbox66","apiexmailbox85"]}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}/activesyncmobileservice"
         id="d1e25114a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <method id="d1e9737" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="ActiveSync Service - Show">
               <para>Returns the mailbox ActiveSync mobile service
                  setup information to access Hosted Exchange
                  2007.</para>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>The index operation only supports the GET
                        HTTP verb.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/12345678/domains/example.com/ex/mailboxes/john.smith/activesyncmobileservice',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;activeSyncMobileService
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:activeSyncMobileService"&gt;
                        &lt;emailAddress&gt;john.smith@example.com&lt;/emailAddress&gt;
                        &lt;serverAddress&gt;mex07A.emailsrvr.com&lt;/serverAddress&gt;
                        &lt;userName&gt;johnsmith1234&lt;/userName&gt;
                        &lt;domainAddress&gt;mex07A.mlsrvr.com&lt;/domainAddress&gt;
                        &lt;/activeSyncMobileService&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"emailAddress":"john.smith@example.com","serverAddress":"mex07A.emailsrvr.com","userName":"johnsmith1234","domainAddress":"mex07A.mlsrvr.com"}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Mailbox has no ActiveSync service. Sample
                     Message: User john.smith@example.com has no
                     active ActiveSync Mobile Service.</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}/activesyncmobileservice"
         id="d1e25358a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <method id="d1e9809" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="ActiveSync Mobile Service - Add">
               <para>Attaches a ActiveSync service to the
                  mailbox.</para>
               <table rules="all">
                  <caption>Status Code</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Code</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Sample Message</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>Mailbox already has ActiveSync
                           Service</td>
                        <td>400</td>
                        <td>User john.smith@example.com has ActiveSync
                           Mobile Service already</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST
                        '/customers/12345678/domains/example.com/ex/mailboxes/john.smith/activesyncmobileservice',
                        'text/xml', {}" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_nam}/activesyncmobileservice"
         id="d1e25571a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_nam" style="template" required="true"/>
         <method id="d1e9887" name="DELETE">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="ActiveSync Mobile Service - Delete">
               <para>Detaches a ActiveSync mobile service from a
                  mailbox.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >DELETE
                        '/customers/12345678/domains/example.com/ex/mailboxes/john.smith/activesyncmobileservice',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}/spam/settings"
         id="d1e25762a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <method id="d1e9919" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Spam Settings - Show">
               <para role="shortdesc">Returns the spam settings
                  associated with the mailbox.</para>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>The Show operation only supports the GET
                        HTTP verb.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/12345678/domains/example.com/ex/mailboxes/alex.smith/spam/settings',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;MailboxSpamSettings
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:MailboxSpamSettings"&gt;
                        &lt;filterLevel&gt;on&lt;/filterLevel&gt;
                        &lt;sendToDomainQuarantine&gt;false&lt;/sendToDomainQuarantine&gt;
                        &lt;quarantineOwner /&gt;
                        &lt;/MailboxSpamSettings&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"filterLevel":"on","sendToDomainQuarantine":false,"quarantineOwner":""}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}/spam/settings"
         id="d1e25971a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <method id="d1e9982" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Spam Settings - Edit">
               <para role="shortdesc">Modifies the mailbox spam
                  setting. Only 'filterlevel' is the required form
                  field.</para>
               <para>Remarks</para>
               <para>Form field "filterlevel" is always
                  required.</para>
               <itemizedlist>
                  <listitem>
                     <para>When "filterlevel" is "on", spam will be
                        sent to mailbox quarantine as default, unless
                        "sendtodomainquarantine" is set to
                        "true".</para>
                  </listitem>
                  <listitem>
                     <para>Changing "filterlevel" to "off" will force
                        "sendtodomainquarantine" to be "false".</para>
                  </listitem>
                  <listitem>
                     <para>When "filterlevel" is "exclusive", spam
                        will be sent to mailbox quarantine as default,
                        unless "sendtodomainquarantine" is set to
                        "true". In addition, mailbox will only receive
                        email from addresses and IPs on its
                        safelist.</para>
                  </listitem>
               </itemizedlist>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>filterlevel</td>
                        <td>string</td>
                        <td>Spam filter status, must be 'on' or 'off'
                           or 'exclusive' (Required)</td>
                     </tr>
                     <tr>
                        <td>sendtodomainquarantine/td&gt;</td>
                        <td>boolean</td>
                        <td>Indicates whether or not send spam to
                           domain quarantine</td>
                     </tr>
                     <tr>
                        <td>quarantineowner</td>
                        <td>string</td>
                        <td>The email address that quarantine
                           notifications be sent to</td>
                     </tr>
                     <tr>
                        <td>removeQuarantineOwner</td>
                        <td>boolean</td>
                        <td>Set this flag to "true" to remove
                           quarantine owner</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        '/customers/12345678/domains/example.com/ex/mailboxes/alex.smith/spam/settings',
                        'text/xml', { 'filterlevel' =\u003E 'off' } "
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Invalid input for form field 'filterlevel'.
                     Sample Message: Invalid filterLevel, input must
                     be: on/off/exclusive</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}/spam/blacklist"
         id="d1e26272a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <method id="d1e10131" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Blacklist - Index">
               <para role="shortdesc">Returns email address blacklist
                  associated with the mailbox.</para>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>The Index operation only supports the GET
                        HTTP verb.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/12345678/domains/example.com/ex/mailboxes/alex.smith/spam/blacklist',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;blacklist
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:blacklist"&gt;
                        &lt;addresses&gt;
                        &lt;address&gt;name1@spam.com&lt;/address&gt;
                        &lt;address&gt;name2@spam.com&lt;/address&gt;
                        &lt;/addresses&gt;
                        &lt;/blacklist&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"addresses":["name1@spam.com","name2@spam.com"]}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}/spam/blacklist/{email_address}"
         id="d1e26481a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <param name="email_address" style="template" required="true"/>
         <method id="d1e10196" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Blacklist - Add">
               <para role="shortdesc">Adds an email address or domain
                  to the blacklist.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST
                        '/customers/12345678/domains/example.com/ex/mailboxes/alex.smith/spam/blacklist/anyone@spam.com',
                        {},'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entered invalid email or domain. Sample
                     Message: invalid email address: abc</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entered current domain. Sample Message: Adding
                     example.com would blacklist the current
                     domain</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}/spam/blacklist"
         id="d1e26707a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <method id="d1e10246" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Blacklist - Edit">
               <para role="shortdesc">Edits email addresses on the
                  blacklist.</para>
               <para>Remarks</para>
               <para>You can use a '%' as a wildcard in domains, but
                  not in the TLD (.com, .net, etc). You cannot use
                  wildcards in email addresses. For example, the
                  following are allowed: @%.example.com,
                  @examp%.com.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>addList</td>
                        <td>string</td>
                        <td>Comma separated list of email addresses to
                           add to the list</td>
                     </tr>
                     <tr>
                        <td>removeList</td>
                        <td>string</td>
                        <td>Comma separated list of email addresses to
                           remove from the list</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        '/customers/12345678/domains/example.com/ex/mailboxes/jane.doe/spam/blacklist',
                        { 'addList' =\u003E
                        '@%.example.com,abc@example.com', 'removeList'
                        =\u003E '@examp%.com' }, 'text/xml'"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}/spam/blacklist/{email_address}"
         id="d1e26939a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <param name="email_address" style="template" required="true"/>
         <method id="d1e10344" name="DELETE">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Blacklist - Delete">
               <para>Removes an email address or domain from the
                  blacklist.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >DELETE
                        '/customers/12345678/domains/example.com/ex/mailboxes/alex.smith/spam/blacklist/anyone@yahoo.com',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entered invalid email or domain. Sample
                     Message: invalid email address: abc</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entered email or domain is not on the current
                     blacklist. Sample Message: abc@junkmail.com is
                     not found on the list</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="v0/customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}/spam/ipblacklist"
         id="d1e27164a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <method id="d1e10394" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="IP Blacklist - Index">
               <para role="shortdesc">Returns IP blacklist associated
                  with the mailbox.</para>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>The Index operation only supports the GET
                        HTTP verb.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/12345678/domains/example.com/ex/mailboxes/alex.smith/spam/ipblacklist',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;ipBlacklist
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:ipBlacklist"&gt;
                        &lt;addresses&gt;
                        &lt;ip&gt;216.12.34.1&lt;/ip&gt;
                        &lt;ip&gt;216.12.34.2&lt;/ip&gt;
                        &lt;/addresses&gt;
                        &lt;/ipBlacklist&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"addresses":["216.12.34.1","216.12.34.2"]}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}/spam/ipblacklist/{ip_address}"
         id="d1e27373a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <param name="ip_address" style="template" required="true"/>
         <method id="d1e10459" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="IP Blacklist - Add">
               <para role="shortdesc">Adds an IP to the
                  blacklist.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST
                        '/customers/12345678/domains/example.com/ex/mailboxes/alex.smith/spam/blacklist/216.12.34.1',
                        {},'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}/spam/ipblacklist"
         id="d1e27553a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <method id="d1e10491" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="IP Blacklist - Edit">
               <para role="shortdesc">Edits IP addresses on the
                  blacklist.</para>
               <para>Remarks</para>
               <para>You can use a '%' as a wildcard in the last
                  octets to specify IP ranges. For example:
                  216.12.34.%, 216.12.%.%, 216.%.%.%.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>addList</td>
                        <td>string</td>
                        <td>Comma separated list of IP addresses to
                           add to the list</td>
                     </tr>
                     <tr>
                        <td>removeList</td>
                        <td>string</td>
                        <td>Comma separated list of IP addresses to
                           remove from the list</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        '/customers/12345678/domains/example.com/ex/mailboxes/jane.doe/spam/ipblacklist',
                        { 'addList' =\u003E '216.12.34.%,216.12.%.%',
                        'removeList' =\u003E '216.%.%.%' },
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}/spam/ipblacklist/{ip_address}"
         id="d1e27785a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <param name="ip_address" style="template" required="true"/>
         <method id="d1e10588" name="DELETE">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="IP Blacklist - Delete">
               <para>Removes an IP from the blacklist.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >DELETE
                        '/customers/12345678/domains/example.com/ex/mailboxes/alex.smith/spam/ipblacklist/216.12.34.1',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entered IP is not on the current blacklist.
                     Sample Message: 216.12.34.1 is not found on the
                     blacklist</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}/spam/safelist"
         id="d1e27999a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <method id="d1e10629" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Safelist - Index">
               <para role="shortdesc">Returns email address safelist
                  associated with the mailbox.</para>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>The Index operation only supports the GET
                        HTTP verb.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/12345678/domains/example.com/ex/mailboxes/alex.smith/spam/safelist',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;safelist
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:safelist"&gt; &lt;addresses&gt;
                        &lt;address&gt;name1@notspam.com&lt;/address&gt;
                        &lt;address&gt;name2@notspam.com&lt;/address&gt;
                        &lt;/addresses&gt;
                        &lt;/safelist&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"addresses":["name1@notspam.com","name2@notspam.com"]}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}/spam/safelist/{email_address}"
         id="d1e28208a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <param name="email_address" style="template" required="true"/>
         <method id="d1e10695" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Safelist - Add">
               <para role="shortdesc">Adds an email address or domain
                  to the safelist.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST
                        '/customers/12345678/domains/example.com/ex/mailboxes/alex.smith/spam/safelist/anyone@yahoo.com',
                        {},'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entered invalid email or domain. Sample
                     Message: invalid email address: abc</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}/spam/safelist"
         id="d1e28421a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <method id="d1e10736" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Safelist - Edit">
               <para role="shortdesc">Edits email addresses on the
                  safelist.</para>
               <para>Remarks</para>
               <para>You can use a '%' as a wildcard in domains, but
                  not in the TLD (.com, .net, etc). You cannot use
                  wildcards in email addresses. For example, the
                  following are allowed: @%.example.com,
                  @examp%.com.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>addList</td>
                        <td>string</td>
                        <td>Comma separated list of email addresses to
                           add to the list</td>
                     </tr>
                     <tr>
                        <td>removeList</td>
                        <td>string</td>
                        <td>Comma separated list of email addresses to
                           remove from the list</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        '/customers/12345678/domains/example.com/ex/mailboxes/jane.doe/spam/safelist',
                        { 'addList' =\u003E
                        '@%.example.com,abc@example.com', 'removeList'
                        =\u003E '@examp%.com' }, 'text/xml'"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}/spam/safelist/{email_address}"
         id="d1e28653a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <param name="email_address" style="template" required="true"/>
         <method id="d1e10833" name="DELETE">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Safelist - Delete">
               <para>Removes an email address or domain from the
                  safelist.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >DELETE
                        '/customers/12345678/domains/example.com/ex/mailboxes/alex.smith/spam/safelist/anyone@yahoo.com',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entered invalid email or domain. Sample
                     Message: invalid email address: abc</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entered email or domain is not on the current
                     safelist. Sample Message: anyone@yahoo.com is not
                     found on the list</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}/spam/ipsafelist"
         id="d1e28878a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <method id="d1e10883" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="IP Safelist - Index">
               <para role="shortdesc">Returns IP safelist associated
                  with the mailbox.</para>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>The Index operation only supports the GET
                        HTTP verb.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/12345678/domains/example.com/ex/mailboxes/alex.smith/spam/ipsafelist',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;ipSafelist
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:ipSafelist"&gt;
                        &lt;addresses&gt;
                        &lt;ip&gt;192.168.0.1&lt;/ip&gt;
                        &lt;ip&gt;192.168.0.2&lt;/ip&gt;
                        &lt;/addresses&gt;
                        &lt;/ipSafelist&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"addresses":["192.168.0.1","192.168.0.2"]}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}/spam/ipsafelist/{ip_address}"
         id="d1e29087a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <param name="ip_address" style="template" required="true"/>
         <method id="d1e10948" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="IP Safelist - Add">
               <para role="shortdesc">Adds an IP to the
                  ipsafelist.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST
                        '/customers/12345678/domains/example.com/ex/mailboxes/alex.smith/spam/ipsafelist/216.12.34.1',
                        {},'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entered invalid IP address. Sample Message:
                     invalid ip address: 123</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}/spam/ipsafelist"
         id="d1e29301a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <method id="d1e10989" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="IP Safelist - Edit">
               <para role="shortdesc">Edits IP addresses on the
                  safelist.</para>
               <para>Remarks</para>
               <para>You can use a '%' as a wildcard in the last
                  octets to specify IP ranges. For example:
                  216.12.34.%, 216.12.%.%, 216.%.%.%.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>addList</td>
                        <td>string</td>
                        <td>Comma separated list of IP addresses to
                           add to the list</td>
                     </tr>
                     <tr>
                        <td>removeList</td>
                        <td>string</td>
                        <td>Comma separated list of IP addresses to
                           remove from the list</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        '/customers/12345678/domains/example.com/ex/mailboxes/jane.doe/spam/ipsafelist',
                        { 'addList' =\u003E '216.12.34.%,216.12.%.%',
                        'removeList' =\u003E '216.%.%.%' },
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/mailboxes/{mailbox_name}/spam/ipsafelist/{email_address}"
         id="d1e29533a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="mailbox_name" style="template" required="true"/>
         <param name="email_address" style="template" required="true"/>
         <method id="d1e11087" name="DELETE">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="IP Safelist - Delete">
               <para>Removes an IP from the safelist.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >DELETE
                        '/customers/12345678/domains/example.com/ex/mailboxes/alex.smith/spam/ipsafelist/216.12.34.1',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entered IP is not on the current safelist.
                     Sample Message: 216.12.34.1 is not found on the
                     safelist</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/contacts"
         id="d1e29758a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e11126" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Index">
               <para>Returns a list of contacts under the
                  domain.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/12345678/domains/example.com/ex/contacts?contains=john',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;contactList
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:contactList"&gt;
                        &lt;offset&gt;0&lt;/offset&gt;
                        &lt;size&gt;50&lt;/size&gt;
                        &lt;total&gt;3&lt;/total&gt; &lt;contacts&gt;
                        &lt;contact&gt;
                        &lt;name&gt;apiexcontact66&lt;/name&gt;
                        &lt;displayName&gt;API
                        Test&lt;/displayName&gt;
                        &lt;externalEmail&gt;externalemail58@yahoo.com&lt;/externalEmail&gt;
                        &lt;/contact&gt; &lt;contact&gt;
                        &lt;name&gt;apiexcontact73&lt;/name&gt;
                        &lt;displayName&gt;API
                        Test&lt;/displayName&gt;
                        &lt;externalEmail&gt;externalemail98@yahoo.com&lt;/externalEmail&gt;
                        &lt;/contact&gt; &lt;contact&gt;
                        &lt;name&gt;apiexcontact81&lt;/name&gt;
                        &lt;displayName&gt;API
                        Test&lt;/displayName&gt;
                        &lt;externalEmail&gt;externalemail46@yahoo.com&lt;/externalEmail&gt;
                        &lt;/contact&gt; &lt;/contacts&gt;
                        &lt;/contactList&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"offset":0,"size":50,"total":3,"contacts":[{"name":"apiexcontact66","displayName":"API
                        Test","externalEmail":"externalemail58@yahoo.com"},{"name":"apiexcontact73","displayName":"API
                        Test","externalEmail":"externalemail98@yahoo.com"},{"name":"apiexcontact81","displayName":"API
                        Test","externalEmail":"externalemail46@yahoo.com"}]}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/contacts/{contact_name}"
         id="d1e29958a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="contact_name" style="template" required="true"/>
         <method id="d1e11177" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Show">
               <para>Returns the contact's details.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/12345678/domains/example.com/ex/contacts/alex.smith',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;contact
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:contact"&gt;
                        &lt;name&gt;apiexcontact73&lt;/name&gt;
                        &lt;displayName&gt;API
                        Test&lt;/displayName&gt;
                        &lt;externalEmail&gt;externalemail98@yahoo.com&lt;/externalEmail&gt;
                        &lt;isHidden&gt;false&lt;/isHidden&gt;
                        &lt;contactInfo&gt;
                        &lt;firstName&gt;API&lt;/firstName&gt;
                        &lt;lastName&gt;Test&lt;/lastName&gt;
                        &lt;jobTitle&gt;Dev&lt;/jobTitle&gt;
                        &lt;company&gt;My Company&lt;/company&gt;
                        &lt;department&gt;R&amp;D&lt;/department&gt;
                        &lt;businessNumber&gt;111-1111&lt;/businessNumber&gt;
                        &lt;homeNumber&gt;222-2222&lt;/homeNumber&gt;
                        &lt;mobileNumber&gt;333-3333&lt;/mobileNumber&gt;
                        &lt;faxNumber&gt;444-4444&lt;/faxNumber&gt;
                        &lt;pagerNumber&gt;1234&lt;/pagerNumber&gt;
                        &lt;addressLine1&gt;123 Main
                        Street&lt;/addressLine1&gt;
                        &lt;city&gt;Blacksburg&lt;/city&gt;
                        &lt;state&gt;VA&lt;/state&gt;
                        &lt;zip&gt;24060&lt;/zip&gt;
                        &lt;country&gt;USA&lt;/country&gt;
                        &lt;notes&gt;My Notes&lt;/notes&gt;
                        &lt;/contactInfo&gt;
                        &lt;/contact&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"name":"apiexcontact73","displayName":"API
                        Test","externalEmail":"externalemail98@yahoo.com","isHidden":false,"contactInfo":{"firstName":"API","lastName":"Test","jobTitle":"Dev","company":"My
                        Company","department":"R&amp;D","businessNumber":"111-1111","homeNumber":"222-2222","mobileNumber":"333-3333","faxNumber":"444-4444","pagerNumber":"1234","addressLine1":"123
                        Main
                        Street","city":"Blacksburg","state":"VA","zip":"24060","country":"USA","notes":"My
                        Notes"}}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Contact is not found. Sample Message: Contact
                     not found</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/contacts/{contact_name}"
         id="d1e30191a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="contact_name" style="template" required="true"/>
         <method id="d1e11237" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Add">
               <para role="shortdesc">Adds the contact's details as
                  specified. If the contact does not exist, use Add,
                  if it does, use Edit.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>displayName</td>
                        <td>string</td>
                        <td>Name of contact when displayed (Required
                           for add)</td>
                     </tr>
                     <tr>
                        <td>externalEmail</td>
                        <td>string</td>
                        <td>Email address (Required for add)</td>
                     </tr>
                     <tr>
                        <td>isHidden</td>
                        <td>boolean</td>
                        <td>Whether the contact is hidden from the
                           Global List</td>
                     </tr>
                     <tr>
                        <td>firstName</td>
                        <td>string</td>
                        <td>First name</td>
                     </tr>
                     <tr>
                        <td>lastName</td>
                        <td>string</td>
                        <td>Last name</td>
                     </tr>
                     <tr>
                        <td>jobTitle</td>
                        <td>string</td>
                        <td>Job title</td>
                     </tr>
                     <tr>
                        <td>company</td>
                        <td>string</td>
                        <td>Company</td>
                     </tr>
                     <tr>
                        <td>department</td>
                        <td>string</td>
                        <td>Department</td>
                     </tr>
                     <tr>
                        <td>businessNumber</td>
                        <td>string</td>
                        <td>Business phone number</td>
                     </tr>
                     <tr>
                        <td>homeNumber</td>
                        <td>string</td>
                        <td>Home phone number</td>
                     </tr>
                     <tr>
                        <td>mobileNumber</td>
                        <td>string</td>
                        <td>Mobile phone number</td>
                     </tr>
                     <tr>
                        <td>faxNumber</td>
                        <td>string</td>
                        <td>Fax number</td>
                     </tr>
                     <tr>
                        <td>pagerNumber</td>
                        <td>string</td>
                        <td>Pager number</td>
                     </tr>
                     <tr>
                        <td>addressLine1</td>
                        <td>string</td>
                        <td>Street address</td>
                     </tr>
                     <tr>
                        <td>city</td>
                        <td>string</td>
                        <td>City</td>
                     </tr>
                     <tr>
                        <td>state</td>
                        <td>string</td>
                        <td>State</td>
                     </tr>
                     <tr>
                        <td>zip</td>
                        <td>string</td>
                        <td>Zip or postal code</td>
                     </tr>
                     <tr>
                        <td>country</td>
                        <td>string</td>
                        <td>Country</td>
                     </tr>
                     <tr>
                        <td>notes</td>
                        <td>string</td>
                        <td>Notes field</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST
                        '/customers/12345678/domains/example.com/ex/contacts/alex.smith',
                        'text/xml', { 'displayName' =\u003E 'Johnny
                        Customer', 'externalEmail' =\u003E
                        'jonny@apple.com' }" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Contact is not found. Sample Message: No user
                     with the email address jane.doe@abc.com
                     exists</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>New display name doesn't meet the naming
                     requirements. Sample Message: Invalid display
                     name</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>New display name doesn't meet the naming
                     requirements. Sample Message: Invalid display
                     name</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>New contact name (user name) already exists.
                     Sample Message: The email address
                     john.doe@abc.com is already in use</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>New contact name (user name) is reserved by
                     Exchange. Sample Message: user name
                     reserved</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/contacts/{contact_name}"
         id="d1e30706a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="contact_name" style="template" required="true"/>
         <method id="d1e11579" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Edit">
               <para role="shortdesc">Edits the contact's details as
                  specified. If the contact does not exist, use Add,
                  if it does, use Edit.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>displayName</td>
                        <td>string</td>
                        <td>Name of contact when displayed (Required
                           for add)</td>
                     </tr>
                     <tr>
                        <td>externalEmail</td>
                        <td>string</td>
                        <td>Email address (Required for add)</td>
                     </tr>
                     <tr>
                        <td>isHidden</td>
                        <td>boolean</td>
                        <td>Whether the contact is hidden from the
                           Global List</td>
                     </tr>
                     <tr>
                        <td>firstName</td>
                        <td>string</td>
                        <td>First name</td>
                     </tr>
                     <tr>
                        <td>lastName</td>
                        <td>string</td>
                        <td>Last name</td>
                     </tr>
                     <tr>
                        <td>jobTitle</td>
                        <td>string</td>
                        <td>Job title</td>
                     </tr>
                     <tr>
                        <td>company</td>
                        <td>string</td>
                        <td>Company</td>
                     </tr>
                     <tr>
                        <td>department</td>
                        <td>string</td>
                        <td>Department</td>
                     </tr>
                     <tr>
                        <td>businessNumber</td>
                        <td>string</td>
                        <td>Business phone number</td>
                     </tr>
                     <tr>
                        <td>homeNumber</td>
                        <td>string</td>
                        <td>Home phone number</td>
                     </tr>
                     <tr>
                        <td>mobileNumber</td>
                        <td>string</td>
                        <td>Mobile phone number</td>
                     </tr>
                     <tr>
                        <td>faxNumber</td>
                        <td>string</td>
                        <td>Fax number</td>
                     </tr>
                     <tr>
                        <td>pagerNumber</td>
                        <td>string</td>
                        <td>Pager number</td>
                     </tr>
                     <tr>
                        <td>addressLine1</td>
                        <td>string</td>
                        <td>Street address</td>
                     </tr>
                     <tr>
                        <td>city</td>
                        <td>string</td>
                        <td>City</td>
                     </tr>
                     <tr>
                        <td>state</td>
                        <td>string</td>
                        <td>State</td>
                     </tr>
                     <tr>
                        <td>zip</td>
                        <td>string</td>
                        <td>Zip or postal code</td>
                     </tr>
                     <tr>
                        <td>country</td>
                        <td>string</td>
                        <td>Country</td>
                     </tr>
                     <tr>
                        <td>notes</td>
                        <td>string</td>
                        <td>Notes field</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        '/customers/12345678/domains/example.com/ex/contacts/alex.smith',
                        'text/xml', { 'externalEmail' =\u003E
                        'jonnysNewEmail@microsoft.com', 'company'
                        =\u003E 'Microsoft', 'businessnumber' =\u003E
                        '425 555 5555' }" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Contact is not found. Sample Message: No user
                     with the email address jane.doe@abc.com
                     exists</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>New display name doesn't meet the naming
                     requirements. Sample Message: Invalid display
                     name</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>New display name doesn't meet the naming
                     requirements. Sample Message: Invalid display
                     name</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>New contact name (user name) already exists.
                     Sample Message: The email address
                     john.doe@abc.com is already in use</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>New contact name (user name) is reserved by
                     Exchange. Sample Message: user name
                     reserved</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/contacts/{contact_name}"
         id="d1e31222a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="contact_name" style="template" required="true"/>
         <method id="d1e11921" name="DELETE">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Delete">
               <para role="shortdesc">Deletes the contact.</para>
               <para>Remarks</para>
               <para>Contact is deleted immediately without
                  verification and data is lost permanently.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >DELETE
                        '/customers/12345678/domains/example.com/ex/contacts/alex.smith',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Contact is not found. Sample Message: No user
                     with the email address jane.doe@abc.com
                     exists</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/distributionLists/"
         id="d1e31947a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e11967" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="List">
               <para role="shortdesc">Lists Distribution Lists,
                  supports exporting. (see Listings)</para>
               <itemizedlist>
                  <listitem>
                     <para>Lists Distribution Lists, supports
                        exporting. (see Listings)</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase role="#DLs"
                           >Distribution List</phrase> Listing</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        https://api.emailsrvr.com/v1/domains/example.com/ex/distributionlists"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc title="OK"
                     xmlns="http://docbook.org/ns/docbook">
                     <para>The listing was successfully
                        retrieved.</para>
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{ "DistributionLists": [ { "Description":
                        "This is an example of an edited DL.",
                        "MemberCount": 0, "CommonName": "exampledl",
                        "DisplayName": "ExampleDL", "Alias":
                        "exampledl.example.com",
                        "IsHiddenFromAddressList": false,
                        "PrimarySmtpAddress": "exampledl@example.com",
                        "Status": "Ready", "LegacyExchangeDn":
                        "/o=e14s/ou=Exchange Administrative Group
                        (FYDIBOHF23SPDLT)/cn=Recipients/cn=exampledl59c"
                        } ], "Sort": "primarysmtpaddress", "Limit":
                        25, "Total": 1, "Order": "asc" }</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <wadl:response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Bad Request.">
                  <para>The request was invalid. Inspect the
                     validationFault response for more detail.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Not Found.">
                  <para>The domain does not exist, the domain does not
                     have Exchange, or the marker was not found.
                     Inspect the itemNotFondFault for more
                     detail.</para>
               </wadl:doc>
            </wadl:response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/distributionLists/{common_name}"
         id="d1e32187a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="common_name" style="template" required="true"/>
         <method id="d1e12057" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Read">
               <para role="shortdesc">Reads an existing Distribution
                  List.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to read an existing
                        Distribution List.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: Distribution List</para>
                  </listitem>
               </itemizedlist>
               <para xmlns="http://docbook.org/ns/docbook"
                  >Notes</para>
               <itemizedlist>
                  <listitem>
                     <para>The Distribution List resource contains
                        some paged data that must be accessed via
                        separate GET requests.</para>
                  </listitem>
                  <listitem>
                     <para>Properties directly on the object can be
                        accessed via a GET on the base resource,
                        however Members, Senders, and Managers must
                        each be retrieved by separate requests.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        https://api.emailsrvr.com/v1/domains/example.com/ex/distributionlists/ExampleDL"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">

                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{ "Description": "This is an example DL.",
                        "MemberCount": 2, "CommonName": "exampledl",
                        "DisplayName": "Example DL", "Alias":
                        "exampledl.example.com",
                        "IsHiddenFromAddressList": false,
                        "PrimarySmtpAddress": "exampledl@example.com",
                        "Status": "Ready", "LegacyExchangeDn":
                        "/o=e14s/ou=Exchange Administrative Group
                        (FYDIBOHF23SPDLT)/cn=Recipients/cn=exampledl59c"
                        }</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <wadl:response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Bad Request.">
                  <para>The request was invalid. Inspect the
                     validationFault response for more detail.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Not Found.">
                  <para>The domain does not exist, the domain does not
                     have Exchange, or the marker was not found.
                     Inspect the itemNotFondFault for more
                     detail.</para>
               </wadl:doc>
            </wadl:response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/distributionLists/"
         id="d1e32436a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e12160" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Create">
               <para role="shortdesc">Adds a Distribution List.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to add a new Distribution
                        List.</para>
                  </listitem>
                  <listitem>
                     <para>Supports Asynchronous Statuses and
                        Asynchronous Errors.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: Distribution List</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST
                        https://api.emailsrvr.com/v1/domains/example.com/ex/distributionlists
                        { "Description" : "This is an example DL."
                        "CommonName" : "ExampleDL" "DisplayName" :
                        "ExampleDL" "IsHiddenFromAddressList": false,
                        "EmailAddresses": [ \t{ "Action\":\"Add"
                        "Value" : "exampledl-alias@example.com"
                        "AddressPrimary": false, "AddressProtocol" :
                        "smtp" } ], "Members": { "Recipients": [ \t{
                        \t \"Action\":\"Add" \t \"Value\":\"mexuser1"
                        \t}, \t{ \t \"Action\":\"Add" \t
                        \"Value\":\"mexuser2" \t} ] }, "ManagedBy": {
                        "Recipients": [ \t{ \t \"Action\":\"Add" \t
                        \"Value\":\"mexuser1" \t}, \t{ \t
                        \"Action\":\"Add" \t \"Value\":\"mexuser2" \t}
                        ] }, "AcceptMessagesOnlyFrom": {
                        "All\":\"restricted" "Recipients": [ \t{ \t
                        \"Action\":\"Add" \t \"Value\":\"mexuser1"
                        \t}, \t{ \t \"Action\":\"Add" \t
                        \"Value\":\"mexuser2" \t} ] } }"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <wadl:response status="204">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="No Content.">
                  <para>The request has been accepted and will be
                     processed.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Bad Request.">
                  <para>The request was invalid. Inspect the
                     validationFault response for more detail.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Not Found.">
                  <para>The domain does not exist, the domain does not
                     have Exchange, or the marker was not found.
                     Inspect the itemNotFoundFault for more
                     detail.</para>
               </wadl:doc>
            </wadl:response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/distributionLists/{common_name}"
         id="d1e32673a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="common_name" style="template" required="true"/>
         <method id="d1e12243" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Update">
               <para role="shortdesc">Updates an existing Distribution
                  List.</para>
               <itemizedlist>
                  <listitem>
                     <para>Updates an existing Distribution
                        List.</para>
                  </listitem>
                  <listitem>
                     <para>Supports Asynchronous Statuses and
                        Asynchronous Errors.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: Distribution List</para>
                  </listitem>
               </itemizedlist>
               <para xmlns="http://docbook.org/ns/docbook"
                  >Notes</para>
               <itemizedlist>
                  <listitem>
                     <para>All data that is part of the Exchange
                        Distribution List resource can be updated in a
                        single PUT request.</para>
                  </listitem>
                  <listitem>
                     <para>Recipients, ManagedBy, and
                        AcceptMessagesOnlyFrom must specify an Action,
                        set to either Add or Remove, to specify the
                        operation for that value.<br
                           xmlns="http://www.w3.org/1999/xhtml"/>
                     </para>
                  </listitem>
                  <listitem>
                     <para>AcceptMessagesOnlyFrom also has an
                        additional parameter All that can be set to
                        restricted (to specify specific allowed
                        senders) or public.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        https://api.emailsrvr.com/v1/domains/example.com/ex/distributionlists/ExampleDL
                        { "Description" : "This is an example of an
                        edited DL." "DisplayName" : "ExampleDL"
                        "EmailAddresses": [ { "Action\":\"remove"
                        "Value" : "exampledl-alias@example.com"
                        "AddressPrimary": false, "AddressProtocol" :
                        "smtp" } ], "Members": { "Recipients": [ \t{
                        \t\t\"Action\":\"Remove"
                        \t\t\"Value\":\"mexuser1" \t}, \t{
                        \t\t\"Action\":\"Add"
                        \t\t\"Value\":\"mexuser3" \t} ] },
                        "ManagedBy": { "Recipients": [ \t{
                        \t\t\"Action\":\"Remove"
                        \t\t\"Value\":\"mexuser1" \t}, \t{
                        \t\t\"Action\":\"Add"
                        \t\t\"Value\":\"mexuser3" \t} ] },
                        "AcceptMessagesOnlyFrom": {
                        "All\":\"restricted" "Recipients": [ \t{
                        \t\t\"Action\":\"Remove"
                        \t\t\"Value\":\"mexuser3" \t}, \t{
                        \t\t\"Action\":\"Add"
                        \t\t\"Value\":\"mexuser2" \t} ] } }"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <wadl:response status="204">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="No Content.">
                  <para>The request has been accepted and will be
                     processed.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Bad Request.">
                  <para>The request was invalid. Inspect the
                     validationFault response for more detail.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Not Found.">
                  <para>The domain does not exist, the domain does not
                     have Exchange, or the marker was not found.
                     Inspect the itemNotFoundFault for more
                     detail.</para>
               </wadl:doc>
            </wadl:response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/distributionList/{common_name}"
         id="d1e32927a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="common_name" style="template" required="true"/>
         <method id="d1e12352" name="DELETE">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Delete">
               <para role="shortdesc">Deletes a distribution
                  list.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to delete a distribution
                        list.</para>
                  </listitem>
                  <listitem>
                     <para>Supports Asynchronous Statuses and
                        Asynchronous Errors.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: None</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >DELETE
                        https://api.emailsrvr.com/v1/domains/example.com/ex/distributionList/ExampleDL"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <wadl:response status="204">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="No Content.">
                  <para>The request has been accepted and will be
                     processed.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Bad Request.">
                  <para>The request was invalid. Inspect the
                     validationFault response for more detail.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Not Found.">
                  <para>The domain does not exist, the domain does not
                     have Exchange, or the marker was not found.
                     Inspect the itemNotFoundFault for more
                     detail.</para>
               </wadl:doc>
            </wadl:response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/distributionLists"
         id="d1e33164a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e12433" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Export">
               <para role="shortdesc">Exports a file of distribution
                  lists.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to export a file of
                        distribution lists.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: Distribution List
                        Listing</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <wadl:param name="exportTo" type="xs:string"/>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        https://api.emailsrvr.com/v1/domains/example.com/ex/distributionLists?exportTo=myAdminEmail@example.com"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="202"/>
            <wadl:response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Accepted.">
                  <para>The request has been accepted and will be
                     processed.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Bad Request.">
                  <para>The request was invalid. Inspect the
                     validationFault response for more detail.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Not Found.">
                  <para>The domain does not exist, the domain does not
                     have Exchange, or the marker was not found.
                     Inspect the itemNotFoundFault for more
                     detail.</para>
               </wadl:doc>
            </wadl:response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/distributionLists"
         id="d1e33398a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e12509" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Import">
               <para role="shortdesc">Imports a file of distribution
                  lists.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to import a file of
                        distribution lists.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: FileUrl (string)</para>
                  </listitem>
               </itemizedlist>
               <para xmlns="http://docbook.org/ns/docbook"
                  >Instructions</para>
               <ol xmlns="http://www.w3.org/1999/xhtml">
                  <listitem xmlns="http://docbook.org/ns/docbook">
                     <para>Create a CSV (comma-separated values) file
                        containing the distribution lists you'd like
                        to import. You can get a valid CSV file format
                        by bulk-exporting your current distribution
                        lists.</para>
                  </listitem>
                  <listitem xmlns="http://docbook.org/ns/docbook">
                     <para>Upload the file to a public accessible URL
                        (e.g. cloud-files, CDN, etc.)</para>
                  </listitem>
                  <listitem xmlns="http://docbook.org/ns/docbook">
                     <para>Call this endpoint with the url of the file
                        in the body.</para>
                  </listitem>
                  <listitem xmlns="http://docbook.org/ns/docbook">
                     <para>You will receive a confirmation email to
                        the address specified in the URL when the
                        import is complete. Any rows that were not
                        able to be imported are available via a link
                        provided in the confirmation email.</para>
                  </listitem>
               </ol>
            </wadl:doc>
            <request>
               <wadl:param name="emailAddress" type="xs:string"/>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST
                        https://api.emailsrvr.com/v1/domains/example.com/ex/distributionLists?emailAddress=myAdminEmail.com
                        { "FileUrl" :
                        "http://asdfasdfzxcvzxcvasdfasdf.cf1.rackcdn.com/MyDistributionLists.csv"
                        }" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="202"/>
            <wadl:response status="202">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Accepted.">
                  <para>The request has been accepted and will be
                     processed.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Bad Request.">
                  <para>The request was invalid. Inspect the
                     validationFault response for more detail.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Not Found.">
                  <para>The domain does not exist, the domain does not
                     have Exchange, or the marker was not found.
                     Inspect the itemNotFoundFault for more
                     detail.</para>
               </wadl:doc>
            </wadl:response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/distributionLists/{common_name}/emailaddresses"
         id="d1e33650a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="common_name" style="template" required="true"/>
         <method id="d1e12616" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Email Addresses - List">
               <para role="shortdesc">Lists an existing Distribution
                  List's alternate email addresses. (see
                  Listings).</para>
               <itemizedlist>
                  <listitem>
                     <para>Lists an existing Distribution List's
                        alternate email addresses. (see
                        Listings)</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase role="#EXDLEA">Email
                           Address</phrase> Listing</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        https://api.emailsrvr.com/v1/domains/example.com/ex/distributionlists/ExampleDL/emailaddresses"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     title="OK.">
                     <para>The data was successfully retrieved.</para>
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{ "EmailAddresses": [ { "Value":
                        "exampledl@example.com", "AddressPrimary":
                        true, "AddressProtocol": "smtp" }, { "Value":
                        "exampledl-alias@example.com",
                        "AddressPrimary": false, "AddressProtocol":
                        "smtp" } ], "Limit": 25, "Total": 2, "Order":
                        "asc" }</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <wadl:response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Not Found.">
                  <para>The domain does not exist, the domain does not
                     have Exchange, or the marker was not found.
                     Inspect the itemNotFondFault for more
                     detail.</para>
               </wadl:doc>
            </wadl:response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/distributionList/{common_name}/emailAddresses"
         id="d1e33881a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="common_name" style="template" required="true"/>
         <method id="d1e12696" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Email Addresses - Bulk Update">
               <para role="shortdesc">Updates an existing Distribution
                  Lists's alternate email addresses.</para>
               <itemizedlist>
                  <listitem>
                     <para>Although addresses can be updated as part
                        of the base Exchange Distribution List update,
                        a convenience route is also available for just
                        sending the Email address part of the
                        request.</para>
                  </listitem>
                  <listitem>
                     <para>Updates an existing Distribution Lists's
                        alternate email addresses.</para>
                  </listitem>
                  <listitem>
                     <para>Supports Asynchronous Statuses and
                        Asynchronous Errors.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase role="#EXDLEA">Email
                           Address</phrase> Array</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        https://api.emailsrvr.com/v1/domains/example.com/ex/distributionlists/ExampleDL/emailaddresses
                        { "EmailAddresses": [ { "Action" : "add"
                        "Value" : "exampledl-alias2@example.com"
                        "AddressPrimary": false, "AddressProtocol" :
                        "smtp" } ] }" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <wadl:response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="OK.">
                  <para>The data was successfully retrieved.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Bad Request.">
                  <para>The request was invalid. Inspect the
                     validationFault response for more detail.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Not Found.">
                  <para>The domain does not exist, the domain does not
                     have Exchange, or the marker was not found.
                     Inspect the itemNotFoundFault for more
                     detail.</para>
               </wadl:doc>
            </wadl:response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/distributionLists/{common_name}/members"
         id="d1e34124a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="common_name" style="template" required="true"/>
         <method id="d1e12788" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Members - List">
               <para role="shortdesc">Lists an existing Distribution
                  List's Members. (see Listings)</para>
               <itemizedlist>
                  <listitem>
                     <para>Lists an existing Distribution List's
                        Members. (see Listings)</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase role="#EXDLMembers"
                           >Members</phrase> Listing</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        https://api.emailsrvr.com/v1/domains/example.com/ex/distributionlists/ExampleDL/members"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{ "Recipients": [ { "Value": "mexuser1" }, {
                        "Value": "mexuser2" } ], "Limit": 25, "Total":
                        2, "Order": "asc" }</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <wadl:response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="OK.">
                  <para>The data was successfully retrieved.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Not Found.">
                  <para>The domain does not exist, the domain does not
                     have Exchange, or the marker was not found.
                     Inspect the itemNotFondFault for more
                     detail.</para>
               </wadl:doc>
            </wadl:response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/distributionList/{common_name}/members"
         id="d1e34356a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="common_name" style="template" required="true"/>
         <method id="d1e12868" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Members - Bulk Update">
               <para role="shortdesc">Updates an existing Distribution
                  Lists's Members.</para>
               <itemizedlist>
                  <listitem>
                     <para>Although members can be updated as part of
                        the base Exchange Distribution List update, a
                        convenience route is also available for just
                        sending the Members part of the
                        request.</para>
                  </listitem>
                  <listitem>
                     <para>Updates an existing Distribution Lists's
                        Members.</para>
                  </listitem>
                  <listitem>
                     <para>Supports Asynchronous Statuses and
                        Asynchronous Errors.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase role="#EXDLMembers"
                           >Members</phrase> Array</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     title="OK.">
                     <para>The data was successfully retrieved.</para>
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        https://api.emailsrvr.com/v1/domains/example.com/ex/distributionlists/ExampleDL/members
                        { "Recipients": [ { \t\"Action\":\"Remove"
                        \t\"Value" : "MexUser1" }, {
                        \t\"Action\":\"Add" \t\"Value" : "MexUser2" }
                        ] }" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <wadl:response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Bad Request.">
                  <para>The request was invalid. Inspect the
                     validationFault response for more detail.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Not Found.">
                  <para>The domain does not exist, the domain does not
                     have Exchange, or the marker was not found.
                     Inspect the itemNotFoundFault for more
                     detail.</para>
               </wadl:doc>
            </wadl:response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/distributionlists/{common_name}/managers"
         id="d1e34599a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="common_name" style="template" required="true"/>
         <method id="d1e12960" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Managers - List">
               <para role="shortdesc">Lists an existing Distribution
                  List's Managers. (see Listings)</para>
               <itemizedlist>
                  <listitem>
                     <para>Lists an existing Distribution List's
                        Managers. (see Listings)</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase role="#EXDLManagers"
                           >Managers</phrase> Listing</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        https://api.emailsrvr.com/v1/domains/example.com/ex/distributionlists/ExampleDL/Managers"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     title="OK">
                     <para>The data was successfully retrieved.</para>
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{ "Recipients": [ { "Value": "mexuser1" }, {
                        "Value": "mexuser2" } ], "Limit": 25, "Total":
                        2, "Order": "asc" }</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <wadl:response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Not Found.">
                  <para>The domain does not exist, the domain does not
                     have Exchange, or the marker was not found.
                     Inspect the itemNotFondFault for more
                     detail.</para>
               </wadl:doc>
            </wadl:response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/distributionList/{common_name}/managers"
         id="d1e34830a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="common_name" style="template" required="true"/>
         <method id="d1e13041" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Managers - Bulk Update">
               <para role="shortdesc">Updates an existing Distribution
                  Lists's Managers.</para>
               <itemizedlist>
                  <listitem>
                     <para>Although managers can be updated as part of
                        the base Exchange Distribution List update, a
                        convenience route is also available for just
                        sending the Managers part of the
                        request.</para>
                  </listitem>
                  <listitem>
                     <para>Updates an existing Distribution Lists's
                        Managers.</para>
                  </listitem>
                  <listitem>
                     <para>Supports Asynchronous Statuses and
                        Asynchronous Errors.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase role="#EXDLManagers"
                           >Managers</phrase> Array</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        https://api.emailsrvr.com/v1/domains/example.com/ex/distributionlists/ExampleDL/managers
                        { "Recipients": [ { \t\"Action\":\"Remove"
                        \t\"Value" : "MexUser1" }, {
                        \t\"Action\":\"Add" \t\"Value" : "MexUser2" }
                        ] }" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <wadl:response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="OK.">
                  <para>The data was successfully retrieved.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Bad Request.">
                  <para>The request was invalid. Inspect the
                     validationFault response for more detail.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Not Found.">
                  <para>The domain does not exist, the domain does not
                     have Exchange, or the marker was not found.
                     Inspect the itemNotFoundFault for more
                     detail.</para>
               </wadl:doc>
            </wadl:response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/distributionlists/{common_name}/senders"
         id="d1e35073a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="common_name" style="template" required="true"/>
         <method id="d1e13133" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Senders - List">
               <para role="shortdesc">Lists an existing Distribution
                  List's Senders. (see Listings)</para>
               <itemizedlist>
                  <listitem>
                     <para>Lists an existing Distribution List's
                        Senders. (see Listings)</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase role="#EXDLSenders"
                           >Senders</phrase> Listing</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        https://api.emailsrvr.com/v1/domains/example.com/ex/distributionlists/ExampleDL/senders"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{ "All": "restricted", "Recipients": [ {
                        "Value": "mexuser1" }, { "Value": "mexuser2" }
                        ], "Limit": 25, "Total": 2, "Order": "asc"
                        }</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <wadl:response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="OK.">
                  <para>The data was successfully retrieved.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Not Found.">
                  <para>The domain does not exist, the domain does not
                     have Exchange, or the marker was not found.
                     Inspect the itemNotFondFault for more
                     detail.</para>
               </wadl:doc>
            </wadl:response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/distributionList/{common_name}/senders"
         id="d1e35304a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="common_name" style="template" required="true"/>
         <method id="d1e13213" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Senders - Bulk Update">
               <para role="shortdesc">Updates an existing Distribution
                  Lists's Senders.</para>
               <itemizedlist>
                  <listitem>
                     <para>Although senders can be updated as part of
                        the base Exchange Distribution List update, a
                        convenience route is also available for just
                        sending the Senders part of the
                        request.</para>
                  </listitem>
                  <listitem>
                     <para>Updates an existing Distribution Lists's
                        Senders.</para>
                  </listitem>
                  <listitem>
                     <para>Supports Asynchronous Statuses and
                        Asynchronous Errors.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase role="#EXDLSenders"
                           >Senders</phrase> Array</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        https://api.emailsrvr.com/v1/domains/example.com/ex/distributionlists/ExampleDL/senders
                        { "All" : "restricted" "Recipients": [ {
                        \t\"Action\":\"Remove" \t\"Value" : "MexUser1"
                        }, { \t\"Action\":\"Add" \t\"Value" :
                        "MexUser2" } ] }" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <wadl:response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="OK.">
                  <para>The data was successfully retrieved.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Bad Request.">
                  <para>The request was invalid. Inspect the
                     validationFault response for more detail.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Not Found.">
                  <para>The domain does not exist, the domain does not
                     have Exchange, or the marker was not found.
                     Inspect the itemNotFoundFault for more
                     detail.</para>
               </wadl:doc>
            </wadl:response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/distributionListOptions/AvailableSendersRecipients"
         id="d1e35547a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e13303" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="New Distribution List Options - Available Sender&#xA;Recipients">
               <para role="shortdesc">Lists recipients that can be
                  senders for a new Distribution List on the given
                  domain.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to retrieve a list of
                        recipients that can be senders for a new
                        Distribution List on the given domain.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase role="#EXDLSenders"
                           >Senders</phrase> Listing</para>
                  </listitem>
               </itemizedlist>
               <para>Note</para>
               <para>
                  https://api.emailsrvr.com/v1/domains/(domain)/ex/distributionListOptions/
                  is the base URL for getting complete sets of valid
                  data that can be submitted as part of a Distribution
                  List create operation.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        https://api.emailsrvr.com/v1/customers/all/domains/example.com/ex/distributionlistOptions/AvailableSendersRecipients"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{ "Recipients": [ { "Value": "mexuser1" }, {
                        "Value": "mexuser2" }, { "Value": "mexuser3"
                        }, { "Value": "mexuser4" } ], "Limit": 25,
                        "Total": 2, "Order": "asc" }</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/distributionListOptions/AvailableManagersRecipients"
         id="d1e35750a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e13369" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="New Distribution List Options - Available Managers&#xA;Recipients">
               <para role="shortdesc">Lists recipients that can be
                  managers for a new Distribution List on the given
                  domain.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to retrieve a list of
                        recipients that can be managers for a new
                        Distribution List on the given domain.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase role="#EXDLManagers"
                           >Managers</phrase> Listing</para>
                  </listitem>
               </itemizedlist>
               <para>Note</para>
               <para>
                  https://api.emailsrvr.com/v1/domains/(domain)/ex/distributionListOptions/
                  is the base URL for getting complete sets of valid
                  data that can be submitted as part of a Distribution
                  List create operation.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        https://api.emailsrvr.com/v1/customers/all/domains/example.com/ex/distributionlistOptions/AvailableManagersRecipients"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{ "Recipients": [ { "Value": "mexuser1" }, {
                        "Value": "mexuser2" }, { "Value": "mexuser3"
                        }, { "Value": "mexuser4" } ], "Limit": 25,
                        "Total": 2, "Order": "asc" }</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/distributionListOptions/AvailableMembersRecipients"
         id="d1e35952a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e13435" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="New Distribution List Options - Available Members&#xA;Recipients">
               <para role="shortdesc">Lists recipients that can be
                  Members for a new Distribution List on the given
                  domain.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to retrieve a list of
                        recipients that can be Members for a new
                        Distribution List on the given domain.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase role="#EXDLMembers"
                           >Members</phrase> Listing</para>
                  </listitem>
               </itemizedlist>
               <para>Note</para>
               <para>
                  https://api.emailsrvr.com/v1/domains/(domain)/ex/distributionListOptions/
                  is the base URL for getting complete sets of valid
                  data that can be submitted as part of a Distribution
                  List create operation.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        https://api.emailsrvr.com/v1/customers/all/domains/example.com/ex/distributionlistOptions/AvailableMembersRecipients"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{ "Recipients": [ { "Value": "mexuser1" }, {
                        "Value": "mexuser2" }, { "Value": "mexuser3"
                        }, { "Value": "mexuser4" } ], "Limit": 25,
                        "Total": 2, "Order": "asc" }</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/distributionLists/{common_name}/options/AvailableSendersRecipients"
         id="d1e36154a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="common_name" style="template" required="true"/>
         <method id="d1e13504" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Existing Distribution List Options - Available Sender&#xA;Recipients">
               <para role="shortdesc">Lists recipients that can be
                  senders for a specific Distribution List on the
                  given domain.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to retrieve a list of
                        recipients that can be senders for a specific
                        Distribution List on the given domain.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase role="#EXDLSenders"
                           >Senders</phrase> Listing</para>
                  </listitem>
               </itemizedlist>
               <para>Note</para>
               <para>
                  https://api.emailsrvr.com/v1/domains/(domain)/ex/distributionLists/(common
                  name)/options is the base URL for getting complete
                  sets of valid data that can be submitted as part of
                  a Distribution List update operation.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        https://api.emailsrvr.com/v1/customers/all/domains/example.com/ex/distributionLists/ExampleDL/options/AvailableSendersRecipients"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{ "Recipients": [ { "Value": "mexuser3" }, {
                        "Value": "mexuser4" } ], "Limit": 25, "Total":
                        2, "Order": "asc" }</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/distributionLists/{common_name}/options/AvailableManagersRecipients"
         id="d1e36356a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="common_name" style="template" required="true"/>
         <method id="d1e13572" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Existing Distribution List Options - Available Managers&#xA;Recipients">
               <para role="shortdesc">Lists recipients that can be
                  managers for a specific Distribution List on the
                  given domain.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to retrieve a list of
                        recipients that can be managers for a specific
                        Distribution List on the given domain.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase role="#EXDLManagers"
                           >Managers</phrase> Listing</para>
                  </listitem>
               </itemizedlist>
               <para>Note</para>
               <para>
                  https://api.emailsrvr.com/v1/domains/(domain)/ex/distributionLists/(common
                  name)/options is the base URL for getting complete
                  sets of valid data that can be submitted as part of
                  a Distribution List update operation.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        https://api.emailsrvr.com/v1/customers/all/domains/example.com/ex/distributionLists/ExampleDL/options/AvailableManagersRecipients"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{ "Recipients": [ { "Value": "mexuser3" }, {
                        "Value": "mexuser4" } ], "Limit": 25, "Total":
                        2, "Order": "asc" }</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/distributionLists/{common_name}/options/AvailableMembersRecipients"
         id="d1e36558a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="common_name" style="template" required="true"/>
         <method id="d1e13640" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Exist Distribution List Options - Available Members&#xA;Recipients">
               <para role="shortdesc">Lists recipients that can be
                  Members for a specific Distribution List on the
                  given domain.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to retrieve a list of
                        recipients that can be Members for a specific
                        Distribution List on the given domain.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase role="#EXDLMembers"
                           >Members</phrase> Listing</para>
                  </listitem>
               </itemizedlist>
               <para>Note</para>
               <para>
                  https://api.emailsrvr.com/v1/domains/(domain)/ex/distributionLists/(common
                  name)/options is the base URL for getting complete
                  sets of valid data that can be submitted as part of
                  a Distribution List update operation.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        https://api.emailsrvr.com/v1/customers/all/domains/example.com/ex/distributionLists/ExampleDL/options/AvailableMembersRecipients"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{ "Recipients": [ { "Value": "mexuser3" }, {
                        "Value": "mexuser4" } ], "Limit": 25, "Total":
                        2, "Order": "asc" }</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/distributionlists"
         id="d1e36771a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e13706" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Index">
               <para role="shortdesc">Returns a list of distribution
                  lists associated with the domain.</para>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>The Index operation only supports the GET
                        HTTP verb.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/12345678/domains/example.com/ex/distributionlists?contains=mailing',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;distributionlistList
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:distributionlistList"&gt;
                        &lt;offset&gt;0&lt;/offset&gt;
                        &lt;size&gt;50&lt;/size&gt;
                        &lt;total&gt;3&lt;/total&gt;
                        &lt;distributionlists&gt;
                        &lt;distributionlist&gt;
                        &lt;name&gt;apiexgroup4&lt;/name&gt;
                        &lt;displayName&gt;API Test
                        Group&lt;/displayName&gt;
                        &lt;/distributionlist&gt;
                        &lt;distributionlist&gt;
                        &lt;name&gt;apiexgroup62&lt;/name&gt;
                        &lt;displayName&gt;API Test
                        Group&lt;/displayName&gt;
                        &lt;/distributionlist&gt;
                        &lt;distributionlist&gt;
                        &lt;name&gt;apiexgroup64&lt;/name&gt;
                        &lt;displayName&gt;API Test
                        Group&lt;/displayName&gt;
                        &lt;/distributionlist&gt;
                        &lt;/distributionlists&gt;
                        &lt;/distributionlistList&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"offset":0,"size":50,"total":3,"distributionlists":[{"name":"apiexgroup4","displayName":"API
                        Test
                        Group"},{"name":"apiexgroup62","displayName":"API
                        Test
                        Group"},{"name":"apiexgroup64","displayName":"API
                        Test Group"}]}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Distribution List is not found. Sample
                     Message: Distribution List not found</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/distributionlists/{distribution_list_name}"
         id="d1e37014a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="distribution_list_name" style="template"
            required="true"/>
         <method id="d1e13778" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Show">
               <para role="shortdesc">Returns the distribution list's
                  details.</para>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>The Show operation only supports the GET
                        HTTP verb.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/12345678/domains/example.com/ex/distributionlists/all.employees',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;distributionlist
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:contact"&gt;
                        &lt;name&gt;apiexgroup64&lt;/name&gt;
                        &lt;displayName&gt;API Test
                        Group&lt;/displayName&gt;
                        &lt;isHidden&gt;false&lt;/isHidden&gt;
                        &lt;emailAddressList&gt; &lt;emailAddress&gt;
                        &lt;address&gt;apiexgroup64@apidomain36.com&lt;/address&gt;
                        &lt;replyTo&gt;true&lt;/replyTo&gt;
                        &lt;/emailAddress&gt;
                        &lt;/emailAddressList&gt; &lt;memberList&gt;
                        &lt;member&gt;apiexmailbox30@apidomain36.com&lt;/member&gt;
                        &lt;member&gt;apiexmailbox7@apidomain36.com&lt;/member&gt;
                        &lt;member&gt;apiexmailbox99@apidomain36.com&lt;/member&gt;
                        &lt;/memberList&gt;
                        &lt;/distributionlist&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"name":"apiexgroup64","displayName":"API
                        Test
                        Group","isHidden":false,"emailAddressList":[{"address":"apiexgroup64@apidomain36.com","replyTo":true}],"memberList":["apiexmailbox30@apidomain36.com","apiexmailbox7@apidomain36.com","apiexmailbox99@apidomain36.com"]}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Distribution List is not found. Sample
                     Message: Distribution List not found</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/distributionlists/{distribution_list_name}"
         id="d1e37257a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="distribution_list_name" style="template"
            required="true"/>
         <method id="d1e13850" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Add">
               <para role="shortdesc">Adds the distribution list with
                  the specified information. Required fields must be
                  supplied when adding. Others are optional.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>displayName</td>
                        <td>string</td>
                        <td>Distribution list display name
                           (Required)</td>
                     </tr>
                     <tr>
                        <td>isHidden</td>
                        <td>boolean</td>
                        <td>Whether or not the distribution list is
                           hidden from the Global Address List
                           (Defaults to false)</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST
                        '/customers/12345678/domains/example.com/ex/distributionlists/all.employees',
                        { 'name' =\u003E 'all.employees',
                        'displayName' =\u003E 'Employees' },
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>New distribution list name already exists.
                     Sample Message: The email address
                     john.doe@abc.com is already in use</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>New distribution list name doesn't meet the
                     naming requirements. Sample Message: Invalid user
                     name</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>New distribution list display name doesn't
                     meet the naming requirements. Sample Message:
                     Invalid display name</para>
               </wadl:doc>
            </response>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Distribution list is not found. Sample
                     Message: The email address john.doe@abc.com is
                     already in use</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Display name doesn't meet the naming
                     requirements. Sample Message: Invalid display
                     name</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/distributionlists/{distribution_list_name}"
         id="d1e37565a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="distribution_list_name" style="template"
            required="true"/>
         <method id="d1e13986" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Edit">
               <para role="shortdesc">Edits the distribution list with
                  the specified information. Required fields must be
                  supplied when adding. Others are optional.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>displayName</td>
                        <td>string</td>
                        <td>Distribution list display name
                           (Required)</td>
                     </tr>
                     <tr>
                        <td>isHidden</td>
                        <td>boolean</td>
                        <td>Whether or not the distribution list is
                           hidden from the Global Address List
                           (Defaults to false)</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        '/customers/12345678/domains/example.com/ex/distributionlists/all.employees',
                        { 'displayName' =\u003E 'Example.com
                        Employees' }, 'text/xml'," });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>New distribution list name already exists.
                     Sample Message: The email address
                     john.doe@abc.com is already in use</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>New distribution list name doesn't meet the
                     naming requirements. Sample Message: Invalid user
                     name</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>New distribution list display name doesn't
                     meet the naming requirements. Sample Message:
                     Invalid display name</para>
               </wadl:doc>
            </response>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Distribution list is not found. Sample
                     Message: The email address john.doe@abc.com is
                     already in use</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Display name doesn't meet the naming
                     requirements. Sample Message: Invalid display
                     name</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/distributionlists/{distribution_list_name}"
         id="d1e37874a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="distribution_list_name" style="template"
            required="true"/>
         <method id="d1e14121" name="DELETE">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Delete">
               <para role="shortdesc">Deletes the distribution
                  list.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >DELETE
                        '/customers/12345678/domains/example.com/ex/distributionlists/all.employees',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Distribution list is not found. Sample
                     Message: Distribution List not found</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/distributionlists/{distribution_list_name}/emailaddresses/{email_address}"
         id="d1e38087a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="distribution_list_name" style="template"
            required="true"/>
         <param name="email_address" style="template" required="true"/>
         <method id="d1e14164" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Add Email Address">
               <para role="shortdesc">Adds an email address that the
                  distribution list is associated with to the list.
                  This address' domain name must be the same as the
                  domain the distribution list is
                  under.</para><para>This refers to the email
                  addresses a distribution list can appear as.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST
                        '/customers/12345678/domains/example.com/ex/distributionlists/all.employees/emailaddresses/alex@example.com',
                        {}, 'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Distribution list is not found. Sample
                     Message: Distribution list not found</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/distributionlists/{distribution_list_name}/emailaddresses/{email_address}"
         id="d1e38304a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="distribution_list_name" style="template"
            required="true"/>
         <param name="email_address" style="template" required="true"/>
         <method id="d1e14210" name="DELETE">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Delete Email Address">
               <para role="shortdesc">Deletes the email address that
                  is tied to the distribution list.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >DELETE
                        '/customers/12345678/domains/example.com/ex/distributionlists/all.employees/emailaddresses/alex@example.com',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/distributionlists/{distribution_list_name}/members/{member_name}"
         id="d1e38484a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="distribution_list_name" style="template"
            required="true"/>
         <param name="member_name" style="template" required="true"/>
         <method id="d1e14244" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Add Member">
               <para role="shortdesc">Adds a member to the
                  distribution list.</para>
               <para>This refers to the recipients of the distribution
                  list.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST
                        '/customers/12345678/domains/example.com/ex/distributionlists/all.employees/members/john.smith',
                        {}, 'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Distribution list is not found. Sample
                     Message: Distribution list not found</para>
               </wadl:doc>
            </response>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>New member is not found. Sample Message: No
                     user with the email address jane.doe
                     exists</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/distributionlists/{distribution_list_name}/members/{member_name}"
         id="d1e38713a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="distribution_list_name" style="template"
            required="true"/>
         <param name="member_name" style="template" required="true"/>
         <method id="d1e14299" name="DELETE">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Delete Member">
               <para role="shortdesc">Deletes a member from the
                  distribution list.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >DELETE
                        '/customers/12345678/domains/example.com/ex/distributionlists/all.employees/members/john.smith',
                        {}, 'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Distribution list is not found. Sample
                     Message: Distribution list not found</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Member is not found. Sample Message: Invalid
                     group member name</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/resources/"
         id="d1e39698a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e14348" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="List">
               <para role="shortdesc">Lists resource mailboxes,
                  supports exporting, supports exporting. (see
                  Listings)</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this to list resource mailboxes,
                        supports exporting, supports exporting. (see
                        Listings)</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase
                           role="#ExchangeResource">Exchange
                           Resource</phrase> Listing</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        https://api.emailsrvr.com/v1/domains/example.com/ex/resources"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{ "ResourceMailboxes": [ { "Type": "Room",
                        "PhoneNumber": "1234567890", "Upn":
                        "room.101@example.com", "ResourceCapacity":
                        25, "CustomProperties": [ { "Value":
                        "Videoconferencing", "ExchangeAction": 0 }, {
                        "Value": "Whiteboard", "ExchangeAction": 0 }
                        ], "CommonName": "room.101", "DisplayName":
                        "Room 101", "Alias": "room.101.example.com",
                        "IsHiddenFromAddressList": false,
                        "PrimarySmtpAddress": null, "EmailAddresses":
                        null, "Status": "Ready", "SamAccountName":
                        "room.101", "LegacyExchangeDn":
                        "/o=e14s/ou=Exchange Administrative Group
                        (FYDIBOHF23SPDLT)/cn=Recipients/cn=room.101b5c"
                        }, { "Type": "Room", "PhoneNumber":
                        "1234567890", "Upn": "room.102@example.com",
                        "ResourceCapacity": 25, "CustomProperties": [
                        { "Value": "Videoconferencing",
                        "ExchangeAction": 0 }, { "Value":
                        "Whiteboard", "ExchangeAction": 0 } ],
                        "CommonName": "room.102", "DisplayName": "Room
                        101", "Alias": "room.102.example.com",
                        "IsHiddenFromAddressList": false,
                        "PrimarySmtpAddress": null, "EmailAddresses":
                        null, "Status": "Ready", "SamAccountName":
                        "room.102", "LegacyExchangeDn":
                        "/o=e14s/ou=Exchange Administrative Group
                        (FYDIBOHF23SPDLT)/cn=Recipients/cn=room.1029fd"
                        }, { "Type": "Room", "PhoneNumber":
                        "1234567890", "Upn": "room.103@example.com",
                        "ResourceCapacity": 25, "CustomProperties": [
                        { "Value": "Videoconferencing",
                        "ExchangeAction": 0 }, { "Value":
                        "Whiteboard", "ExchangeAction": 0 } ],
                        "CommonName": "room.103", "DisplayName": "Room
                        103", "Alias": "room.103.example.com",
                        "IsHiddenFromAddressList": false,
                        "PrimarySmtpAddress": null, "EmailAddresses":
                        null, "Status": "Ready", "SamAccountName":
                        "room.103", "LegacyExchangeDn":
                        "/o=e14s/ou=Exchange Administrative Group
                        (FYDIBOHF23SPDLT)/cn=Recipients/cn=room.10370c"
                        } ], "Sort": "cn", "Limit": 50, "Total": 3,
                        "Order": "asc" }</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <wadl:response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="OK.">
                  <para>The listing was successfully retrieved.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Bad Request.">
                  <para>The request was invalid. Inspect the
                     validationFault response for more detail.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Not Found.">
                  <para>The domain does not exist, the domain does not
                     have Exchange, or the marker was not found.
                     Inspect the itemNotFondFault for more
                     detail.</para>
               </wadl:doc>
            </wadl:response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/resources/{common_name}"
         id="d1e39938a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="common_name" style="template" required="true"/>
         <method id="d1e14438" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Read">
               <para role="shortdesc">Reads an existing resource
                  mailbox.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to read an existing resource
                        mailbox.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase
                           role="#ExchangeResource">Exchange
                           Resource</phrase>
                     </para>
                  </listitem>
               </itemizedlist>
               <para xmlns="http://docbook.org/ns/docbook"
                  >Notes</para>
               <itemizedlist>
                  <listitem>
                     <para>The Exchange Resource resource contains
                        some paged data that must be accessed via
                        separate GET requests.</para>
                  </listitem>
                  <listitem>
                     <para>Properties directly on the object and
                        CustomProperties, can be accessed via a GET on
                        the base resource.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.1"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{ "Type": "Room", "PhoneNumber":
                        "1234567890", "Upn": "room.101@example.com",
                        "ResourceCapacity": 25, "CustomProperties": [
                        { "Value": "Videoconferencing",
                        "ExchangeAction": 0 }, { "Value":
                        "Whiteboard", "ExchangeAction": 0 } ],
                        "CommonName": "room.101", "DisplayName": "Room
                        101", "Alias": "room.101.example.com",
                        "IsHiddenFromAddressList": false,
                        "PrimarySmtpAddress": null, "EmailAddresses":
                        null, "Status": "Ready", "SamAccountName":
                        "room.101", "LegacyExchangeDn":
                        "/o=e14s/ou=Exchange Administrative Group
                        (FYDIBOHF23SPDLT)/cn=Recipients/cn=room.1019d4"
                        }</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <wadl:response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="OK.">
                  <para>The resource was successfully
                     retrieved.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Bad Request.">
                  <para>The request was invalid. Inspect the
                     validationFault response for more detail.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Not Found.">
                  <para>The domain does not exist, the domain does not
                     have Exchange, or the marker was not found.
                     Inspect the itemNotFondFault for more
                     detail.</para>
               </wadl:doc>
            </wadl:response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/resources/"
         id="d1e40189a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e14544" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Create">
               <para role="shortdesc">Adds a resource mailbox.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to add a new resource
                        mailbox.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase
                           role="#ExchangeResource">Exchange
                           Resource</phrase>
                     </para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST
                        https://api.emailsrvr.com/v1/domains/example.com/ex/resources
                        { "CommonName" : "room.101" "Type" : "Room"
                        "DisplayName" : "Room 101" "PhoneNumber" :
                        "1234567890" "ResourceCapacity": 25,
                        "CustomProperties": [ { "Value" :
                        "Videoconferencing" }, { "Value" :
                        "Whiteboard" } ], "CalendarProcessing": {
                        "AutoBooking" : "AutoUpdate"
                        "BookingWindowInDays": 90,
                        "EnforceSchedulingHorizon": false,
                        "AllowConflicts": true,
                        "AllowRecurringMeetings": false,
                        "ScheduleOnlyDuringWorkHours": true,
                        "MaximumDurationInMinutes": 720,
                        "MaximumConflictInstances": 1,
                        "ConflictPercentageAllowed": 50,
                        "AdditionalResponse": { "Enable": true,
                        "Value" : "This is an additional response" }
                        }, "Delegates": [ { "Value" : "user1" }, {
                        "Value" : "user2" }, { "Value" : "user3" } ],
                        "Permissions": [ { "Recipient" : "user5"
                        "Types": [ "FullAccess" ] }, { "Recipient" :
                        "user6" "Types": [ "SendAs" ] }, { "Recipient"
                        : "user7" "Types": [ "FullAccess" "SendAs" ] }
                        ], "BookInPolicy": { "Recipients": [ { "Value"
                        : "user1" }, { "Value" : "user2" } ] },
                        "RequestInPolicy": { "Recipients": [ { "Value"
                        : "user4" }, { "Value" : "user5" } ] },
                        "RequestOutOfPolicy": { "AllUsers": true } }"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <wadl:response status="204">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="No Content.">
                  <para>The request has been accepted and will be
                     processed.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Bad Request.">
                  <para>The request was invalid. Inspect the
                     validationFault response for more detail.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Not Found.">
                  <para>The domain does not exist, the domain does not
                     have Exchange, or the marker was not found.
                     Inspect the itemNotFondFault for more
                     detail.</para>
               </wadl:doc>
            </wadl:response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/resources/{common_name}"
         id="d1e40425a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="common_name" style="template" required="true"/>
         <method id="d1e14624" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Update">
               <para role="shortdesc">Updates an existing resource
                  mailbox.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to update an existing
                        resource mailbox.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase
                           role="#ExchangeResource">Exchange
                           Resource</phrase>
                     </para>
                  </listitem>
               </itemizedlist>
               <para xmlns="http://docbook.org/ns/docbook"
                  >Notes</para>
               <itemizedlist>
                  <listitem>
                     <para>All data that is part of the 'Exchange
                        Resource' resource can be updated in a single
                        PUT request.</para>
                  </listitem>
                  <listitem>
                     <para>CustomProperties, Delegates, and policies
                        must specify an Action, set to either Add or
                        Remove, to specify the operation for that
                        value.</para>
                  </listitem>
                  <listitem>
                     <para>Permissions must be specified in whole. For
                        example, resource1@example.com has user5's
                        permission types set to FullAccess.</para>
                  </listitem>
                  <listitem>
                     <para>To add SendAs, the request must contain
                        both FullAccess and SendAs for that
                        user.</para>
                  </listitem>
                  <listitem>
                     <para>To remove all permissions from user7, the
                        request must contain an empty Type array for
                        that user.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.101
                        { "Type" : "Room" "DisplayName" : "Conference
                        Room 101" "PhoneNumber" : "try shouting"
                        "ResourceCapacity" : "30" "CustomProperties":
                        [ { "Value" : "Whiteboard" "Action" : "Remove"
                        } ], "CalendarProcessing": { "AutoBooking" :
                        "AutoUpdate" "BookingWindowInDays": 180,
                        "EnforceSchedulingHorizon": true,
                        "AllowConflicts": false,
                        "AllowRecurringMeetings": true,
                        "ScheduleOnlyDuringWorkHours": false,
                        "MaximumDurationInMinutes": 1440,
                        "MaximumConflictInstances": 0,
                        "ConflictPercentageAllowed": 0,
                        "AdditionalResponse": { "Enable": false } },
                        "Delegates": [ { "Value" : "user3" "Action" :
                        "Remove" }, { "Value" : "user4" "Action" :
                        "Add" } ], "Permissions": [ { "Recipient" :
                        "user5" "Types": [ "FullAccess" "SendAs" ] },
                        { "Recipient" : "user7" "Types": [] }, {
                        "Recipient" : "user8" "Types": [ "FullAccess"
                        ] } ], "BookInPolicy": { "Recipients": [ {
                        "Value" : "user2" "Action" : "Remove" }, {
                        "Value" : "user3" "Action" : "Add" } ] },
                        "RequestInPolicy": { "AllUsers": true },
                        "RequestOutOfPolicy": { "AllUsers": false,
                        "Recipients": [ { "Value" : "user7" "Action" :
                        "Add" }, { "Value" : "user8" "Action" : "Add"
                        } ] } }" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <wadl:response status="204">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="No Content.">
                  <para>The request has been accepted and will be
                     processed.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Bad Request.">
                  <para>The request was invalid. Inspect the
                     validationFault response for more detail.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Not Found.">
                  <para>The domain does not exist, the domain does not
                     have Exchange, or the marker was not found.
                     Inspect the itemNotFondFault for more
                     detail.</para>
               </wadl:doc>
            </wadl:response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/resources/{common_name}"
         id="d1e40683a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="common_name" style="template" required="true"/>
         <method id="d1e14740" name="DELETE">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Delete">
               <para role="shortdesc">Deletes a resource
                  mailbox.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to delete a resource
                        mailbox.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: None</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >DELETE
                        https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.101"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <wadl:response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="OK.">
                  <para>The request has been accepted and will be
                     processed.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Bad Request.">
                  <para>The request was invalid. Inspect the
                     validationFault response for more detail.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Not Found.">
                  <para>The domain does not exist, the domain does not
                     have Exchange, or the marker was not found.
                     Inspect the itemNotFondFault for more
                     detail.</para>
               </wadl:doc>
            </wadl:response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/resources"
         id="d1e40917a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e14815" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Export">
               <para role="shortdesc">Exports a file of resource
                  mailboxes.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to export a file of resource
                        mailboxes.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase
                           role="#ExchangeResource">Exchange
                           Resource</phrase> Listing</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <wadl:param name="exportTo" type="xs:string"/>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        https://api.emailsrvr.com/v1/domains/example.com/ex/resources?exportTo=myAdminEmail@example.com"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="202"/>
            <wadl:response status="202">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Accepted.">
                  <para>The request has been accepted and will be
                     processed.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Bad Request.">
                  <para>The request was invalid. Inspect the
                     validationFault response for more detail.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Not Found.">
                  <para>The domain does not exist, the domain does not
                     have Exchange, or the marker was not found.
                     Inspect the itemNotFondFault for more
                     detail.</para>
               </wadl:doc>
            </wadl:response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/resources/{common_name}/calendarProcessing"
         id="d1e41150a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="common_name" style="template" required="true"/>
         <method id="d1e14891" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Calendar Processing - Read">
               <para role="shortdesc">Reads an existing resource
                  mailbox's calendar processing data.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to read an existing resource
                        mailbox's calendar processing data.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase
                           role="#CalendarProcessing">Calendar
                           Processing</phrase>
                     </para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.101/calendarProcessing"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{ "AutoBooking": "AutoUpdate",
                        "BookingWindowInDays": 90,
                        "EnforceSchedulingHorizon": false,
                        "AllowConflicts": true,
                        "AllowRecurringMeetings": false,
                        "ScheduleOnlyDuringWorkHours": true,
                        "MaximumDurationInMinutes": 720,
                        "MaximumConflictInstances": 1,
                        "ConflictPercentageAllowed": 50,
                        "AdditionalResponse": { "Enable": true,
                        "Value": "This is an additional response" }
                        }</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <wadl:response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="OK.">
                  <para>The data was successfully retrieved.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Not Found.">
                  <para>The domain does not exist, the domain does not
                     have Exchange, or the resource was not found.
                     Inspect the itemNotFondFault for more
                     detail.</para>
               </wadl:doc>
            </wadl:response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/resources/{common_name}/calendarProcessing"
         id="d1e41380a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="common_name" style="template" required="true"/>
         <method id="d1e14971" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Calendar Processing - Update">
               <para role="shortdesc">Updates an existing resource
                  mailbox's calendar processing data.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to update an existing
                        resource mailbox's calendar processing
                        data.</para>
                  </listitem>
                  <listitem>
                     <para>Although Calendar Processing settings can
                        be updated as part of the base Exchange
                        Resource update, a convenience route is also
                        available for just sending just the Calendar
                        Processing part of the request.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase
                           role="#CalendarProcessing">Calendar
                           Processing</phrase>
                     </para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.101/calendarProcessing
                        { "AutoBooking" : "AutoUpdate"
                        "BookingWindowInDays": 180,
                        "EnforceSchedulingHorizon": true,
                        "AllowConflicts": false,
                        "AllowRecurringMeetings": true,
                        "ScheduleOnlyDuringWorkHours": false,
                        "MaximumDurationInMinutes": 1440,
                        "MaximumConflictInstances": 0,
                        "ConflictPercentageAllowed": 0,
                        "AdditionalResponse": { "Enable": false } }"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/resources/{common_name}/delegates"
         id="d1e41574a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="common_name" style="template" required="true"/>
         <method id="d1e15029" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Delegates - List">
               <para role="shortdesc">Reads an existing resource
                  mailbox's delegates data.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to read an existing resource
                        mailbox's delegates data.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase role="#Delegates"
                           >Delegates</phrase> Listing</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.101/delegates"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{ "Delegates": [ { "Value": "user1" }, {
                        "Value": "user2" }, { "Value": "user3" } ],
                        "Limit": 50, "Total": 3, "Order": "asc"
                        }</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <wadl:response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="OK.">
                  <para>The data was successfully retrieved.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Not Found.">
                  <para>The domain does not exist, the domain does not
                     have Exchange, or the resource was not found.
                     Inspect the itemNotFondFault for more
                     detail.</para>
               </wadl:doc>
            </wadl:response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/resources/{common_name}/delegates"
         id="d1e41805a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="common_name" style="template" required="true"/>
         <method id="d1e15109" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Delegates - Bulk Update">
               <para role="shortdesc">Updates an existing resource
                  mailbox's delegates data.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to update an existing
                        resource mailbox's delegates data.</para>
                  </listitem>
                  <listitem>
                     <para>Although Delegates settings can be updated
                        as part of the base Exchange Resource update,
                        a convenience route is also available for just
                        sending the Delegates part of the
                        request.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase role="#Delegates"
                           >Delegates</phrase> Array</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.101/delegates
                        [ { "Value" : "user1" "Action" : "Remove" }, {
                        "Value" : "user2" "Action" : "Remove" }, {
                        "Value" : "user5" "Action" : "Add" } ]"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <wadl:response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="OK.">
                  <para>The data was successfully retrieved.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Bad Request.">
                  <para>The request was invalid. Inspect the
                     validationFault response for more detail.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Not Found.">
                  <para>The domain does not exist, the domain does not
                     have Exchange, or the resource was not found.
                     Inspect the itemNotFondFault for more
                     detail.</para>
               </wadl:doc>
            </wadl:response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/resources/{common_name}/permissions"
         id="d1e42046a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="common_name" style="template" required="true"/>
         <method id="d1e15195" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Permissions - List">
               <para role="shortdesc">Reads an existing resource
                  mailbox's permissions data.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to read an existing resource
                        mailbox's permissions data.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase role="#Permissions"
                           >Permissions</phrase> Listing</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.101/permissions"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{ "Permissions": [ { "Recipient": "user5",
                        "Types": [ "FullAccess" ] }, { "Recipient":
                        "user6", "Types": [ "SendAs" ] }, {
                        "Recipient": "user7", "Types": [ "FullAccess",
                        "SendAs" ] } ], "Limit": 50, "Total": 3,
                        "Order": "asc" }</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <wadl:response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="OK.">
                  <para>The data was successfully retrieved.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Not Found.">
                  <para>The domain does not exist, the domain does not
                     have Exchange, or the resource was not found.
                     Inspect the itemNotFondFault for more
                     detail.</para>
               </wadl:doc>
            </wadl:response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/resources/(common_name)/calendarProcessing"
         id="d1e42277a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e15273" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Permissions - Bulk Update">
               <para role="shortdesc">Reads an existing resource
                  mailbox's calendar processing data.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to read an existing resource
                        mailbox's calendar processing data.</para>
                  </listitem>
                  <listitem>
                     <para>Although Permissions settings can be
                        updated as part of the base Exchange Resource
                        update, a convenience route is also available
                        for just sending the Permissions part of the
                        request.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase role="#Permissions"
                           >Permissions</phrase> Array</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.101/permissions
                        [ { "Recipient" : "user5" "Types": [
                        "FullAccess" "SendAs" ] }, { "Recipient" :
                        "user7" "Types": [] }, { "Recipient" : "user8"
                        "Types": [ "FullAccess" ] } ]"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <wadl:response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="OK.">
                  <para>The data was successfully retrieved.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Bad Request.">
                  <para>The request was invalid. Inspect the
                     validationFault response for more detail.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Not Found.">
                  <para>The domain does not exist, the domain does not
                     have Exchange, or the resource was not found.
                     Inspect the itemNotFondFault for more
                     detail.</para>
               </wadl:doc>
            </wadl:response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/resources/{common_name}/bookInPolicy"
         id="d1e42517a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="common_name" style="template" required="true"/>
         <method id="d1e15360" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Policies - List">
               <para role="shortdesc">Reads an existing resource
                  mailbox's permissions data.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to read an existing resource
                        mailbox's permissions data.</para>
                  </listitem>
                  <listitem>
                     <para>Examples in this section will use
                        BookInPolicy, but the interface for the three
                        is all the same.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase role="#Recipients"
                           >Recipients</phrase> Listing</para>
                  </listitem>
               </itemizedlist>
               <para>URL Format</para>
               <para>BookIn, RequestIn, and RequestOutOf policies can
                  all be accessed via the resource's URL followed by
                  /bookInPolicy, /requestInPolicy, and
                  /requestOutOfPolicy, respectively.</para>
               <itemizedlist>
                  <listitem>
                     <para>/v1/customers/{customer account
                        number}/domains/{domain
                        name}/ex/resources/{common
                        name}/bookInPolicy</para>
                  </listitem>
                  <listitem>
                     <para>/v1/customers/{customer account
                        number}/domains/{domain
                        name}/ex/resources/{common
                        name}/requestInPolicy</para>
                  </listitem>
                  <listitem>
                     <para>/v1/customers/{customer account
                        number}/domains/{domain
                        name}/ex/resources/{common
                        name}/requestOutOfPolicy</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.101/bookInPolicy"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{ "Recipients": [ { "Value": "user1" }, {
                        "Value": "user2" } ], "AllUsers":false,
                        "Limit": 50, "Total": 2, "Order": "asc"
                        }</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <wadl:response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="OK.">
                  <para>The data was successfully retrieved.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Not Found.">
                  <para>The domain does not exist, the domain does not
                     have Exchange, or the resource was not found.
                     Inspect the itemNotFondFault for more
                     detail.</para>
               </wadl:doc>
            </wadl:response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/resources/{common_name}/bookInPolicy"
         id="d1e42769a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="common_name" style="template" required="true"/>
         <method id="d1e15473" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Policies - Bulk Update">
               <para role="shortdesc">Reads an existing resource
                  mailbox's policies data.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to read an existing resource
                        mailbox's policies data.</para>
                  </listitem>
                  <listitem>
                     <para>Although policies settings can be updated
                        as part of the base Exchange Resource update,
                        a convenience route is also available for just
                        sending the just the policies part of the
                        request.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase role="#Recipients"
                           >Recipients</phrase>
                     </para>
                  </listitem>
               </itemizedlist>
               <para>URL Format</para>
               <para>BookIn, RequestIn, and RequestOutOf policies can
                  all be accessed via the resource's URL followed by
                  /bookInPolicy, /requestInPolicy, and
                  /requestOutOfPolicy, respectively.</para>
               <itemizedlist>
                  <listitem>
                     <para>/v1/customers/{customer account
                        number}/domains/{domain
                        name}/ex/resources/{common
                        name}/bookInPolicy</para>
                  </listitem>
                  <listitem>
                     <para>/v1/customers/{customer account
                        number}/domains/{domain
                        name}/ex/resources/{common
                        name}/requestInPolicy</para>
                  </listitem>
                  <listitem>
                     <para>/v1/customers/{customer account
                        number}/domains/{domain
                        name}/ex/resources/{common
                        name}/requestOutOfPolicy</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.101/bookInPolicy
                        { "Recipients": [ { "Value" : "user2" "Action"
                        : "Remove" }, { "Value" : "user3" "Action" :
                        "Add" } ], "AllUsers\":false }"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <wadl:response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="OK.">
                  <para>The data was successfully retrieved.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Bad Request.">
                  <para>The request was invalid. Inspect the
                     validationFault response for more detail.</para>
               </wadl:doc>
            </wadl:response>
            <wadl:response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  title="Not Found.">
                  <para>The domain does not exist, the domain does not
                     have Exchange, or the resource was not found.
                     Inspect the itemNotFondFault for more
                     detail.</para>
               </wadl:doc>
            </wadl:response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/resources/resourceOptions/AvailableDelegatesRecipients"
         id="d1e43026a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e15584" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="New Resource Options - Available Delegates Recipients">
               <para role="shortdesc">Lists recipients that can be
                  delegates for a new resource on a given
                  domain.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to list recipients that can
                        be delegates for a new resource on a given
                        domain.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase role="#Recipients"
                           >Recipients</phrase> Listing</para>
                  </listitem>
               </itemizedlist>
               <para>Note</para>
               <para>
                  https://api.emailsrvr.com/v1/domains/{domain}/ex/resourceOptions/
                  is the base URL for getting complete sets of valid
                  data that can be submitted as part of an Exchange
                  Resource add operation.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        https://api.emailsrvr.com/v1/domains/example.com/ex/resourceOptions/AvailableDelegatesRecipients"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{ "Recipients": [ { "Value": "user1" }, {
                        "Value": "user10" }, { "Value": "user2" }, {
                        "Value": "user3" }, { "Value": "user4" }, {
                        "Value": "user5" }, { "Value": "user6" }, {
                        "Value": "user7" }, { "Value": "user8" }, {
                        "Value": "user9" } ], "Limit": 50, "Total":
                        10, "Order": "asc" }</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/resources/resourceOptions/AvailablePermissionsRecipients"
         id="d1e43228a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e15650" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="New Resource Options - Available Permissions Recipients">
               <para role="shortdesc">Lists recipients that can have
                  permissions for a new resource on a given
                  domain.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to list recipients that can
                        have permissions for a new resource on a given
                        domain.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase role="#Recipients"
                           >Recipients</phrase> Listing</para>
                  </listitem>
               </itemizedlist>
               <para>Note</para>
               <para>
                  https://api.emailsrvr.com/v1/domains/(domain)/ex/resourceOptions/
                  is the base URL for getting complete sets of valid
                  data that can be submitted as part of an Exchange
                  Resource add operation.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        https://api.emailsrvr.com/v1/domains/example.com/ex/resourceOptions/AvailablePermissionsRecipients"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{ "Recipients": [ { "Value": "user1" }, {
                        "Value": "user10" }, { "Value": "user2" }, {
                        "Value": "user3" }, { "Value": "user4" }, {
                        "Value": "user5" }, { "Value": "user6" }, {
                        "Value": "user7" }, { "Value": "user8" }, {
                        "Value": "user9" } ], "Limit": 50, "Total":
                        10, "Order": "asc" }</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/resources/resourceOptions/availableBookInPolicyRecipients"
         id="d1e43431a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e15716" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="New Resource Options - Available Policy Recipients">
               <para role="shortdesc">Lists recipients that can be in
                  policies for a new resource on a given
                  domain.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to list recipients that can
                        be in policies for a new resource on a given
                        domain.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase role="#Recipients"
                           >Recipients</phrase> Listing</para>
                  </listitem>
               </itemizedlist>
               <para>URL Format</para>
               <para>Available BookIn, RequestIn, and RequestOutOf
                  policy recipients can all be accessed via the
                  resourceOptions URL followed by
                  /availableBookInPolicyRecipients,
                  /availableRequestInPolicyRecipients,
                  /availableRequestOutOfRecipients respectively. The
                  example in this section will use BookInPolicy, but
                  the interface for the three is all the same.</para>
               <itemizedlist>
                  <listitem>
                     <para>/v1/customers/{customer account
                        number}/domains/{domain
                        name}/ex/resources/resourceOptions/availableBookInPolicyRecipients</para>
                  </listitem>
                  <listitem>
                     <para>/v1/customers/{customer account
                        number}/domains/{domain
                        name}/ex/resources/resourceOptions/availableRequestInPolicyRecipients</para>
                  </listitem>
                  <listitem>
                     <para>/v1/customers/{customer account
                        number}/domains/{domain
                        name}/ex/resources/resourceOptions/availableRequestOutOfRecipients</para>
                  </listitem>
               </itemizedlist>
               <para>Note</para>
               <para>
                  https://api.emailsrvr.com/v1/domains/{domain}/ex/resourceOptions/
                  is the base URL for getting complete sets of valid
                  data that can be submitted as part of an Exchange
                  Resource add operation.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        https://api.emailsrvr.com/v1/domains/example.com/ex/resourceOptions/availableBookInPolicyRecipients"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{ "Recipients": [ { "Value": "user1" }, {
                        "Value": "user10" }, { "Value": "user2" }, {
                        "Value": "user3" }, { "Value": "user4" }, {
                        "Value": "user5" }, { "Value": "user6" }, {
                        "Value": "user7" }, { "Value": "user8" }, {
                        "Value": "user9" } ], "Limit": 50, "Total":
                        10, "Order": "asc" }</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/resources/resources/{common_name}/AvailableDelegatesRecipients"
         id="d1e43651a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="common_name" style="template" required="true"/>
         <method id="d1e15812" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Existing Resource Options - Available Delegates Recipients">
               <para role="shortdesc">Lists recipients that can be
                  delegates for an existing resource.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to list recipients that can
                        be delegates for an existing resource.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase role="#Recipients"
                           >Recipients</phrase> Listing</para>
                  </listitem>
               </itemizedlist>
               <para>Note</para>
               <para>
                  https://api.emailsrvr.com/v1/domains/{domain}/ex/resource/{common
                  name}/options is the base URL for getting complete
                  sets of valid data that can be submitted as part of
                  an Exchange Resource edit operation.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.101/options/AvailableDelegatesRecipients"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{ "Recipients": [ { "Value": "user10" }, {
                        "Value": "user4" }, { "Value": "user5" }, {
                        "Value": "user6" }, { "Value": "user7" }, {
                        "Value": "user8" }, { "Value": "user9" } ],
                        "Limit": 50, "Total": 7, "Order": "asc"
                        }</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/resources/resourceOptions/AvailablePermissionsRecipients"
         id="d1e43853a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e15879" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Existing Resource Options - Available Permissions&#xA;Recipients">
               <para role="shortdesc">Lists recipients that have
                  permissions for an existing resource.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to list recipients that can
                        have permissions for an existing
                        resource.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase role="#Recipients"
                           >Recipients</phrase> Listing</para>
                  </listitem>
               </itemizedlist>
               <para>Note</para>
               <para>
                  https://api.emailsrvr.com/v1/domains/{domain}/ex/resource/{common
                  name}/options is the base URL for getting complete
                  sets of valid data that can be submitted as part of
                  an Exchange Resource edit operation.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.101/options/AvailablePermissionsRecipients"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{ "Recipients": [ { "Value": "user1" }, {
                        "Value": "user10" }, { "Value": "user2" }, {
                        "Value": "user3" }, { "Value": "user4" }, {
                        "Value": "user8" }, { "Value": "user9" } ],
                        "Limit": 50, "Total": 7, "Order": "asc"
                        }</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
      <resource
         path="/v1/customers/{customer_account_number}/domains/{domain_name}/ex/resources/resources/{common_name}/availableBookInPolicyRecipients"
         id="d1e44055a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="common_name" style="template" required="true"/>
         <method id="d1e15947" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Existing Resource Options - Available Policy Recipients">
               <para role="shortdesc">Lists recipients that can be in
                  policies for an existing resource.</para>
               <itemizedlist>
                  <listitem>
                     <para>Use this route to list recipients that can
                        be in policies for an existing
                        resource.</para>
                  </listitem>
                  <listitem>
                     <para>Data Model: <phrase role="#Recipients"
                           >Recipients</phrase> Listing</para>
                  </listitem>
               </itemizedlist>
               <para>URL Format</para>
               <para>Available BookIn, RequestIn, and RequestOutOf
                  policy recipients for an existing resource can all
                  be accessed via the resource's URL followed by
                  /availableBookInPolicyRecipients,
                  /availableRequestInPolicyRecipients, and
                  /availableRequestOutOfRecipients, respectively. The
                  example in this section will use BookInPolicy, but
                  the interface for the three is all the same.</para>
               <itemizedlist>
                  <listitem>
                     <para>/v1/customers/{customer account
                        number}/domains/{domain
                        name}/ex/resources/resources/{common
                        name}/availableBookInPolicyRecipients</para>
                  </listitem>
                  <listitem>
                     <para>/v1/customers/{customer account
                        number}/domains/{domain
                        name}/ex/resources/resources/{common
                        name}/availableBookInPolicyRecipients</para>
                  </listitem>
                  <listitem>
                     <para>/v1/customers/{customer account
                        number}/domains/{domain
                        name}/ex/resources/resources/{common
                        name}/availableBookInPolicyRecipients</para>
                  </listitem>
               </itemizedlist>
               <para>Note</para>
               <para>
                  https://api.emailsrvr.com/v1/domains/(domain)/ex/resource/{common
                  name}/options is the base URL for getting complete
                  sets of valid data that can be submitted as part of
                  an Exchange Resource edit operation.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.101/options/availableBookInPolicyRecipients"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{ "Recipients": [ { "Value": "user10" }, {
                        "Value": "user3" }, { "Value": "user4" }, {
                        "Value": "user5" }, { "Value": "user6" }, {
                        "Value": "user7" }, { "Value": "user8" }, {
                        "Value": "user9" } ], "Limit": 50, "Total": 8,
                        "Order": "asc" }</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/resources"
         id="d1e44286a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <method id="d1e16036" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Index">
               <para role="shortdesc">Lists resource mailboxes
                  associated with the domain.</para>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>The Index operation only supports the GET
                        HTTP verb.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/12345678/domains/example.com/ex/resources?size=100\u0026offset=10\u0026contains=conference',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;resourceList
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:resourceList"&gt;
                        &lt;offset&gt;0&lt;/offset&gt;
                        &lt;size&gt;50&lt;/size&gt;
                        &lt;total&gt;3&lt;/total&gt; &lt;resources&gt;
                        &lt;resource&gt;
                        &lt;name&gt;apiexresource43&lt;/name&gt;
                        &lt;displayName&gt;API
                        Test&lt;/displayName&gt;
                        &lt;type&gt;room&lt;/type&gt;
                        &lt;/resource&gt; &lt;resource&gt;
                        &lt;name&gt;apiexresource5&lt;/name&gt;
                        &lt;displayName&gt;API
                        Test&lt;/displayName&gt;
                        &lt;type&gt;equipment&lt;/type&gt;
                        &lt;/resource&gt; &lt;resource&gt;
                        &lt;name&gt;apiexresource85&lt;/name&gt;
                        &lt;displayName&gt;API
                        Test&lt;/displayName&gt;
                        &lt;type&gt;room&lt;/type&gt;
                        &lt;/resource&gt; &lt;/resources&gt;
                        &lt;/resourceList&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"offset":0,"size":50,"total":3,"resources":[{"name":"apiexresource43","displayName":"API
                        Test","type":"room"},{"name":"apiexresource5","displayName":"API
                        Test","type":"equipment"},{"name":"apiexresource85","displayName":"API
                        Test","type":"room"}]}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/resources/{resource_name}"
         id="d1e44495a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="resource_name" style="template" required="true"/>
         <method id="d1e16099" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Show">
               <para role="shortdesc">Returns the resource's
                  details.</para>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>The Show operation only supports the GET
                        HTTP verb.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/12345678/domains/example.com/ex/resource/conference.room',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;resource
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:resource"&gt;
                        &lt;name&gt;apiexresource43&lt;/name&gt;
                        &lt;displayName&gt;API
                        Test&lt;/displayName&gt;
                        &lt;type&gt;room&lt;/type&gt;
                        &lt;/resource&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"name":"apiexresource43","displayName":"API
                        Test","type":"room"}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Resource is not found. Sample Message:
                     Resource not found</para>
               </wadl:doc>
            </response>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entity is found but it's not a resource
                     mailbox. Sample Message: Mailbox is not a
                     resource</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/resources/{resource_name}"
         id="d1e44750a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="resource_name" style="template" required="true"/>
         <method id="d1e16180" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Add">
               <para role="shortdesc">Adds the resource with the
                  specified information. Required fields must be
                  supplied when adding. Others are optional.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>displayName</td>
                        <td>string</td>
                        <td>Resource display name (Required for
                           add)</td>
                     </tr>
                     <tr>
                        <td>type</td>
                        <td>string</td>
                        <td>The resource type, 'room' or 'equipment'
                           (Required for add)</td>
                     </tr>
                     <tr>
                        <td>password</td>
                        <td>string</td>
                        <td>The password to change the settings of the
                           mailbox or add/remove admins (Required for
                           add)</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST
                        '/customers/12345678/domains/example.com/ex/resources/conference.room',
                        { 'displayName' =\u003E 'Conference Room'
                        'type' =\u003E 'room' 'password' =\u003E
                        'abcDEF123' }, 'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>New resource mailbox already exists. Sample
                     Message: The email address
                     conference.room@abc.com is already in use</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>New resource mailbox name doesn't meet the
                     naming requirements. Sample Message: Invalid
                     resource name</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>New display name doesn't meet the naming
                     requirements. Sample Message: Invalid display
                     name</para>
               </wadl:doc>
            </response>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Invalid resource mailbox type. Sample Message:
                     Invalid Resource Type. The input must be:
                     room/equipment</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/resources/{resource_name}"
         id="d1e45057a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="resource_name" style="template" required="true"/>
         <method id="d1e16318" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Edit">
               <para role="shortdesc">Edits the resource with the
                  specified information. Required fields must be
                  supplied when adding. Others are optional.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>displayName</td>
                        <td>string</td>
                        <td>Resource display name (Required for
                           add)</td>
                     </tr>
                     <tr>
                        <td>type</td>
                        <td>string</td>
                        <td>The resource type, 'room' or 'equipment'
                           (Required for add)</td>
                     </tr>
                     <tr>
                        <td>password</td>
                        <td>string</td>
                        <td>The password to change the settings of the
                           mailbox or add/remove admins (Required for
                           add)</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT
                        '/customers/12345678/domains/example.com/ex/resources/all.employees',
                        { 'displayName' =\u003E 'Conference Room A'
                        'password' =\u003E 'ABCd4321' }, 'text/xml',"
                        });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>New resource mailbox already exists. Sample
                     Message: The email address
                     conference.room@abc.com is already in use</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>New resource mailbox name doesn't meet the
                     naming requirements. Sample Message: Invalid
                     resource name</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>New display name doesn't meet the naming
                     requirements. Sample Message: Invalid display
                     name</para>
               </wadl:doc>
            </response>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Invalid resource mailbox type. Sample Message:
                     Invalid Resource Type. The input must be:
                     room/equipment</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/resources/{resource_name}"
         id="d1e45365a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="resource_name" style="template" required="true"/>
         <method id="d1e16457" name="DELETE">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Delete">
               <para role="shortdesc">Deletes the resource.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >DELETE
                        '/customers/12345678/domains/example.com/ex/resources/all.employees',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Resource is not found. Sample Message:
                     Resource not found</para>
               </wadl:doc>
            </response>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entity is found but it's not a resource
                     mailbox. Sample Message: Mailbox is not a
                     resource</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/resources/{resource_name}/admins"
         id="d1e45590a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="resource_name" style="template" required="true"/>
         <method id="d1e16507" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Index Admin">
               <para role="shortdesc">Gets the list of resource
                  admins.</para><para>This refers to the admins that
                  can manage the resource.</para>
               <para>Remarks</para>
               <itemizedlist>
                  <listitem>
                     <para>The Index operation only supports the GET
                        HTTP verb.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET
                        '/customers/12345678/domains/example.com/ex/resources/conference.room/admins',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;resourceAdminList
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:resourceAdminList"&gt;
                        &lt;offset&gt;0&lt;/offset&gt;
                        &lt;size&gt;50&lt;/size&gt;
                        &lt;total&gt;3&lt;/total&gt; &lt;admins&gt;
                        &lt;admin&gt;apiexmailbox70@apidomain90.com&lt;/admin&gt;
                        &lt;admin&gt;apiexmailbox87@apidomain90.com&lt;/admin&gt;
                        &lt;admin&gt;apiexmailbox89@apidomain90.com&lt;/admin&gt;
                        &lt;/admins&gt;
                        &lt;/resourceAdminList&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"offset":0,"size":50,"total":3,"admins":["apiexmailbox70@apidomain90.com","apiexmailbox87@apidomain90.com","apiexmailbox89@apidomain90.com"]}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/resources/{resource_name}/admins/{admin_name}"
         id="d1e45803a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="resource_name" style="template" required="true"/>
         <param name="admin_name" style="template" required="true"/>
         <method id="d1e16575" name="POST">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Add Admins">
               <para role="shortdesc">Adds an admin to the
                  resource.</para>
               <para>This refers to the admins that can manage the
                  resource.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >POST
                        '/customers/12345678/domains/example.com/ex/resources/conference.room/admins/john.smith',
                        {}, 'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Resource is not found. Sample Message:
                     Resource not found</para>
               </wadl:doc>
            </response>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entity is found but it's not a resource
                     mailbox. Sample Message: Mailbox is not a
                     resource</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Admin is already on the resource admin list.
                     Sample Message: User is already on the resource
                     admin list</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customer_account_number}/domains/{domain_name}/ex/resources/{resource_name}/admins/{admin_name}"
         id="d1e46044a1310">
         <param name="customer_account_number" style="template"
            required="true"/>
         <param name="domain_name" style="template" required="true"/>
         <param name="resource_name" style="template" required="true"/>
         <param name="admin_name" style="template" required="true"/>
         <method id="d1e16640" name="DELETE">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Delete Member">
               <para role="shortdesc">Removes the admin from the
                  resource.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >DELETE
                        '/customers/12345678/domains/example.com/ex/resources/conference.room/admins/john.smith',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Resource is not found. Sample Message:
                     Resource not found</para>
               </wadl:doc>
            </response>
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Entity is found but it's not a resource
                     mailbox. Sample Message: Mailbox is not a
                     resource</para>
               </wadl:doc>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>Admin is not found on the resource admin list.
                     Sample Message: User is not on the resource admin
                     list</para>
               </wadl:doc>
            </response>
         </method>
      </resource>
      <resource
         path="/v0/customers/{customeraccountnumber}/sharepoint/settings"
         id="d1e46292a1310">
         <param name="customeraccountnumber" style="template"
            required="true"/>
         <method id="d1e16696" name="GET">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Settings - Show">
               <para role="shortdesc">Returns the status and quota
                  size of the SharePoint service.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >GET '/customers/999999/sharepoint/settings',
                        'text/xml'" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                        &lt;SharePointSettings
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                        xmlns="urn:xml:SharePointSettings"&gt;
                        &lt;enabled&gt;true&lt;/enabled&gt;
                        &lt;size&gt;0.25&lt;/size&gt;
                        &lt;/SharePointSettings&gt;</xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >{"enabled":true,"size":0.25}</xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
      <resource
         path="/v0/customers/{customeraccountnumber}/sharepoint/settings"
         id="d1e46492a1310">
         <param name="customeraccountnumber" style="template"
            required="true"/>
         <method id="d1e16743" name="PUT">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="Settings - Edit (Reseller Only)">
               <para role="shortdesc">Modifies SharePoint's
                  settings.</para>
               <table rules="all">
                  <caption>Request Data</caption>
                  <thead>
                     <tr>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Field Name</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Data Type</b>
                        </td>
                        <td>
                           <b xmlns="http://www.w3.org/1999/xhtml"
                              >Description</b>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>enabled</td>
                        <td>boolean</td>
                        <td>Whether SharePoint is enabled or not. By
                           enabling SharePoint you and/or your
                           customers are agreeing to Rackspace's <link
                              xlink:href="http://www.rackspace.com/information/legal/sharepointappterms"
                              >SharePoint Services Terms and
                              Conditions</link>
                        </td>
                     </tr>
                     <tr>
                        <td>size</td>
                        <td>double</td>
                        <td>SharePoint's storage size in GB. Valid
                           values are .25 and any integer between 1
                           and 50 inclusive. This field will be
                           ignored when SharePoint is disabled.
                           (default value is 0.25GB)</td>
                     </tr>
                  </tbody>
               </table>
            </wadl:doc>
            <request>
               <representation mediaType="application/json"
                  element="noop">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">
                     <xsdxt:code
                        xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                        >PUT '/customers/123456/sharepoint/settings',
                        'text/xml', { 'enabled' =\u003E 'true', 'size'
                        =\u003E '10.0' }" });</xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
      </resource>
   </resources>
</application>
