<?xml version="1.0" encoding="UTF-8"?>
<!-- (C) 2012-2013 OpenStack Foundation, All Rights Reserved -->

<!--*******************************************************-->
<!--         Import Common XML Entities                    -->
<!--                                                       -->
<!--     You can resolve the entites with xmllint          -->
<!--                                                       -->
<!--        xmllint -noent os-image-2.0.wadl               -->
<!--*******************************************************-->
<!DOCTYPE application [<!ENTITY % common  SYSTEM "../v2/common.ent">
%common;]>
<application xmlns="http://wadl.dev.java.net/2009/02"
    xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
    xmlns:db="http://docbook.org/ns/docbook"
    xmlns:common="http://docs.openstack.org/common/api/v1.0"
    xmlns:csapi="http://docs.openstack.org/compute/api/v2"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:wadl="http://wadl.dev.java.net/2009/02"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:imageapi="http://docs.openstack.org/image/api/v2">
    <grammars>
        <include href="../v2/xsd/api.xsd"/>
        <include href="../v2/xsd/api-common.xsd"/>
    </grammars>
    <!--*******************************************************-->
    <!--             All Resources                             -->
    <!--*******************************************************-->
    <resources base="https://glance.example.com/"
        xml:id="os-image-v2.0">
        <resource id="info" path="v2">
            <resource id="images" path="images">
                <method href="#createImage"/>
                <method href="#listImages"/>
                <resource path="{image_id}" id="image_id">
                    <param name="image_id" style="template"
                        type="csapi:uuid">
                        <wadl:doc
                            xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN" title="Image ID">
                            <para>Image ID stored through the image
                                API. Typically a UUID.</para>
                        </wadl:doc>
                    </param>
                    <method href="#getImage"/>
                    <method href="#updateImage"/>
                    <method href="#deleteImage"/>
                    <resource id="file" path="file">
                        <method href="#storeImageFile"/>
                        <method href="#getImageFile"/>
                    </resource>
                    <resource id="Tags" path="tags">
                        <resource path="{tag}" id="tag">
                            <param name="tag" style="template"
                                type="xsd:string">
                                <wadl:doc
                                   xmlns="http://docbook.org/ns/docbook"
                                   xml:lang="EN" title="Image tag"
                                   ><para>Image tag.</para></wadl:doc>
                            </param>
                            <method href="#addImageTag"/>
                            <method href="#deleteImageTag"/>
                        </resource>
                    </resource>
                </resource>
            </resource>
        </resource>
    </resources>
    <!--*******************************************************-->
    <!--               All Methods                             -->
    <!--*******************************************************-->
    <method name="POST" id="createImage">
        <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN"
            title="Create image">
            <para role="shortdesc">Creates a virtual machine (VM)
                image.</para>
        </wadl:doc>
        <request>
            <param name="name" style="plain" type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    xml:lang="EN" title="Images name">
                    <para>Name for the image. The name of an image is
                        not unique to an Image Service node. The API
                        cannot expect users to know the names of
                        images owned by others.</para>
                </wadl:doc>
            </param>
            <param name="id" style="plain" type="csapi:uuid"
                required="false">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    xml:lang="EN" title="Image ID">
                    <para>The image ID.</para>
                </wadl:doc>
            </param>
            <param name="visibility" style="plain" type="xsd:string"
                required="false">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    xml:lang="EN" title="Visibility">
                    <para>Image visibility. Public or private. Default
                        is public.</para>
                </wadl:doc>
            </param>
            <param name="tags" style="plain" type="xsd:dict"
                required="false">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    xml:lang="EN" title="Tags">
                    <para>Image tags.</para>
                </wadl:doc>
            </param>
            <representation mediaType="application/json">
                <doc xml:lang="EN">
                    <xsdxt:code
                        href="../v2/samples/image-create-req.json"/>
                </doc>
            </representation>
        </request>
        <response status="201">
            <doc xml:lang="EN">Successful HTTP response is 201.
                Created with a Location header that contains the
                newly-created URI for the image. Response body
                represents the created image entity. <xsdxt:code
                    href="../v2/samples/image-create-response.json"/>
            </doc>
            <param name="location" style="plain" type="xsd:anyURI"
                required="true"
                path="/common:version/atom:link[@rel='self']/@href">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    xml:lang="EN" title="Image Location">
                    <para>The location for the image identified by a
                        URI.</para>
                </wadl:doc>
                <link resource_type="#createImage" rel="self"/>
            </param>
            <representation mediaType="application/json"
                element="image">
                <doc xml:lang="EN">
                    <xsdxt:code
                        href="../v2/samples/image-create-response.json"
                    />
                </doc>
            </representation>
        </response>
    </method>

    <method name="PATCH" id="updateImage">
        <wadl:doc xml:lang="EN" title="Update image"
            xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Updates a specified image.</para>
            <para>Request body must conform to the
                'application/openstack-images-json-patch' media
                type.</para>
            <para>You can also use the PATCH method to add or remove
                image properties.</para>
            <para>For information about the PATCH method, see <link
                    xlink:href="http://docs.openstack.org/api/openstack-image-service/2.0/content/appendix-b-http-patch-media-types.html"
                    >Appendix B: HTTP PATCH media types</link>.</para>
        </wadl:doc>
        <request>
            <param name="name" style="plain" type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    xml:lang="EN" title="Images name">
                    <para>Name for the image. The name of an image is
                        not unique to a Glance node. The API cannot
                        expect users to know the names of images owned
                        by others.</para>
                </wadl:doc>
            </param>
            <param name="id" style="plain" type="csapi:uuid"
                required="false">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    xml:lang="EN" title="Image ID">
                    <para>The image ID.</para>
                </wadl:doc>
            </param>
            <param name="visibility" style="plain" type="xsd:string"
                required="false">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    xml:lang="EN" title="Visibility">
                    <para>Image visibility. Public or private. Default
                        is public.</para>
                </wadl:doc>
            </param>
            <param name="tags" style="plain" type="xsd:dict"
                required="false">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    xml:lang="EN" title="Tags">
                    <para>Image tags.</para>
                </wadl:doc>
            </param>
            <representation mediaType="application/json"
                element="image">
                <doc xml:lang="EN">
                    <xsdxt:code
                        href="../v2/samples/image-update-req.json"/>
                </doc>
            </representation>
        </request>
        <response status="200">
            <representation mediaType="application/json"
                element="image">
                <doc xml:lang="EN">
                    <xsdxt:code
                        href="../v2/samples/image-details-response.json"
                    />
                </doc>
            </representation>
        </response>
    </method>
    <!-- Get Image -->
    <method name="GET" id="getImage">
        <wadl:doc xml:lang="EN" title="Get image details"
            xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Gets details for a specified
                image.</para>
            <para>Response body is a single image entity.</para>
        </wadl:doc>
        <response status="200">
            <representation mediaType="application/json"
                element="image">
                <doc xml:lang="EN">
                    <xsdxt:code
                        href="../v2/samples/image-details-response.json"
                    />
                </doc>
            </representation>
        </response>
    </method>
    <method name="GET" id="listImages">
        <wadl:doc xml:lang="EN" title="List images"
            xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Lists public virtual machine (VM)
                images.</para>
            <para>Lists a subset of a larger collection of images and
                a link that you can use to get the next set of images.
                You should always check for the presence of a 'next'
                link and use it as the URI in a subsequent HTTP GET
                request. You should follow this pattern until a 'next'
                link is no longer provided. The next link preserves
                any query parameters that you send in your initial
                request. You can use the 'first' link to jump back to
                the first page of the collection. If you prefer to
                paginate through images manually, use the limit and
                marker parameters.</para>
            <para>The list operation accepts several types of query
                parameters that let you filter the results of the
                returned collection.</para>
            <para>A client can provide direct comparison filters using
                most image attributes, such as name=Ubuntu,
                visibility=public, and so on. A client cannot filter
                on tags or anything defined as a 'link' in the
                json-schema, such as self, file, or schema.</para>
        </wadl:doc>
        <request>
            <param xmlns="http://wadl.dev.java.net/2009/02"
                name="limit" style="query" required="false"
                type="xsd:string">
                <wadl:doc xml:lang="EN"
                    xmlns="http://docbook.org/ns/docbook">
                    <para>Use to request a specific page size. Expect
                        a response to a limited request to return
                        between zero and limit items. The typical
                        pattern of limit and marker is to make an
                        initial limited request and then to use the ID
                        of the last image from the response as the
                        marker parameter in a subsequent limited
                        request.</para>
                </wadl:doc>
            </param>
            <param xmlns="http://wadl.dev.java.net/2009/02"
                name="marker" style="query" required="false"
                type="xsd:string">
                <wadl:doc xml:lang="EN"
                    xmlns="http://docbook.org/ns/docbook">
                    <para>Specifies the ID of the last-seen image. The
                        typical pattern of limit and marker is to make
                        an initial limited request and then to use the
                        ID of the last image from the response as the
                        marker parameter in a subsequent limited
                        request.</para>
                </wadl:doc>
            </param>
            <param xmlns="http://wadl.dev.java.net/2009/02"
                name="name" style="query" required="false"
                type="xsd:string">
                <wadl:doc xml:lang="EN"
                    xmlns="http://docbook.org/ns/docbook">
                    <para>Filter parameter. Name of the image as a
                        string.</para>
                </wadl:doc>
            </param>
            <param xmlns="http://wadl.dev.java.net/2009/02"
                name="visibility" style="query" required="false"
                type="imageapi:string">
                <wadl:doc xml:lang="EN"
                    xmlns="http://docbook.org/ns/docbook">
                    <para>Filter parameter. Image visibility. Either
                        public or private.</para>
                </wadl:doc>
            </param>
            <param xmlns="http://wadl.dev.java.net/2009/02"
                name="status" style="query" required="false"
                type="xsd:int">
                <wadl:doc xml:lang="EN"
                    xmlns="http://docbook.org/ns/docbook">
                    <para>Filter parameter. The image status, such as
                        queued, saving, active, killed, deleted, and
                        pending_delete.</para>
                </wadl:doc>
            </param>
            <param xmlns="http://wadl.dev.java.net/2009/02"
                name="size_min" style="query" required="false"
                type="xsd:string" default="ALL">
                <wadl:doc xml:lang="EN"
                    xmlns="http://docbook.org/ns/docbook">
                    <para>Filter parameter. The minimum size of the
                        image in bytes. Use the size_min and size_max
                        parameters to perform greater-than and
                        less-than filtering of images based on their
                        size attribute. The size is measured in bytes
                        and is the size of an image when it is stored
                        on disk. For example, sending a size_min
                        filter of 1048576 and size_max of 4194304
                        filters the container to include only images
                        that are between 1 and 4 MBs in size.</para>
                </wadl:doc>
            </param>
            <param xmlns="http://wadl.dev.java.net/2009/02"
                name="size_max" style="query" required="false"
                type="xsd:string" default="ALL">
                <wadl:doc xml:lang="EN"
                    xmlns="http://docbook.org/ns/docbook">
                    <para>Filter parameter. The maximum size of the
                        image in bytes. Use the size_min and size_max
                        parameters to perform greater-than and
                        less-than filtering of images based on their
                        size attribute. The size is measured in bytes
                        and is the size of an image when it is stored
                        on disk.</para>
                </wadl:doc>
            </param>
            <param xmlns="http://wadl.dev.java.net/2009/02"
                name="sort_key" style="query" required="false"
                type="xsd:string" default="ALL">
                <wadl:doc xml:lang="EN"
                    xmlns="http://docbook.org/ns/docbook">
                    <para>Sort key. You can sort the results by using
                        the 'sort_key' and 'sort_dir' parameters. All
                        image attributes can be used as the sort_key
                        except tags and link attributes. Default is
                        'created_at.' The API uses the natural sorting
                        of whatever image attribute is provided as the
                        'sort_key.'</para>
                </wadl:doc>
            </param>
            <param xmlns="http://wadl.dev.java.net/2009/02"
                name="sort_dir" style="query" required="false"
                type="xsd:string" default="ALL">
                <wadl:doc xml:lang="EN"
                    xmlns="http://docbook.org/ns/docbook">
                    <para>Sort direction. You can sort the results by
                        using the 'sort_key' and 'sort_dir'
                        parameters. Valid values are 'asc' (ascending)
                        and 'desc' (descending). Default is
                        'desc.'</para>
                </wadl:doc>
            </param>
        </request>
        <response status="200">
            <representation mediaType="application/json">
                <doc xml:lang="EN">
                    <xsdxt:code
                        href="../v2/samples/image-list-response.json"
                    />
                </doc>
            </representation>
        </response>
    </method>
    <method name="DELETE" id="deleteImage">
        <wadl:doc xml:lang="EN" title="Delete image"
            xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Deletes a specified image.</para>
            <para>You cannot delete images with the 'protected'
                attribute set to true (boolean); the response returns
                the HTTP 403 status code.</para>
            <para>You must first set the 'protected' attribute to
                false (boolean) and then perform the delete. The
                response is empty and returns the HTTP 204 status
                code.</para>
        </wadl:doc>
        <response status="204"/>
    </method>
    <method name="PUT" id="storeImageFile">
        <wadl:doc xml:lang="EN" title="Upload binary image data"
            xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Uploads binary image data.</para>
            <para>An image record must exist before a client can store
                binary image data with it.</para>
            <para>Content-Type must be 'application/octet-stream.'
                Complete contents of request body is stored and is
                accessible in its entirety by issuing a GET request to
                the same URI.</para>
            <para>Returns HTTP 204 status code.</para>
        </wadl:doc>
        <response status="204"/>
    </method>
    <method name="GET" id="getImageFile">
        <wadl:doc xml:lang="EN" title="Download binary image data"
            xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Downloads binary image data.</para>
            <para>Response body contains the raw binary data that
                represents the actual virtual disk. The <link
                    xlink:href="http://www.ietf.org/rfc/rfc1864.txt"
                    >Content-Type header</link> is
                'application/octet-stream.' The Content-MD5 header
                contains an MD5 checksum of the image data. Clients
                are encouraged to verify the integrity of the image
                data they receive by using this checksum.</para>
            <para>If no image data exists, returns the HTTP 204 status
                code.</para>
        </wadl:doc>
        <response status="200"/>
    </method>
    <method name="PUT" id="addImageTag">
        <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN"
            title="Add image tag">
            <para role="shortdesc">Adds a specified tag to a specified
                image.</para>
            <para>The tag you want to add should be encoded into the
                request URI. For example, to tag image
                e7db3b45-8db7-47ad-8109-3fb55c2c24fd with 'miracle',
                you would <code>PUT
                    /v2/images/e7db3b45-8db7-47ad-8109-3fb55c2c24fd/tags/miracle</code>.
                The request body is ignored.</para>
            <para>An image tag can be up to 255 characters in length.
                See the 'image' json-schema to determine which
                characters are allowed.</para>
            <para>An image can only be tagged once with a specific
                string. Multiple attempts to tag an image with the
                same string results in a single instance of that
                string being added to the tags list for the image. An
                HTTP status of 204 is returned.</para>
        </wadl:doc>
        <response status="204"/>
    </method>
    <method name="DELETE" id="deleteImageTag">
        <wadl:doc xml:lang="EN" title="Delete image tag"
            xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Deletes a specified tag from a
                specified image.</para>
            <para>Encode the tag that you want to delete into the
                request URI. For example, to remove the tag
                    <code>miracle</code> from image
                    <code>e7db3b45-8db7-47ad-8109-3fb55c2c24fd</code>,
                make a <code>DELETE
                    /v2/images/e7db3b45-8db7-47ad-8109-3fb55c2c24fd/tags/miracle</code>
                request. The request body is ignored. An HTTP 204
                status code is returned. Subsequent attempts to delete
                the tag result in a 404 response code.</para>
        </wadl:doc>
        <response status="204"/>
        <response status="404"/>
    </method>
</application>
